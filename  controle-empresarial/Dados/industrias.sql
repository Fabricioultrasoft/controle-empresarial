/*******************************************************************************
 * Selected metadata objects
 * -------------------------
 * Extracted at 11/08/2011 08:34:14
 ******************************************************************************/

/*******************************************************************************
 * Roles
 * -----
 * Extracted at 11/08/2011 08:34:14
 ******************************************************************************/

/* "PUBLIC" is a system role, no CREATE ROLE statement. */
/*******************************************************************************
 * UDFs
 * ----
 * Extracted at 11/08/2011 08:34:14
 ******************************************************************************/

DECLARE EXTERNAL FUNCTION ABS
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_abs' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION ADD_USER
    INTEGER,
    CSTRING(256),
    CSTRING(32),
    CSTRING(9),
    CSTRING(32),
    CSTRING(32),
    CSTRING(32),
    CSTRING(32),
    CSTRING(32),
    CSTRING(9)
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_add_user' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION BITAND
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_bitAnd' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION BITNOT
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_bitNot' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION BITOR
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_bitOr' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION BITXOR
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_bitXor' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION B_LINE
    BLOB,
    INTEGER
    RETURNS CSTRING(256)
    ENTRY_POINT 'fn_b_line' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION B_LINE_COUNT
    BLOB
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_b_line_count' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION B_LONGLINE
    BLOB,
    INTEGER
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_b_longline' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION B_LONGSUBSTR
    BLOB,
    INTEGER,
    INTEGER
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_b_longsubstr' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION B_MAX_SEGMENT
    BLOB
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_b_max_segment' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION B_NUMBER_SEGMENTS
    BLOB
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_b_number_segments' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION B_PUT_SEGMENT
    CSTRING(16384),
    BLOB
    RETURNS PARAMETER 2
    ENTRY_POINT 'fn_b_put_segment' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION B_SUBSTR
    BLOB,
    INTEGER,
    INTEGER
    RETURNS CSTRING(256)
    ENTRY_POINT 'fn_b_substr' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION B_TOTAL_LENGTH
    BLOB
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_b_total_length' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION CALCEXPR
    CSTRING(16384),
    CSTRING(16384)
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_CalcExpr' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION CEIL
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_ceil' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION CHR
    SMALLINT
    RETURNS CSTRING(2)
    ENTRY_POINT 'fn_chr' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION CIF
    INTEGER,
    CSTRING(256),
    CSTRING(256)
    RETURNS CSTRING(256)
    ENTRY_POINT 'fn_cif' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION DATETOSTR
    TIMESTAMP,
    CSTRING(256)
    RETURNS CSTRING(256) FREE_IT
    ENTRY_POINT 'fn_datetostr' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION DAYPERMONTH
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_daypermonth' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION DAYSBETWEEN
    TIMESTAMP,
    TIMESTAMP
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_daysbetween' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION DELETE_USER
    INTEGER,
    CSTRING(256),
    CSTRING(32),
    CSTRING(32),
    CSTRING(9)
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_delete_user' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION DIF
    INTEGER,
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_dif' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION DIV
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_div' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION DOW
    TIMESTAMP
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_dow' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION DTIF
    INTEGER,
    TIMESTAMP,
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'fn_dtif' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION DZERO
    DOUBLE PRECISION,
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_dividezero' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION ENCODEDATE
    INTEGER,
    INTEGER,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'fn_encodedate' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION ENCODEDATETIME
    INTEGER,
    INTEGER,
    INTEGER,
    INTEGER,
    INTEGER,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'fn_encodedatetime' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION EXPRISVALID
    CSTRING(16384),
    CSTRING(16384)
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_ExprIsValid' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION EXTRACTDATE
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'fn_extractdate' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION EXTRACTTIME
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'fn_extracttime' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION FIRSTDAYMONTH
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'fn_firstdaymonth' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION FLOOR
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_floor' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION GETBIT
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_getBit' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION GETRANDOM
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_getRandom' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION IIF
    INTEGER,
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_iif' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION INCDATE
    TIMESTAMP,
    INTEGER,
    INTEGER,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'fn_incdate' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION INITRANDOM
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_initRandom' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION ISLEAPYEAR
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_isleapyear' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LASTDAYMONTH
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'fn_lastdaymonth' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGCIF
    INTEGER,
    CSTRING(16384),
    CSTRING(16384)
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_cif' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGLTRIM
    CSTRING(16384)
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_ltrim' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGPADLEFT
    CSTRING(16384),
    SMALLINT,
    CSTRING(2)
    RETURNS CSTRING(16384) FREE_IT
    ENTRY_POINT 'fn_longpadleft' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGPADRIGHT
    CSTRING(16384),
    SMALLINT,
    CSTRING(2)
    RETURNS CSTRING(16384) FREE_IT
    ENTRY_POINT 'fn_longpadright' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGRLATIN
    CSTRING(16384)
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_rlatin' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGRLOWER
    CSTRING(16384)
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_rlower' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGRTRANSLIT
    CSTRING(16384)
    RETURNS CSTRING(16384) FREE_IT
    ENTRY_POINT 'fn_longrtranslit' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGRTRIM
    CSTRING(16384)
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_rtrim' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGRUPPER
    CSTRING(16384)
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_rupper' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGSTRREPEAT
    CSTRING(16384),
    INTEGER
    RETURNS CSTRING(16384) FREE_IT
    ENTRY_POINT 'fn_longstrrepeat' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGSTRREPLACE
    CSTRING(16384),
    CSTRING(16384),
    CSTRING(16384)
    RETURNS CSTRING(16384) FREE_IT
    ENTRY_POINT 'fn_longstrreplace' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGSTRSTUFF
    CSTRING(16384),
    INTEGER,
    INTEGER,
    CSTRING(16384)
    RETURNS CSTRING(16384) FREE_IT
    ENTRY_POINT 'fn_longstrstuff' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGSUBSTR
    CSTRING(16384),
    INTEGER,
    INTEGER
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_substr' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGTRIM
    CSTRING(16384)
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_trim' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LONGWORDNUM
    CSTRING(16384),
    INTEGER,
    CSTRING(32),
    SMALLINT
    RETURNS CSTRING(16384)
    ENTRY_POINT 'fn_wordnum' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION LTRIM
    CSTRING(256)
    RETURNS CSTRING(256)
    ENTRY_POINT 'fn_ltrim' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION MAXNUM
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_maxnum' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION MINNUM
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_minnum' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION MOD
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_mod' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION MODIFY_USER
    INTEGER,
    CSTRING(256),
    CSTRING(32),
    CSTRING(9),
    CSTRING(32),
    CSTRING(32),
    CSTRING(32),
    CSTRING(32),
    CSTRING(32),
    CSTRING(9)
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_modify_user' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION MSGBOX
    CSTRING(16384),
    CSTRING(256),
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_msgbox' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION ORD
    CSTRING(2)
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'fn_ord' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION PADLEFT
    CSTRING(256),
    SMALLINT,
    CSTRING(2)
    RETURNS CSTRING(256) FREE_IT
    ENTRY_POINT 'fn_padleft' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION PADRIGHT
    CSTRING(256),
    SMALLINT,
    CSTRING(2)
    RETURNS CSTRING(256) FREE_IT
    ENTRY_POINT 'fn_padright' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION PLNCTAMAIN
    CSTRING(50)
    RETURNS CSTRING(50)
    ENTRY_POINT 'PlnCtaMain' MODULE_NAME 'plnctaudf';
DECLARE EXTERNAL FUNCTION PLNCTAROOT
    CSTRING(50)
    RETURNS CSTRING(50)
    ENTRY_POINT 'PlnCtaRoot' MODULE_NAME 'plnctaudf';
DECLARE EXTERNAL FUNCTION POWER
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_power' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION QUARTER
    TIMESTAMP
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_quarter' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION RLATIN
    CSTRING(256)
    RETURNS CSTRING(256)
    ENTRY_POINT 'fn_rlatin' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION RLOWER
    CSTRING(256)
    RETURNS CSTRING(256)
    ENTRY_POINT 'fn_rlower' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION ROUND
    DOUBLE PRECISION,
    INTEGER
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_round' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION RTRANSLIT
    CSTRING(256)
    RETURNS CSTRING(256) FREE_IT
    ENTRY_POINT 'fn_rtranslit' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION RTRIM
    CSTRING(256)
    RETURNS CSTRING(256)
    ENTRY_POINT 'fn_rtrim' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION RUPPER
    CSTRING(256)
    RETURNS CSTRING(256)
    ENTRY_POINT 'fn_rupper' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION SETBIT
    INTEGER,
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_setBit' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION SOFTROUND
    DOUBLE PRECISION,
    INTEGER
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_softround' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION SOUNDEX
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'Soundex' MODULE_NAME 'SoundexBR';
DECLARE EXTERNAL FUNCTION STRCOUNT
    CSTRING(256),
    CSTRING(16384)
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_strcount' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION STRLEN
    CSTRING(16384)
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_strlen' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION STRPOS
    CSTRING(16384),
    CSTRING(16384)
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_strpos' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION STRREPEAT
    CSTRING(256),
    INTEGER
    RETURNS CSTRING(256) FREE_IT
    ENTRY_POINT 'fn_strrepeat' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION STRREPLACE
    CSTRING(256),
    CSTRING(256),
    CSTRING(256)
    RETURNS CSTRING(256) FREE_IT
    ENTRY_POINT 'fn_strreplace' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION STRSTUFF
    CSTRING(256),
    INTEGER,
    INTEGER,
    CSTRING(256)
    RETURNS CSTRING(256) FREE_IT
    ENTRY_POINT 'fn_strstuff' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION SUBSTR
    CSTRING(256),
    INTEGER,
    INTEGER
    RETURNS CSTRING(256)
    ENTRY_POINT 'fn_substr' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION UDF_ABS
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Abs' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ACOS
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_ACos' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_AGE
    TIMESTAMP
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Age' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_AGE2
    TIMESTAMP,
    TIMESTAMP
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Age2' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_AND
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_And' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ANSILOWER
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_AnsiLower' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ANSIUPPER
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_AnsiUpper' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ASIN
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_ASin' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ATAN
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_ATan' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_CEIL
    DOUBLE PRECISION
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Ceil' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_CHR
    CSTRING(1),
    SMALLINT
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_Chr' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_COLLATEBR
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_CollateBr' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_COPY
    CSTRING(254),
    INTEGER,
    INTEGER
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_Copy' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_COS
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Cos' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_COTAN
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_CoTan' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_DAY
    TIMESTAMP
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_Day' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_DAYFRAC
    TIMESTAMP
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_DayFrac' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_DAYNAME
    CSTRING(15),
    TIMESTAMP
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_DayName' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_DAYSBETWEEN
    TIMESTAMP,
    TIMESTAMP
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_DaysBetween' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_DAYSPAN
    TIMESTAMP,
    TIMESTAMP
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_DaySpan' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_DEGTORAD
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_DegToRad' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_DIGITS
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_Digits' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_DIV
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Div' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_DZERO
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_DZero' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ENCDATE
    TIMESTAMP,
    SMALLINT,
    SMALLINT,
    SMALLINT
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_EncDate' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ENCTIME
    TIMESTAMP,
    SMALLINT,
    SMALLINT,
    SMALLINT
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_EncTime' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ENCTS
    TIMESTAMP,
    SMALLINT,
    SMALLINT,
    SMALLINT,
    SMALLINT,
    SMALLINT,
    SMALLINT
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_EncTS' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_EXP
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Exp' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_FACTORIAL
    INTEGER
    RETURNS NUMERIC(18, 0) BY VALUE
    ENTRY_POINT 'udf_Factorial' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_FLOOR
    DOUBLE PRECISION
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Floor' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_FRAC
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Frac' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_GETBIT
    INTEGER,
    SMALLINT
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_GetBit' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_HEXTOINT
    CSTRING(20)
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_HexToInt' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_HOUR
    TIMESTAMP
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_Hour' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_HOURSBETWEEN
    TIMESTAMP,
    TIMESTAMP
    RETURNS NUMERIC(18, 0) BY VALUE
    ENTRY_POINT 'udf_HoursBetween' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_HOURSPAN
    TIMESTAMP,
    TIMESTAMP
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_HourSpan' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_HYPOT
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Hypot' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INCDATE
    TIMESTAMP,
    INTEGER,
    INTEGER,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_IncDate' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INCDAY
    TIMESTAMP,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_IncDay' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INCHOUR
    TIMESTAMP,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_IncHour' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INCMINUTE
    TIMESTAMP,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_IncMinute' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INCMONTH
    TIMESTAMP,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_IncMonth' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INCSECOND
    TIMESTAMP,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_IncSecond' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INCTIME
    TIMESTAMP,
    INTEGER,
    INTEGER,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_IncTime' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INCTS
    TIMESTAMP,
    INTEGER,
    INTEGER,
    INTEGER,
    INTEGER,
    INTEGER,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_IncTS' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INCWEEK
    TIMESTAMP,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_IncWeek' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INCYEAR
    TIMESTAMP,
    INTEGER
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_IncYear' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INT
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Int' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_INTTOHEX
    CSTRING(20),
    INTEGER,
    INTEGER
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_IntToHex' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ISALPHA
    CSTRING(254)
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_IsAlpha' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ISDIGIT
    CSTRING(254)
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_IsDigit' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ISLOWER
    CSTRING(254)
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_IsLower' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ISUPPER
    CSTRING(254)
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_IsUpper' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_LASTDAY
    SMALLINT,
    SMALLINT
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_LastDay' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_LEFT
    CSTRING(254),
    INTEGER
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_Left' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_LEN
    CSTRING(254)
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Len' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_LNXP1
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_LnXP1' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_LOG10
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Log10' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_LOG2
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Log2' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_LOGN
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_LogN' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_LOWER
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_Lower' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_LTRIM
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_LTrim' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MAX
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Max' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MAXDATE
    TIMESTAMP,
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_MaxDate' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MAXTIME
    TIMESTAMP,
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_MaxTime' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MAXTS
    TIMESTAMP,
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_MaxTS' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MIN
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Min' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MINDATE
    TIMESTAMP,
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_MinDate' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MINTIME
    TIMESTAMP,
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_MinTime' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MINTS
    TIMESTAMP,
    TIMESTAMP
    RETURNS TIMESTAMP
    ENTRY_POINT 'udf_MinTS' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MINUTE
    TIMESTAMP
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_Minute' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MINUTESBETWEEN
    TIMESTAMP,
    TIMESTAMP
    RETURNS NUMERIC(18, 0) BY VALUE
    ENTRY_POINT 'udf_MinutesBetween' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MINUTESPAN
    TIMESTAMP,
    TIMESTAMP
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_MinuteSpan' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MOD
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Mod' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MONTH
    TIMESTAMP
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_Month' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MONTHEND
    TIMESTAMP,
    SMALLINT,
    SMALLINT
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_MonthEnd' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MONTHNAME
    CSTRING(15),
    TIMESTAMP
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_MonthName' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MONTHSBETWEEN
    TIMESTAMP,
    TIMESTAMP
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_MonthsBetween' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MONTHSPAN
    TIMESTAMP,
    TIMESTAMP
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_MonthSpan' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_MONTHSTART
    TIMESTAMP,
    SMALLINT,
    SMALLINT
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_MonthStart' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_NOT
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Not' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_NVL
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_NVL' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ODD
    INTEGER
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_Odd' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_OR
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Or' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ORD
    CSTRING(254)
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_Ord' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_PADL
    CSTRING(254),
    CSTRING(254),
    INTEGER
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_PadL' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_PADR
    CSTRING(254),
    CSTRING(254),
    INTEGER
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_PadR' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_PI
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Pi' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_POS
    CSTRING(254),
    CSTRING(254)
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Pos' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_POWER
    DOUBLE PRECISION,
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Power' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_RADTODEG
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_RadToDeg' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_RAND
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Rand' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_RANDINT
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_RandInt' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_REPEAT
    CSTRING(254),
    CSTRING(254),
    INTEGER
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_Repeat' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_REPLACE
    CSTRING(254),
    CSTRING(254),
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_Replace' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_RIGHT
    CSTRING(254),
    INTEGER
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_Right' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ROUND
    DOUBLE PRECISION
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Round' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_ROUNDDEC
    DOUBLE PRECISION,
    SMALLINT
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_RoundDec' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_RTRIM
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_RTrim' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SDAYNAME
    CSTRING(5),
    TIMESTAMP
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_SDayName' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SECOND
    TIMESTAMP
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_Second' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SECONDSBETWEEN
    TIMESTAMP,
    TIMESTAMP
    RETURNS NUMERIC(18, 0) BY VALUE
    ENTRY_POINT 'udf_SecondsBetween' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SECONDSPAN
    TIMESTAMP,
    TIMESTAMP
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_SecondSpan' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SETBIT
    INTEGER,
    SMALLINT,
    SMALLINT
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_SetBit' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SHL
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_ShL' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SHR
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_ShR' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SIGN
    DOUBLE PRECISION
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_Sign' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SIN
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Sin' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SMONTHNAME
    CSTRING(5),
    TIMESTAMP
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_SMonthName' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SPACE
    CSTRING(254),
    INTEGER
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_Space' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SQR
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Sqr' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_SQRT
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Sqrt' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_STRIP
    CSTRING(254),
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_Strip' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_STROFCHR
    CSTRING(254),
    CSTRING(1),
    INTEGER
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_StrOfChr' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_STRZERO
    CSTRING(20),
    INTEGER,
    INTEGER
    RETURNS PARAMETER 1
    ENTRY_POINT 'udf_StrZero' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_STUFF
    CSTRING(254),
    INTEGER,
    INTEGER,
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_Stuff' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_TAN
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Tan' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_TRIM
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_Trim' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_TRUNC
    DOUBLE PRECISION
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Trunc' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_TRUNCDEC
    DOUBLE PRECISION,
    SMALLINT
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_TruncDec' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_UPPER
    CSTRING(254)
    RETURNS CSTRING(254)
    ENTRY_POINT 'udf_Upper' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_VER
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_Ver' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_WEEKDAY
    TIMESTAMP
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_WeekDay' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_WEEKSBETWEEN
    TIMESTAMP,
    TIMESTAMP
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_WeeksBetween' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_WEEKSPAN
    TIMESTAMP,
    TIMESTAMP
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_WeekSpan' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_XOR
    INTEGER,
    INTEGER
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_Xor' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_YEAR
    TIMESTAMP
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_Year' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_YEARDAY
    TIMESTAMP
    RETURNS SMALLINT BY VALUE
    ENTRY_POINT 'udf_YearDay' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_YEARSBETWEEN
    TIMESTAMP,
    TIMESTAMP
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'udf_YearsBetween' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION UDF_YEARSPAN
    TIMESTAMP,
    TIMESTAMP
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'udf_YearSpan' MODULE_NAME 'tbudf';
DECLARE EXTERNAL FUNCTION WORDCOUNT
    CSTRING(16384),
    CSTRING(32),
    SMALLINT
    RETURNS INTEGER BY VALUE
    ENTRY_POINT 'fn_wordcount' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION WORDNUM
    CSTRING(16384),
    INTEGER,
    CSTRING(32),
    SMALLINT
    RETURNS CSTRING(256)
    ENTRY_POINT 'fn_wordnum' MODULE_NAME 'rfunc';
DECLARE EXTERNAL FUNCTION Z
    DOUBLE PRECISION
    RETURNS DOUBLE PRECISION BY VALUE
    ENTRY_POINT 'fn_z' MODULE_NAME 'rfunc';
/*******************************************************************************
 * Generators
 * ----------
 * Extracted at 11/08/2011 08:34:14
 ******************************************************************************/

CREATE GENERATOR APRESENTACAO_GEN;
CREATE GENERATOR CELULAS_GEN;
CREATE GENERATOR CIDADES_TRANSPORTADORAS_GEN;
CREATE GENERATOR CODPECA_TRANSF;
CREATE GENERATOR COMP_COMPRADORES_GEN;
CREATE GENERATOR COMP_GRUPOSCOMPRADORES_GEN;
CREATE GENERATOR CONT_GRPATRIMO_GEN;
CREATE GENERATOR DEPOSITOS_GEN;
CREATE GENERATOR EQUIPAMENTOS_FUNCIONARIOS_GEN;
CREATE GENERATOR EQUIPAMENTOS_GEN;
CREATE GENERATOR EQUIPAMENTOS_IMAGEM_GEN;
CREATE GENERATOR EQUIPAMENTOS_NORMAS_GEN;
CREATE GENERATOR EQUIPAMENTOS_PECAS_GEN;
CREATE GENERATOR EQUIPAMENTOS_SERVICOS_GEN;
CREATE GENERATOR EQUIPAMENTOS_SINTOMAS_GEN;
CREATE GENERATOR EXTINTORES_CODEXTINTOR_GEN_NEW;
CREATE GENERATOR FERRAMCOMPL_SEQUENCIAL_GEN;
CREATE GENERATOR FIS_PLANOCONTASSUB_GEN;
CREATE GENERATOR FIS_PLANOCONTAS_GEN;
CREATE GENERATOR GEN_ACIDENTESGRUPOS_ID;
CREATE GENERATOR GEN_ACIDENTESSUBGRUPOS_ID;
CREATE GENERATOR GEN_ACIDENTES_ID;
CREATE GENERATOR GEN_ALMOXARIFADOS_ID;
CREATE GENERATOR GEN_ALM_SOLICITACAO_ID;
CREATE GENERATOR GEN_ALM_SOLIC_ITENS_ID;
CREATE GENERATOR GEN_ANLPPROD_ID;
CREATE GENERATOR GEN_BOLETODETALHADO_SEQUENCIAL;
CREATE GENERATOR GEN_CADASTRO_ID;
CREATE GENERATOR GEN_CAMINHOES_ID;
CREATE GENERATOR GEN_CARTAOCREDITO_ID;
CREATE GENERATOR GEN_CENTROCUSTO_ID;
CREATE GENERATOR GEN_CEP0_ID;
CREATE GENERATOR GEN_CLASSESDECOBRANCA_CODIGO;
CREATE GENERATOR GEN_CLIENTES_ID;
CREATE GENERATOR GEN_COTACAOCOMPRA_ID;
CREATE GENERATOR GEN_CTABCOCLIENTE_ID;
CREATE GENERATOR GEN_DEPARTAMENTOS_ID;
CREATE GENERATOR GEN_DOCUMENTOS_ID;
CREATE GENERATOR GEN_EMPRESA_ID;
CREATE GENERATOR GEN_ENDERECOS_ID;
CREATE GENERATOR GEN_ENTRADADEPRODUTOS_ID;
CREATE GENERATOR GEN_FERIADO_ID;
CREATE GENERATOR GEN_FILIAL_ID;
CREATE GENERATOR GEN_FIN_BANCOS_BOLETOS_ID;
CREATE GENERATOR GEN_FIN_BOLETOMSG_ID;
CREATE GENERATOR GEN_FIN_CONDICAOPAGTOS_ID;
CREATE GENERATOR GEN_FIN_CONDPAGTO_ITEM_ID;
CREATE GENERATOR GEN_FIN_INDICESFINANCEIROS_ID;
CREATE GENERATOR GEN_FIN_NATUREZAS_ID;
CREATE GENERATOR GEN_FIN_ORCAMENTOS_ID;
CREATE GENERATOR GEN_FIN_TIPOEMPRESTIMOS_ID;
CREATE GENERATOR GEN_FIN_TIPOINSTRUCACOBRANCA_ID;
CREATE GENERATOR GEN_FIN_TIPOOCORCOBRANCA_ID;
CREATE GENERATOR GEN_FIS_BANCOS_CONTRATOS_ID;
CREATE GENERATOR GEN_FORNECEDORES_ID;
CREATE GENERATOR GEN_FORN_CONTATOS_ID;
CREATE GENERATOR GEN_FUNCIONARIO_ID;
CREATE GENERATOR GEN_GRPATRIMO_ID;
CREATE GENERATOR GEN_IDIOMAS_ID;
CREATE GENERATOR GEN_LOGRADOURO_ID;
CREATE GENERATOR GEN_LOG_CALENDARIOS_ID;
CREATE GENERATOR GEN_LOG_CALENDARIOS_ITEM_ID;
CREATE GENERATOR GEN_LOG_REGRAENTREGA_ID;
CREATE GENERATOR GEN_LOG_REGRAENTREGA_ITEM_ID;
CREATE GENERATOR GEN_LOG_ROTAS_ID;
CREATE GENERATOR GEN_LOG_TEMPOSERVICO_ID;
CREATE GENERATOR GEN_LOG_TEMPOSERVICO_ITEM_ID;
CREATE GENERATOR GEN_LOG_TIPOSCARGAS_ID;
CREATE GENERATOR GEN_LOG_TIPOZONAARMAZENAGEM_ID;
CREATE GENERATOR GEN_LOG_UNITIZADORES_ID;
CREATE GENERATOR GEN_LOG_ZONAS_ID;
CREATE GENERATOR GEN_LOG_ZONAS_SETORES_ID;
CREATE GENERATOR GEN_LOG_ZONA_SETOR_PONTOS_ID;
CREATE GENERATOR GEN_MAN_5W2H_FUNCIONARIOS_ID;
CREATE GENERATOR GEN_MAN_5W2H_ID;
CREATE GENERATOR GEN_MAN_5W2H_NORMAS_ID;
CREATE GENERATOR GEN_MAN_5W2H_PECAS_ID;
CREATE GENERATOR GEN_MAN_AREAEXEC_ANEXO_ID;
CREATE GENERATOR GEN_MAN_AREAEXEC_ID;
CREATE GENERATOR GEN_MAN_AS_BUILT_ID;
CREATE GENERATOR GEN_MAN_AUSENCIAS_ID;
CREATE GENERATOR GEN_MAN_BANCO_AUSENCIAS_ID;
CREATE GENERATOR GEN_MAN_BANCO_HORAS_EXTRAS_ID;
CREATE GENERATOR GEN_MAN_CAUSAS_ID;
CREATE GENERATOR GEN_MAN_CAUSAS_LISTA_ID;
CREATE GENERATOR GEN_MAN_CHECKLIST_ID;
CREATE GENERATOR GEN_MAN_DEFEITOS_ID;
CREATE GENERATOR GEN_MAN_DISPAROS_ID;
CREATE GENERATOR GEN_MAN_EQUIPAMENTOS_N_ID;
CREATE GENERATOR GEN_MAN_EQUIPES_FUNC_ID;
CREATE GENERATOR GEN_MAN_EQUIPES_ID;
CREATE GENERATOR GEN_MAN_FAMILIAS_NEW_ID;
CREATE GENERATOR GEN_MAN_FAMILIA_NORMAS_ID;
CREATE GENERATOR GEN_MAN_FICHATECNICA_ID;
CREATE GENERATOR GEN_MAN_FUNCOES_ID;
CREATE GENERATOR GEN_MAN_HISTORICOS_ID;
CREATE GENERATOR GEN_MAN_INSPECAO_N_ID;
CREATE GENERATOR GEN_MAN_INTERVENCAO_N_ID;
CREATE GENERATOR GEN_MAN_MAQUINAS_N_ID;
CREATE GENERATOR GEN_MAN_MAQUINAS_PECAS_ID;
CREATE GENERATOR GEN_MAN_ORIGEM_NEW_ID;
CREATE GENERATOR GEN_MAN_OS_ID;
CREATE GENERATOR GEN_MAN_PRIORIDADE_ID;
CREATE GENERATOR GEN_MAN_PRIORIDADE_N_ID;
CREATE GENERATOR GEN_MAN_PROCESSOS_N_ID;
CREATE GENERATOR GEN_MAN_SERVICOSPADRAO_ID;
CREATE GENERATOR GEN_MAN_SERVICOS_FUNCAO_ID;
CREATE GENERATOR GEN_MAN_SERVICOS_N_ID;
CREATE GENERATOR GEN_MAN_SINTOMAS_FERR_ID;
CREATE GENERATOR GEN_MAN_SINTOMAS_INTERV_ID;
CREATE GENERATOR GEN_MAN_SINTOMAS_NORMAS_ID;
CREATE GENERATOR GEN_MAN_SINTOMAS_N_ID;
CREATE GENERATOR GEN_MAN_SINTOMAS_PECAS_ID;
CREATE GENERATOR GEN_MAN_SINTOMA_DETALHAMENTO_ID;
CREATE GENERATOR GEN_MAN_SINT_CARACT_ID;
CREATE GENERATOR GEN_MAN_SINT_ESPEC_ID;
CREATE GENERATOR GEN_MAN_SOLUCAO_ID;
CREATE GENERATOR GEN_MAN_SS_N_ID;
CREATE GENERATOR GEN_MAN_TAGS_ID;
CREATE GENERATOR GEN_MOTORISTAS_ID;
CREATE GENERATOR GEN_NORMAS_ID;
CREATE GENERATOR GEN_ORCAMENTOS_ID;
CREATE GENERATOR GEN_PATMOVIMENTO_ID;
CREATE GENERATOR GEN_PATRIMONIO_ID;
CREATE GENERATOR GEN_PATTIPOOCOR_ID;
CREATE GENERATOR GEN_PAT_OCOR_ID;
CREATE GENERATOR GEN_PCP_FORMULACAO_ID;
CREATE GENERATOR GEN_PCP_PROC_FUNCAO_ID;
CREATE GENERATOR GEN_PCP_PROD_MAQUINAS_ID;
CREATE GENERATOR GEN_PMARCAS_ID;
CREATE GENERATOR GEN_PMODELOS_ID;
CREATE GENERATOR GEN_PMOVIMENT_ID;
CREATE GENERATOR GEN_PMOVPNEU_ID;
CREATE GENERATOR GEN_PNEUPOSICAO_ID;
CREATE GENERATOR GEN_PPOSICOES_ID;
CREATE GENERATOR GEN_PRESCRITORES_ID;
CREATE GENERATOR GEN_PRODUTOS_APRESENTACAO_ID;
CREATE GENERATOR GEN_PRODUTOS_LOGISTICA_ID;
CREATE GENERATOR GEN_PRODUTOS_MARCAS_ID;
CREATE GENERATOR GEN_PRODUTOS_MODELOS_ID;
CREATE GENERATOR GEN_PRODUTOS_PRECOS_ID;
CREATE GENERATOR GEN_PRODUTO_EMBALAGEM_ID;
CREATE GENERATOR GEN_PRODUTO_FAMILIAS_ID;
CREATE GENERATOR GEN_PRODUTO_FORNECEDOR_ID;
CREATE GENERATOR GEN_PRODUTO_GRUPOS_ID;
CREATE GENERATOR GEN_PRODUTO_PRECO_HISTOR_ID;
CREATE GENERATOR GEN_PRODUTO_SECAO_ID;
CREATE GENERATOR GEN_PRODUTO_SUBGRUPOS_ID;
CREATE GENERATOR GEN_PRODUTO_TIPO_ID;
CREATE GENERATOR GEN_PROD_ARMAZENAMENTO_ID;
CREATE GENERATOR GEN_PROD_PALETES_ID;
CREATE GENERATOR GEN_PROD_REMD_TESTE_ID;
CREATE GENERATOR GEN_REPRESENTANTES_ID;
CREATE GENERATOR GEN_RH_FUNCOES_ID;
CREATE GENERATOR GEN_RH_PONTOS_BLOQUEADOS_ID;
CREATE GENERATOR GEN_RH_PONTOS_ID;
CREATE GENERATOR GEN_SECAO_ID;
CREATE GENERATOR GEN_SETORES_ID;
CREATE GENERATOR GEN_SUBTIPOPATRIMONIO_ID;
CREATE GENERATOR GEN_TIPOOCORPATRIMONIO_ID;
CREATE GENERATOR GEN_TIPO_CADASTROS_ID;
CREATE GENERATOR GEN_TIPO_DOCUMENTO_ID;
CREATE GENERATOR GEN_TIPO_ENDERECO_ID;
CREATE GENERATOR GEN_TIPO_GARANTIA_ID;
CREATE GENERATOR GEN_USUARIOS_ID;
CREATE GENERATOR GEN_VEICITEM_ID;
CREATE GENERATOR GEN_VEICMOVIMENTO_ID;
CREATE GENERATOR GEN_VIEUCLOS_GRUPOS_ID;
CREATE GENERATOR GNR_ACOMPANHAMENTO;
CREATE GENERATOR GNR_CODCAL_TEXTUAL;
CREATE GENERATOR GNR_CODFICCALPADRAO;
CREATE GENERATOR GNR_FICCALEQUI;
CREATE GENERATOR GNR_HH_ACUMU_CC;
CREATE GENERATOR GNR_ITENS_SS_MEDICAO;
CREATE GENERATOR GNR_TIPO_PARADA;
CREATE GENERATOR IBE$LOG_TABLES_GEN;
CREATE GENERATOR LOCALESTOQUEENDERECOS_GEN;
CREATE GENERATOR LOCALESTOQUE_GEN;
CREATE GENERATOR MAN_CELULUAS_CODIGOS_GEN;
CREATE GENERATOR MAN_PROCESSOS_CODIGOS_GEN;
CREATE GENERATOR MAN_SITUACAO_GEN;
CREATE GENERATOR MAQUINAS_ANEXOS_GEN;
CREATE GENERATOR MAQUINAS_CODIGO_GEN;
CREATE GENERATOR MAQUINAS_GEN;
CREATE GENERATOR MAQUINAS_HITORICOS_GEN;
CREATE GENERATOR MAQUINAS_IMAGENS_GEN;
CREATE GENERATOR MAQUINAS_PECAS_GEN;
CREATE GENERATOR MAQUINAS_SINTOMAS_GEN;
CREATE GENERATOR NC_ETAPASPASSOS_GEN;
CREATE GENERATOR NC_TABELACAUSAS_GEN;
CREATE GENERATOR PECAS_ANEXOS_GEN;
CREATE GENERATOR PECAS_COTACAO_GEN;
CREATE GENERATOR PECAS_DEVOLUCAO_GEN;
CREATE GENERATOR PECAS_ENTRADAS_GEN;
CREATE GENERATOR PECAS_GEN;
CREATE GENERATOR PECAS_IMAGEM_GEN;
CREATE GENERATOR PECAS_LOTACAO_GEN;
CREATE GENERATOR PECAS_NORMAS_GEN;
CREATE GENERATOR PECAS_SAIDAS_DIAS_GEN;
CREATE GENERATOR PECAS_TESTE_GEN;
CREATE GENERATOR PECAS_TRANSFERENCIAS_GEN;
CREATE GENERATOR PROCESSOS_GEN;
CREATE GENERATOR PRODUTOS;
CREATE GENERATOR PRODUTOS_GEN;
CREATE GENERATOR PRODUTOS_TOLERANCIA_REC_GEN;
CREATE GENERATOR REGRADESCONTOSCLIENTES_GEN;
CREATE GENERATOR RH_CARGOS_GEN;
CREATE GENERATOR SEGUROS_APOLICES_GEN;
CREATE GENERATOR SEGUROS_TIPOS_GEN;
CREATE GENERATOR SGPATRIMO_CODSGRUPO_GEN;
CREATE GENERATOR ST_ACIDENTESGRUPOS_GEN;
CREATE GENERATOR ST_ACIDENTESSUBGRUPOS_GEN;
CREATE GENERATOR ST_ACIDENTES_GEN;
CREATE GENERATOR ST_AGENTESPREVIDENCIA_GEN;
CREATE GENERATOR ST_AGENTES_GEN;
CREATE GENERATOR ST_ANAMNESEITEM_GEN;
CREATE GENERATOR ST_ANAMNESE_GEN;
CREATE GENERATOR ST_ANANEXO11_GEN;
CREATE GENERATOR ST_ANANEXO12_GEN;
CREATE GENERATOR ST_ANANEXO13_GEN;
CREATE GENERATOR ST_APARELHAGEM_GEN;
CREATE GENERATOR ST_APOSENTADORIA_RISCO_ATIV_GEN;
CREATE GENERATOR ST_APOSENTADORIA_RISCO_DESC_GEN;
CREATE GENERATOR ST_APOSENTADORIA_RISCO_GEN;
CREATE GENERATOR ST_ATESTADOS_GEN;
CREATE GENERATOR ST_CARGOSACIDENTESEPI_GEN;
CREATE GENERATOR ST_CARGOSACIDENTES_GEN;
CREATE GENERATOR ST_CARGOSAPOSENTADORIA_GEN;
CREATE GENERATOR ST_CARGOSEMPREGADOSNOME_GEN;
CREATE GENERATOR ST_CARGOSEMPREGADOS_GEN;
CREATE GENERATOR ST_CARGOSEPI_GEN;
CREATE GENERATOR ST_CARGOSERGONOMIA_GEN;
CREATE GENERATOR ST_CARGOSEXAMESHISTORICO_GEN;
CREATE GENERATOR ST_CARGOSEXAMES_GEN;
CREATE GENERATOR ST_CARGOSGFIP_GEN;
CREATE GENERATOR ST_CARGOSPROCEDIMENTOS1_GEN;
CREATE GENERATOR ST_CARGOSRESTRICOES_GEN;
CREATE GENERATOR ST_CARGOSTREINAMENTOS_GEN;
CREATE GENERATOR ST_CARGOS_GEN;
CREATE GENERATOR ST_CAT_GEN;
CREATE GENERATOR ST_EPI_GEN;
CREATE GENERATOR ST_FILIAISASANALISERISCOS_GEN;
CREATE GENERATOR ST_FILIAISCRONOGRAMA_GEN;
CREATE GENERATOR ST_FILIAISEPI_GEN;
CREATE GENERATOR ST_FILIAISINCIDENTES_GEN;
CREATE GENERATOR ST_FILIAISINSPECOES_GEN;
CREATE GENERATOR ST_FILIAISMEDICOS_GEN;
CREATE GENERATOR ST_FILIAISRESPMEDICOS_GEN;
CREATE GENERATOR ST_NRS_GEN;
CREATE GENERATOR ST_PROCEDIMENTOS1_GEN;
CREATE GENERATOR ST_PROCEDIMENTOS2_GEN;
CREATE GENERATOR ST_PROCEDIMENTOS3_GEN;
CREATE GENERATOR ST_PROCEDIMENTOS4_GEN;
CREATE GENERATOR ST_PROCEDIMENTOS5_GEN;
CREATE GENERATOR ST_TECNICAS_GEN;
CREATE GENERATOR ST_TIPOSDEOBRAS_GEN;
CREATE GENERATOR ST_TIPO_EXTINTORES_GEN;
CREATE GENERATOR ST_TREINAMENTOSGRUPOS_GEN;
CREATE GENERATOR ST_TREINAMENTOSSUBGRUPOS_GEN;
CREATE GENERATOR ST_TREINAMENTOS_GEN;
CREATE GENERATOR ST_VACINAS_DOSES_GEN;
CREATE GENERATOR ST_VACINAS_GEN;
CREATE GENERATOR TABELAPRECOSITEM_GEN;
CREATE GENERATOR TABELAPRECOS_GEN;
CREATE GENERATOR TAGS_GEN;
CREATE GENERATOR TAGS_HISTORICOS_GEN;
CREATE GENERATOR TAGS_SUBTIPOS_GEN;
CREATE GENERATOR TAGS_TIPOS_GEN;
CREATE GENERATOR TAG_CODIGOS_GEN;
CREATE GENERATOR TAG_IMAGEM_GEN;
CREATE GENERATOR TIPO_MOVIM_ESTQ;
CREATE GENERATOR TIPO_PRAZO_ENTREGA;
CREATE GENERATOR TIPO_PRODUTOS;
CREATE GENERATOR TIPO_STATUS_PEDIDOS;
CREATE GENERATOR UNIDADES;
/*******************************************************************************
 * Domains
 * -------
 * Extracted at 11/08/2011 08:34:14
 ******************************************************************************/

CREATE DOMAIN AGENCIA AS 
 CHAR(5)
 COLLATE ISO8859_1;
CREATE DOMAIN BANCO AS 
 CHAR(3)
 COLLATE ISO8859_1;
CREATE DOMAIN BLOB_BINARIO AS 
 BLOB SUB_TYPE 0 SEGMENT SIZE 80
;
CREATE DOMAIN BLOB_TEXTO AS 
 BLOB SUB_TYPE 1 SEGMENT SIZE 80
;
CREATE DOMAIN BOOLEAN AS 
 CHAR(1)
 COLLATE ISO8859_1;
CREATE DOMAIN C1 AS 
 CHAR(1)
 COLLATE ISO8859_1;
CREATE DOMAIN CC AS 
 VARCHAR(10)
 COLLATE ISO8859_1;
CREATE DOMAIN CEP AS 
 CHAR(8)
 COLLATE ISO8859_1;
CREATE DOMAIN CHAVE AS 
 CHAR(9)
 COLLATE ISO8859_1;
CREATE DOMAIN CIDADE AS 
 VARCHAR(40)
 COLLATE PT_BR;
CREATE DOMAIN CNPJ AS 
 VARCHAR(14)
 COLLATE ISO8859_1;
CREATE DOMAIN CODIGO AS 
 VARCHAR(10)
 COLLATE PT_BR;
CREATE DOMAIN CODIGO_BARRAS AS 
 VARCHAR(30)
 COLLATE ISO8859_1;
CREATE DOMAIN CODIGO_UNIDADES AS 
 CHAR(2)
 COLLATE ISO8859_1;
CREATE DOMAIN CPF_CGC AS 
 VARCHAR(14)
 COLLATE ISO8859_1;
CREATE DOMAIN CTPS AS 
 CHAR(20)
 COLLATE ISO8859_1;
CREATE DOMAIN DATA AS 
 TIMESTAMP
;
CREATE DOMAIN DATA_DEF AS 
 DATE
;
CREATE DOMAIN DATA_HORA AS 
 TIMESTAMP
;
CREATE DOMAIN DATA_HORA_DEF AS 
 TIMESTAMP
;
CREATE DOMAIN DESCRICAO AS 
 VARCHAR(30)
 COLLATE ISO8859_1;
CREATE DOMAIN DESCRICAO_10 AS 
 VARCHAR(10)
 COLLATE ISO8859_1;
CREATE DOMAIN DESCRICAO_100RQ AS 
 VARCHAR(100)
 COLLATE ISO8859_1;
CREATE DOMAIN DESCRICAO_20 AS 
 VARCHAR(20)
 COLLATE ISO8859_1;
CREATE DOMAIN DESCRICAO_20RQ AS 
 VARCHAR(20)
 COLLATE ISO8859_1;
CREATE DOMAIN DESCRICAO_30RQ AS 
 VARCHAR(30)
 COLLATE ISO8859_1;
CREATE DOMAIN DESCRICAO_50RQ AS 
 VARCHAR(50)
 COLLATE ISO8859_1;
CREATE DOMAIN DOCUMENTO AS 
 VARCHAR(10)
 COLLATE ISO8859_1;
CREATE DOMAIN ENDERECO AS 
 VARCHAR(50)
 COLLATE ISO8859_1;
CREATE DOMAIN ESTADO AS 
 CHAR(2)
 COLLATE PT_BR;
CREATE DOMAIN FLAG AS 
 SMALLINT
;
CREATE DOMAIN FLAG_OPERACAO AS 
 SMALLINT
;
CREATE DOMAIN FLAG_SIM_NAO AS 
 CHAR(1)
 DEFAULT 'S'
 NOT NULL
 CHECK (VALUE IN ('S','N','s','n'))
 COLLATE ISO8859_1;
update rdb$fields set rdb$description = 'FLAG CONTENDO SIM OU NAO, PADRAO S' where rdb$field_name = 'FLAG_SIM_NAO';
CREATE DOMAIN FLAG_TIPO_BAIXA_ESTQ AS 
 SMALLINT
;
CREATE DOMAIN FLAG_TIPO_CODIGO_BARRAS AS 
 SMALLINT
;
CREATE DOMAIN FLAG_TIPO_CODIGO_PRODUTO AS 
 SMALLINT
;
CREATE DOMAIN FLAG_TIPO_IMAGEM AS 
 SMALLINT
;
CREATE DOMAIN FLAG_TIPO_INSUMO AS 
 SMALLINT
;
CREATE DOMAIN FLAG_TIPO_MATERIAL AS 
 SMALLINT
;
CREATE DOMAIN FLAG_TIPO_PECA AS 
 SMALLINT
;
CREATE DOMAIN FLAG_TIPO_SALDO AS 
 SMALLINT
;
CREATE DOMAIN ID AS 
 INTEGER
;
CREATE DOMAIN LOGICO AS 
 SMALLINT
;
CREATE DOMAIN NATUREZA AS 
 CHAR(4)
 COLLATE ISO8859_1;
CREATE DOMAIN NOME_OPERADOR AS 
 VARCHAR(10)
 COLLATE ISO8859_1;
CREATE DOMAIN NOME_OPERADOR_DEF AS 
 VARCHAR(10)
 COLLATE ISO8859_1;
CREATE DOMAIN NUMERICO AS 
 DECIMAL(15,2)
;
CREATE DOMAIN NUMERIC_FK AS 
 NUMERIC(10,0)
;
CREATE DOMAIN NUMERIC_PK AS 
 NUMERIC(10,0)
;
CREATE DOMAIN NUMERO AS 
 NUMERIC(15,3)
;
CREATE DOMAIN NUMERO_GRANDE_4CD AS 
 NUMERIC(18,4)
;
CREATE DOMAIN NUMERO_INDICE AS 
 NUMERIC(9,4)
;
CREATE DOMAIN NUMERO_MEDIO AS 
 NUMERIC(11,2)
;
CREATE DOMAIN NUMERO_MEDIO_4CD AS 
 NUMERIC(11,4)
;
CREATE DOMAIN NUMERO_PEQUENO_4CD AS 
 NUMERIC(12,2)
;
CREATE DOMAIN NUMERO_PERCENTUAL AS 
 NUMERIC(5,2)
;
CREATE DOMAIN ORDEM AS 
 SMALLINT
;
CREATE DOMAIN PESSOA AS 
 CHAR(1)
 COLLATE ISO8859_1;
CREATE DOMAIN PIS AS 
 CHAR(11)
 COLLATE ISO8859_1;
CREATE DOMAIN QUANTIDADE AS 
 NUMERIC(18,4)
;
CREATE DOMAIN REFERENCIA_PRODUTOS AS 
 VARCHAR(20)
 COLLATE ISO8859_1;
CREATE DOMAIN SITUACAO AS 
 CHAR(2)
 COLLATE ISO8859_1;
CREATE DOMAIN SITUACAO_TRIBUTARIA AS 
 CHAR(3)
 COLLATE ISO8859_1;
CREATE DOMAIN SMALL_DATE AS 
 DATE
;
CREATE DOMAIN TELEFONE AS 
 VARCHAR(15)
 COLLATE ISO8859_1;
CREATE DOMAIN T_DATA AS 
 DATE
;
CREATE DOMAIN T_HORA AS 
 TIME
;
CREATE DOMAIN T_PARADA AS 
 VARCHAR(1)
 COLLATE ISO8859_1;
CREATE DOMAIN T_QUANTIDADE AS 
 NUMERIC(15,3)
;
CREATE DOMAIN T_YESNO AS 
 CHAR(1)
 COLLATE ISO8859_1;
CREATE DOMAIN T_YESNO_S AS 
 CHAR(1)
 COLLATE ISO8859_1;
CREATE DOMAIN UF AS 
 CHAR(2)
 COLLATE ISO8859_1;
CREATE DOMAIN USUARIOPADRAO AS 
 VARCHAR(10)
 COLLATE ISO8859_1;
CREATE DOMAIN V10 AS 
 VARCHAR(10)
 COLLATE ISO8859_1;
CREATE DOMAIN V100 AS 
 VARCHAR(100)
 COLLATE ISO8859_1;
CREATE DOMAIN V1000 AS 
 VARCHAR(1000)
 COLLATE ISO8859_1;
CREATE DOMAIN V20 AS 
 VARCHAR(20)
 COLLATE ISO8859_1;
CREATE DOMAIN V200 AS 
 VARCHAR(200)
 COLLATE ISO8859_1;
CREATE DOMAIN V3 AS 
 VARCHAR(3)
 COLLATE ISO8859_1;
CREATE DOMAIN V4000 AS 
 VARCHAR(4000)
 COLLATE ISO8859_1;
CREATE DOMAIN V50 AS 
 VARCHAR(50)
 COLLATE ISO8859_1;
CREATE DOMAIN VALOR AS 
 NUMERIC(15,4)
;
CREATE DOMAIN VALORI AS 
 INTEGER
;
CREATE DOMAIN VALORS AS 
 SMALLINT
;
SET TERM ^^ ;
/*******************************************************************************
 * Procedure Headers
 * -----------------
 * Extracted at 11/08/2011 08:34:14
 ******************************************************************************/

CREATE PROCEDURE CONVERT_HORA_CHAR (
  I_HORA Time)
 returns (
  R_SAIDA VarChar(5) CHARACTER SET NONE) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE CRIAENDERECOS (
  NRLOCAL SmallInt)
 returns (
  STATUS Char(1)) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE CRIA_SENHA returns (
  SENHA VarChar(30) CHARACTER SET NONE, 
  SENHA_CRIPTO VarChar(30) CHARACTER SET NONE) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE CRIA_USUARIO (
  P_USUARIO VarChar(50) CHARACTER SET NONE, 
  P_SENHA VarChar(30) CHARACTER SET NONE DEFAULT '= ''', 
  P_STATUS Char(1) CHARACTER SET NONE DEFAULT '= ''A''', 
  P_NOME VarChar(50) CHARACTER SET NONE DEFAULT '= ''', 
  P_NEGOCIO VarChar(25) CHARACTER SET NONE DEFAULT '= ''SANTACASA''', 
  P_IP VarChar(15) CHARACTER SET NONE DEFAULT '= ''0.0.0.0''')
 returns (
  LOGIN VarChar(30) CHARACTER SET NONE, 
  NOME_USU_SIGMA VarChar(50) CHARACTER SET NONE, 
  SENHA_WEB VarChar(30) CHARACTER SET NONE, 
  SENHA_WEB_CRIP VarChar(30) CHARACTER SET NONE, 
  SENHA_SIGMA VarChar(30) CHARACTER SET NONE, 
  SENHA_SIGMA_CRIP VarChar(30) CHARACTER SET NONE) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE CRIPTOGRAFA (
  SSTR VarChar(50) CHARACTER SET NONE, 
  SCHAVE VarChar(50) CHARACTER SET NONE)
 returns (
  SRESULT VarChar(50) CHARACTER SET NONE) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE GERACADASTROID returns (
  CODIGO Integer) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE HORASTRAB_ABAS (
  OS_CODIGO VarChar(30))
 returns (
  SOMATORIO_TEMPO Integer) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE INFO_PERIODO (
  INICIO TimeStamp, 
  FIM TimeStamp)
 returns (
  DIAS Integer, 
  HORAS Integer, 
  MINUTOS Integer, 
  SEGUNDOS Integer) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE RETSETORPORDEPTO (
  EMPRESA SmallInt, 
  FILIAL SmallInt, 
  DEPTO SmallInt)
 returns (
  S_EMPRESA SmallInt, 
  S_FILIAL SmallInt, 
  S_DEPTO SmallInt, 
  S_SETOR SmallInt, 
  DESCRICAO VarChar(100), 
  CENTROCUSTO VarChar(10)) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE SP_FILLCACHE AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE SP_GETCHARCOUNT (
  ATEXTO VarChar(4000), 
  ACHAR VarChar(10))
 returns (
  RESULT Numeric(5,0)) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE SP_GETCLASSIFCONTAB (
  ACLASSIFCONTAB VarChar(30))
 returns (
  RESULT VarChar(30)) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE SP_GETPOSCHAR (
  ATEXTO VarChar(4000), 
  ACHAR VarChar(10))
 returns (
  RESULT Numeric(5,0)) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE SP_SET_STATISTICS AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE SP_TEXTSOCHARNAOALFANUM (
  ATEXTO VarChar(4000))
 returns (
  RESULT Numeric(5,0)) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE SP_TEXTSOCHARNUM (
  ATEXTO VarChar(4000))
 returns (
  RESULT Numeric(5,0)) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE SP_TEXTSOCOMMESMOCHAR (
  ATEXTO VarChar(4000), 
  ACHAR VarChar(10))
 returns (
  RESULT Numeric(5,0)) AS
BEGIN
  SUSPEND;
END ^^
CREATE PROCEDURE VALIDA_USUARIOWEB (
  LOGIN VarChar(50) CHARACTER SET NONE, 
  SENHA VarChar(50) CHARACTER SET NONE)
 returns (
  VALIDOU VarChar(10) CHARACTER SET NONE) AS
BEGIN
  SUSPEND;
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Tables
 * ------
 * Extracted at 11/08/2011 08:34:14
 ******************************************************************************/

CREATE TABLE AGENCIACORREIO 
(
  CODIGO                  VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  UF                         CHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADES              VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRROS              VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  E                       VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  NOME                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  ENDERECO                VARCHAR(    67) CHARACTER SET NONE  COLLATE NONE,
  CEP                        CHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  I                       VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE ALMOXARIFADOS 
(
  PK_EMPRESA                    INTEGER         DEFAULT 1 NOT NULL,
  PK_FILIAL                     INTEGER         DEFAULT 1 NOT NULL,
  PK_ALMOXARIFADO               INTEGER         NOT NULL,
  NOMEALMOXARIFADO                  V50 ,
  PK_RESPONSAVEL                INTEGER,
  PK_CENTROCUSTO               SMALLINT         DEFAULT 1,
  USER_INC                      VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  USER_ALT                      VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_ALMOXARIFADOS_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL, PK_ALMOXARIFADO)
);
CREATE TABLE ALM_SOLICITACAO 
(
  FK_EMPRESA                    INTEGER         DEFAULT 1 NOT NULL,
  FK_FILIAL                     INTEGER         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTO               INTEGER         DEFAULT 1 NOT NULL,
  FK_SETOR                      INTEGER         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIO                INTEGER         DEFAULT 1 NOT NULL,
  PK_SOLICITACAO                INTEGER         NOT NULL,
  DATASOLICITACAO             TIMESTAMP         DEFAULT current_timestamp,
  FK_ALMOXARIFADO               INTEGER         DEFAULT 1,
  PRAZOATENDIMENTO              INTEGER         DEFAULT 3,
  SITUACAO                         CHAR(     1) DEFAULT 'A' COLLATE ISO8859_1,
  FK_APROVACAO                  VARCHAR(    10)  COLLATE ISO8859_1,
  DATAVISUALIZACAO            TIMESTAMP,
  QUANTIDADEITEM                INTEGER,
  FK_CENTROCUSTRO              SMALLINT         DEFAULT 1,
  FK_COMPUTADOR                 VARCHAR(    20)  COLLATE ISO8859_1,
  USER_INC                USUARIOPADRAO DEFAULT USER,
  USER_ALT                USUARIOPADRAO DEFAULT USER,
  DATA_INC                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_ALM_SOLICITACAO PRIMARY KEY (FK_EMPRESA, FK_FILIAL, FK_DEPARTAMENTO, FK_SETOR, FK_FUNCIONARIO, PK_SOLICITACAO)
);
update rdb$relations set rdb$description = 'tabela de solicitações de material aos almoxarifados
o usuario faz o pedido de material ao almoxarifado,
deve ser aprovado o pedido, e se existir os materiais, atender, senão
deve-se gerar uma requisição de compra ao Depto de compras
pode ser automatico ou não' where rdb$relation_name = 'ALM_SOLICITACAO';
update rdb$relation_fields set rdb$description = 'ALMOXARIFADO DIRECIONADO A SOLICITAÃ‡ÃƒO' where rdb$relation_name = 'ALM_SOLICITACAO' and rdb$field_name = 'FK_ALMOXARIFADO';
update rdb$relation_fields set rdb$description = 'PRAZO DE ATENDIMENTO EM DIAS
PADARO 3' where rdb$relation_name = 'ALM_SOLICITACAO' and rdb$field_name = 'PRAZOATENDIMENTO';
update rdb$relation_fields set rdb$description = 'SITUACAO DA SOLICITAÃ‡ÃƒO
ABERTA
PENDENTE
ATENDIMENTO PARCIAL
CANCELADA
APROVADA
EM COTACAO
CONCLUIDA (FECHADA)
OUTROS
PADRAO = ''A'' ABERTA' where rdb$relation_name = 'ALM_SOLICITACAO' and rdb$field_name = 'SITUACAO';
update rdb$relation_fields set rdb$description = 'SENHA DO APROVADOR DA SOLICITACAO, NORMALMENTE CHEFE DO SETOR' where rdb$relation_name = 'ALM_SOLICITACAO' and rdb$field_name = 'FK_APROVACAO';
update rdb$relation_fields set rdb$description = 'data da visualizaÃ§Ã£o pelo setor do almoxarifado' where rdb$relation_name = 'ALM_SOLICITACAO' and rdb$field_name = 'DATAVISUALIZACAO';
update rdb$relation_fields set rdb$description = 'IdentificaÃ§Ã£o do computador que estÃ¡ fazendo a solicitaÃ§Ã£o' where rdb$relation_name = 'ALM_SOLICITACAO' and rdb$field_name = 'FK_COMPUTADOR';
CREATE TABLE ALM_SOLIC_ITENS 
(
  FK_EMPRESA                       INTEGER         NOT NULL,
  FK_FILIAL                        INTEGER         NOT NULL,
  FK_DEPARTAMENTO                  INTEGER         NOT NULL,
  FK_SETOR                         INTEGER         NOT NULL,
  FK_FUNCIONARIO                   INTEGER         NOT NULL,
  FK_SOLICITACAO                   INTEGER         NOT NULL,
  PK_ITEM_SOLICITACAO              INTEGER         NOT NULL,
  FK_PRODUTOS                      INTEGER,
  FK_EMBALAGEM                     INTEGER,
  FK_UNIDADE                       INTEGER,
  QUANTSOLICITADA                  INTEGER,
  QUANTAPROVADA                    INTEGER,
  QUANTCOTADA                      INTEGER,
  QUANTCOMPRADA                    INTEGER,
  QUANTATENDIDA                    INTEGER,
  DATASOLICITACAO                     DATE,
  DATAAPROVACAO                       DATE,
  DATACOTACAO                         DATE,
  DATACOMPRA                          DATE,
  DATAATENDIMENTO                     DATE,
  FK_COTACAO                       INTEGER,
  FK_COMPRA                        INTEGER,
  OBSERVACAO                          BLOB SUB_TYPE 0 SEGMENT SIZE 80,
 CONSTRAINT PK_ALM_SOLIC_ITENS PRIMARY KEY (FK_EMPRESA, FK_FILIAL, FK_DEPARTAMENTO, FK_SETOR, FK_FUNCIONARIO, FK_SOLICITACAO, PK_ITEM_SOLICITACAO)
);
update rdb$relation_fields set rdb$description = 'numero da cotaÃ§ao de compra' where rdb$relation_name = 'ALM_SOLIC_ITENS' and rdb$field_name = 'FK_COTACAO';
update rdb$relation_fields set rdb$description = 'nUMERO DA COMPRA DA SOLICITAÃ‡ÃƒO' where rdb$relation_name = 'ALM_SOLIC_ITENS' and rdb$field_name = 'FK_COMPRA';
CREATE TABLE APRESENTACAO 
(
  PK_PROD_APRESENTACAO             SMALLINT         NOT NULL,
  DESCRICAO                         VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
 CONSTRAINT PK_APRESENTACAO_1 PRIMARY KEY (PK_PROD_APRESENTACAO)
);
CREATE TABLE BAIRROS 
(
  PK_BAIRRO                         INTEGER         NOT NULL,
  NOMEBAIRRO                        VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  NOMEABREVIADO                     VARCHAR(    36) CHARACTER SET NONE  COLLATE NONE,
  UF                                VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                         INTEGER,
  QUANTCLIENTES                     INTEGER,
  QUANTFORNECEDORES                 INTEGER,
  QUANTTRANSPORTADORAS              INTEGER,
  QUANTVENDEDORES                   INTEGER,
  COMPRASTOTAL                     NUMERICO ,
  VENDASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                         DATE,
  ULTIMAVENDA                          DATE,
 CONSTRAINT PK_BAIRROS_1 PRIMARY KEY (PK_BAIRRO)
);
CREATE TABLE BOLETODETALHADO 
(
  SEQUENCIAL                 INTEGER         NOT NULL,
  CODIGOCLIENTE              INTEGER,
  CODIGOVENDA                INTEGER,
  DESCRICAO                  VARCHAR(    60)  COLLATE ISO8859_1,
  VALOR                      NUMERIC( 15, 2),
  VALORPAGO                  NUMERIC( 15, 2),
  VALORRESTANTE              NUMERIC( 15, 2),
  VENCIMENTO                    DATE,
  BOLETO                     VARCHAR(    20)  COLLATE ISO8859_1,
 CONSTRAINT PK_BOLETODETALHADO_1 PRIMARY KEY (SEQUENCIAL)
);
CREATE TABLE CA06_MUNICIPIO 
(
  IDMUNICIPIO                NUMERIC( 18, 0) NOT NULL,
  IDPAIS                     NUMERIC( 18, 0) NOT NULL,
  CODIGOFEDERAL              VARCHAR(     8)  COLLATE PT_BR,
  NOME                       VARCHAR(    45)  COLLATE PT_BR,
  UF                         VARCHAR(     2)  COLLATE PT_BR,
  CEPGERAL                   VARCHAR(     8)  COLLATE PT_BR,
  CEPFINAL                   VARCHAR(     8)  COLLATE PT_BR,
  CODESTADUAL                VARCHAR(    10)  COLLATE PT_BR,
  CODSRF                     VARCHAR(     4)  COLLATE PT_BR,
  DDD                        VARCHAR(     3)  COLLATE PT_BR,
 CONSTRAINT CA06_MUNICIPIOPK PRIMARY KEY (IDMUNICIPIO)
);
CREATE TABLE CA06_SOCIODET 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_SOCIOS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_SOCIOSDETALHE             SMALLINT         NOT NULL,
  FK_SOCIOSLUCROS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_DIARIOS                   SMALLINT         DEFAULT 1 NOT NULL,
  TP                           SMALLINT,
 CONSTRAINT SOCIODETPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_SOCIOS, PK_SOCIOSDETALHE)
);
CREATE TABLE CA06_SOCIOLUCRO 
(
  FK_EMPRESAS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_SOCIOS                 SMALLINT         NOT NULL,
  PK_SOCIOLUCRO             SMALLINT         NOT NULL,
  DATAINIAPUR              TIMESTAMP,
  DATAFIMAPUR              TIMESTAMP,
  TPAPURACAO                SMALLINT,
  VALORLUCRO                 DECIMAL( 15, 2),
 CONSTRAINT SOCIOLUCROPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_SOCIOS, PK_SOCIOLUCRO)
);
CREATE TABLE CADASTROS 
(
  PK_EMPRESA                       INTEGER         DEFAULT 1 NOT NULL,
  PK_FILIAL                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_CADASTRO                      INTEGER         NOT NULL,
  TIPOCADASTRO                        CHAR(     1) CHARACTER SET NONE DEFAULT 'C' NOT NULL COLLATE NONE,
  DATACADASTRO                        DATE         DEFAULT CURRENT_DATE,
  TELEFONE                        TELEFONE ,
  TELEFAX                         TELEFONE ,
  EMAIL                               V100 ,
  WEBSITE                              V50 ,
  CEP                                  CEP ,
  ENDERECO                            V100 ,
  NUM_ENDERECO                         V10 ,
  COMPL_ENDERECO                       V20 ,
  PK_BAIRRO                        INTEGER,
  NOMEBAIRRO                           V50 ,
  PK_CIDADE                        INTEGER,
  NOMECIDADE                           V50 ,
  UF                                    UF ,
  PK_PAIS                          INTEGER,
  TIPOIDENTIFICACAO                   CHAR(     1) CHARACTER SET NONE DEFAULT 'J' COLLATE NONE,
  TIPOPESSOA                          CHAR(     1) CHARACTER SET NONE DEFAULT 'J' COLLATE NONE,
  ETIQUETAENDERECO                    CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  CNAE                                 V10 ,
  CNAE2                                V10 ,
  RAZAOSOCIAL                         V100 ,
  APELIDO                              V50 ,
  USER_CAD                   USUARIOPADRAO DEFAULT user,
  USER_ALT                   USUARIOPADRAO DEFAULT user,
  DATA_CAD                       TIMESTAMP         DEFAULT current_timestamp,
  DATA_ALT                       TIMESTAMP         DEFAULT current_timestamp,
  OBSERVACAO                          BLOB SUB_TYPE 1 SEGMENT SIZE 16384 CHARACTER SET NONE,
  DDD                              VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  CNPJ                                CNPJ ,
  INSC_ESTADUAL                        V20 ,
  FK_TIPO_CADASTRO                SMALLINT         DEFAULT 1 NOT NULL,
  INSC_MUNICIPAL                   VARCHAR(    20)  COLLATE ISO8859_1,
  FK_NATUREZAJURIDICA              VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_CADASTROS_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL, PK_CADASTRO)
);
update rdb$relation_fields set rdb$description = 'TIPO DE CADASTRO
FORNECEDOR
CLIENTE
TRANSPORTADOR
TERCEIRIZADO
FUNCIONARIO
REPRESENTANTES
FINANCEIRAS
CONTADORES
ADVOGADOS
OUTROS' where rdb$relation_name = 'CADASTROS' and rdb$field_name = 'TIPOCADASTRO';
update rdb$relation_fields set rdb$description = 'TIPO DE IDENTIFICAÇÃO
J -= CNPJ
F - CPF
I INSS
E = CEI
O OUTROS' where rdb$relation_name = 'CADASTROS' and rdb$field_name = 'TIPOIDENTIFICACAO';
update rdb$relation_fields set rdb$description = 'TIPO DE PESSOA
JURIDICA
FISICA
PADRAO = JURIDICA' where rdb$relation_name = 'CADASTROS' and rdb$field_name = 'TIPOPESSOA';
update rdb$relation_fields set rdb$description = 'IMPRIME ETIQUETA DE ENDEREÇO??
SIM 
NAO' where rdb$relation_name = 'CADASTROS' and rdb$field_name = 'ETIQUETAENDERECO';
CREATE TABLE CELULAS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  PK_CELULAS                   SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(   100)  COLLATE ISO8859_1,
  FK_CENTROCUSTO                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  USER_INC                      VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  USER_ALT                      VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  COMPUTADOR_INC                VARCHAR(    20)  COLLATE ISO8859_1,
  COMPUTADOR_ALT                VARCHAR(    20)  COLLATE ISO8859_1,
  CODIGOANTIGO                  VARCHAR(    10)  COLLATE ISO8859_1,
  PREDIAL                          CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FK_FAMILIAS                  SMALLINT,
 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, PK_CELULAS)
);
update rdb$relation_fields set rdb$description = 'A celula se refere a uma instalaÃ§Ã£o predial,
se sim, lancar os registros de maquinas 
"CELULA" - ESTRUTURAL 
"CELULA" -  ELETRICA
"CELULA" -  HIDRAULICA
"CELULA" - AR CONDICIONADO
"CELULA" - COMB. INCENDIO
"CELULA" - TELEFONIA
"CELULA" - OUTROS' where rdb$relation_name = 'CELULAS' and rdb$field_name = 'PREDIAL';
CREATE TABLE CENTROCUSTO 
(
  CC_CODIGO                       VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  DESCRICAO                       VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  PESO                           SMALLINT         DEFAULT 1 NOT NULL,
  RESPONSAVEL                     VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  FK_CONTABILCREDITO             SMALLINT,
  FK_CONTABILDEBITO              SMALLINT,
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                     SMALLINT         DEFAULT 1 NOT NULL,
  SEQUENCIAL                     SMALLINT         NOT NULL,
  CLASSECENTROCUSTO                  CHAR(     1) DEFAULT 'A' NOT NULL COLLATE ISO8859_1,
  ACEITAITENS                FLAG_SIM_NAO DEFAULT 'N',
  TIPOCENTROCUSTO                    CHAR(     1) DEFAULT 'C' COLLATE ISO8859_1,
 CONSTRAINT PK_CENTROCUSTO_1 PRIMARY KEY (CC_CODIGO)
);
update rdb$relation_fields set rdb$description = 'TIPO DE CENTRO DE CUSTO
A ANALITICO - CENTRO DE CUSTO
S SINTETICO - CENTRO DE CUSTO SUPERIOR
N NAO SE APLICA' where rdb$relation_name = 'CENTROCUSTO' and rdb$field_name = 'CLASSECENTROCUSTO';
update rdb$relation_fields set rdb$description = 'CREDORA
DEVEDORA' where rdb$relation_name = 'CENTROCUSTO' and rdb$field_name = 'TIPOCENTROCUSTO';
CREATE TABLE CEP0 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE NOT NULL COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE,
 CONSTRAINT PK_CEP0_1 PRIMARY KEY (CEP)
);
CREATE TABLE CEP1 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE NOT NULL COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE,
 CONSTRAINT PK_CEP1_1 PRIMARY KEY (CEP)
);
CREATE TABLE CEP2 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE NOT NULL COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE,
 CONSTRAINT PK_CEP2_1 PRIMARY KEY (CEP)
);
CREATE TABLE CEP3 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE NOT NULL COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE,
 CONSTRAINT PK_CEP3_1 PRIMARY KEY (CEP)
);
CREATE TABLE CEP4 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE
);
CREATE TABLE CEP5 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE
);
CREATE TABLE CEP6 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE
);
CREATE TABLE CEP7 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE
);
CREATE TABLE CEP8 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE
);
CREATE TABLE CEP9 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE
);
CREATE TABLE CIDADE 
(
  CODCIDADE                   CHAR(     9) NOT NULL COLLATE ISO8859_1,
  CODIGO                   VARCHAR(    10) NOT NULL COLLATE PT_BR,
  CODUF                       CHAR(     2)  COLLATE PT_BR,
  NOMECIDADE               VARCHAR(    50)  COLLATE PT_BR,
  CODIGOIBGE               VARCHAR(    20)  COLLATE ISO8859_1,
  FLAGCAPITAL                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  CODPAIS                     CHAR(     9)  COLLATE ISO8859_1,
 CONSTRAINT PK_CIDADE PRIMARY KEY (CODCIDADE)
);
CREATE TABLE CIDADES 
(
  PK_CIDADES                         INTEGER         NOT NULL,
  NOMECIDADE                         VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO_B                        VARCHAR(    60) CHARACTER SET NONE  COLLATE NONE,
  CEP                                VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  SITUACAO                           INTEGER,
  TIPO_LOCALIDADE                    VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  LOC_NU_SEQUENCIAL_SUB              INTEGER,
  IBGE                               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  COMPRASTOTAL                      NUMERICO ,
  VENDASTOTAL                       NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE,
  QUANTFILIAIS                      SMALLINT,
  CEPGERAL                               CEP ,
  CEPFINAL                               CEP ,
  CODIGOESTADUAL                     VARCHAR(    10)  COLLATE ISO8859_1,
  CODIGOSRF                          VARCHAR(    10)  COLLATE ISO8859_1,
  DDD                                VARCHAR(     5)  COLLATE ISO8859_1,
  FK_MESOREGIAO                      VARCHAR(    10)  COLLATE ISO8859_1,
  FK_MICROREGIAO                     VARCHAR(    10)  COLLATE ISO8859_1,
  SIGLADDD                           VARCHAR(    10)  COLLATE ISO8859_1,
  LATITUDE                           VARCHAR(    30)  COLLATE ISO8859_1,
  LONGITUDE                          VARCHAR(    30)  COLLATE ISO8859_1,
  CODIGOFEDERAL                      VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT CIDADES_INDEX01 PRIMARY KEY (PK_CIDADES)
);
CREATE TABLE CIDADES_DDD 
(
  UF                        CHAR(     2) NOT NULL COLLATE ISO8859_1,
  CIDADE                 VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  CEP                       CHAR(     8)  COLLATE ISO8859_1,
  DDD                    VARCHAR(    10)  COLLATE ISO8859_1,
  LATITUDE               VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  LONGITUDE              VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  CODIGO                SMALLINT         NOT NULL,
 CONSTRAINT PK_CIDADES_DDD PRIMARY KEY (CODIGO)
);
CREATE TABLE CIDADES_TEMPO 
(
  IDMUNICIPIO                INTEGER         NOT NULL,
  IDPAIS                    SMALLINT         NOT NULL,
  CODIGOFEDERAL              VARCHAR(     8)  COLLATE PT_BR,
  NOME                       VARCHAR(   100)  COLLATE PT_BR,
  UF                         VARCHAR(     2)  COLLATE PT_BR,
  CEPGERAL                   VARCHAR(     8)  COLLATE PT_BR,
  CEPFINAL                   VARCHAR(     8)  COLLATE PT_BR,
  CODESTADUAL                VARCHAR(    10)  COLLATE PT_BR,
  CODSRF                     VARCHAR(     4)  COLLATE PT_BR,
  DDD                        VARCHAR(     3)  COLLATE PT_BR
);
CREATE TABLE CIDADES_TRANSPORTADORAS 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_CIDADES                         INTEGER         NOT NULL,
  FK_TRANSPORTADORAS                 INTEGER         NOT NULL,
  PK_CID_TRANSPORTADORA              INTEGER         NOT NULL,
  FK_UNID_COBRANCA                  SMALLINT,
  TEMPOFRETE                            TIME,
  VALORUNIDADEFRETE                  DECIMAL( 12, 2),
  USER_INC                           VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  USER_ALT                           VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                         TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                         TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_CIDADES_TRANSPORTADORAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CIDADES, FK_TRANSPORTADORAS, PK_CID_TRANSPORTADORA)
);
update rdb$relations set rdb$description = 'o tipo de cobranca da transportadora' where rdb$relation_name = 'CIDADES_TRANSPORTADORAS';
update rdb$relation_fields set rdb$description = 'tipo de cobranÃ§a usada pela transportadora
por kilometro
por peso
ou misto por km e por kg' where rdb$relation_name = 'CIDADES_TRANSPORTADORAS' and rdb$field_name = 'FK_UNID_COBRANCA';
update rdb$relation_fields set rdb$description = 'o tempo necessario para o frete para a cidades' where rdb$relation_name = 'CIDADES_TRANSPORTADORAS' and rdb$field_name = 'TEMPOFRETE';
update rdb$relation_fields set rdb$description = 'o valor da unidade de frete
se km o valor do km rodado
se kg o valor do kg ou tonelada para transporte
se misto, a formula eh fornecida pela transportadora' where rdb$relation_name = 'CIDADES_TRANSPORTADORAS' and rdb$field_name = 'VALORUNIDADEFRETE';
CREATE TABLE CLIENTES 
(
  PK_CLIENTE                        INTEGER         NOT NULL,
  TIPOPESSOA                         PESSOA DEFAULT 'J',
  RAZAOSOCIAL                          V100 NOT NULL,
  APELIDO                              V100 ,
  DATACADASTRO                         DATE         DEFAULT CURRENT_DATE,
  SITUACAO                             CHAR(     1) CHARACTER SET NONE DEFAULT 'A' COLLATE NONE,
  CNPJ                                 CNPJ ,
  INSC_ESTADUAL                         V20 ,
  INSC_MUNICIPAL                        V20 ,
  DDD                                  CHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  TELEFONE                         TELEFONE ,
  TELEFAX                          TELEFONE ,
  EMAIL                            ENDERECO ,
  WEBSITE                          ENDERECO ,
  RAMOATIVIDADE                     INTEGER,
  CEP                               VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  LOGRADOURO                        VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  NUM_LOGRADOURO                    VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  COMPLEMENTO                       VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                         INTEGER,
  NOMEBAIRRO                        VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                         INTEGER,
  NOMECIDADE                        VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  UF                                   CHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PRIMCOMPRA                           DATE,
  VALORPRIMCOMPRA                   NUMERIC( 12, 2),
  ULTCOMPRA                            DATE,
  VALORULTCOMPRA                    NUMERIC( 12, 2),
  SALDOCONTA                        NUMERIC( 12, 2),
  DATAFUNDACAO                         DATE,
  NUMEROSUFRAMA                         V20 ,
  JUNTACOMERCIAL                        V20 ,
  JUNTACOMERCIALDATA                   DATA ,
  REGIMEESPECIAL               FLAG_SIM_NAO ,
  SUFRAMAESPECIAL              FLAG_SIM_NAO ,
  CONSUMIDOR                   FLAG_SIM_NAO ,
  DDI                               VARCHAR(    10)  COLLATE ISO8859_1,
  TIPOCLIENTES                     SMALLINT         DEFAULT 3 NOT NULL,
  CTACONTABILDEBITO                SMALLINT,
  CTACONTABILCREDITO               SMALLINT,
  ALICOTAIRRF                       DECIMAL(  6, 2),
  RECOLHE_ISS                  FLAG_SIM_NAO ,
  RECOLHE_INSS                 FLAG_SIM_NAO ,
  RECOLHE_PIS                  FLAG_SIM_NAO ,
  RECOLHE_COFINS               FLAG_SIM_NAO ,
  RECOLHE_CSLL                 FLAG_SIM_NAO ,
  FK_TRANSPORTADORA                 INTEGER,
  FK_CONDICAOPAGTO                 SMALLINT,
  ALICOTA_DESCONTO                  DECIMAL(  6, 2),
  GRAURISCO                            CHAR(     1) DEFAULT 'A' NOT NULL COLLATE ISO8859_1,
  LIMITECREDITO                     DECIMAL( 12, 2),
  VENCTOLIMITECREDITO                  DATE,
  FK_TABELAPRECOS                  SMALLINT         DEFAULT 1,
  FK_LOG_ZONAS                     SMALLINT,
  FK_LOG_ZONASETORES               SMALLINT,
  FK_LOG_ZONASETORROTA             SMALLINT,
 CONSTRAINT PK_CLIENTES_1 PRIMARY KEY (PK_CLIENTE)
);
update rdb$relation_fields set rdb$description = 'situação atual do cliente
ATIVO
INATIVO
BLOQUEADO' where rdb$relation_name = 'CLIENTES' and rdb$field_name = 'SITUACAO';
update rdb$relation_fields set rdb$description = 'tipo de clientes
1 = CONSUMIDOR FINAL
2 = PRODUTOR RURAL
3 = REVENDEDOR 
4 = SOLIDÁRIO
5 = EXPORTAÇÃO 
PADRAO = 3 = REVENDEDOR' where rdb$relation_name = 'CLIENTES' and rdb$field_name = 'TIPOCLIENTES';
update rdb$relation_fields set rdb$description = 'Risco (A1_RISCO) - grau de risco na aprovação do crédito do cliente em pedidos de venda (A, B, C, D, E):
- A: crédito Ok. O crédito é sempre liberado.
- B, C e D: liberação definida por meio dos parâmetros <MV_RISCO> (B,C,D).
- E: liberação manual. O crédito é sempre bloqueado, devendo ser liberado anualmente.
- Z: liberação por meio de integração com software de terceiro.' where rdb$relation_name = 'CLIENTES' and rdb$field_name = 'GRAURISCO';
CREATE TABLE CLIENTES_CTABCO 
(
  PK_CTABCOCLIENTE              INTEGER         NOT NULL,
  FK_CLIENTE                    INTEGER         NOT NULL,
  FK_BANCO                          V10 ,
  FK_AGENCIA                        V10 ,
  CONTACORRENTE                     V10 ,
  DATAABERTURA                     DATE,
  ESPECIAL                         CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  NOMETITULAR                      V100 ,
  CPFTITULAR                    CPF_CGC ,
  ULTIMACONSULTA              TIMESTAMP,
  SITUACAOSERASA                    V10 ,
  TOTALMOVIMENTADO              NUMERIC( 12, 2),
  DATAULTCHEQUE                    DATE,
 CONSTRAINT PK_CLIENTES_CTABCO_1 PRIMARY KEY (PK_CTABCOCLIENTE)
);
update rdb$relation_fields set rdb$description = 'cha' where rdb$relation_name = 'CLIENTES_CTABCO' and rdb$field_name = 'ESPECIAL';
CREATE TABLE CNAE 
(
  IDSECAO                     V3 NOT NULL,
  IDDIVISAO              VARCHAR(     4) NOT NULL COLLATE ISO8859_1,
  IDGRUPO                VARCHAR(     5) NOT NULL COLLATE ISO8859_1,
  IDCLASSE               VARCHAR(     8) NOT NULL COLLATE ISO8859_1,
  ID                     VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  DESCRICAO                 V200 ,
 CONSTRAINT PK_CNAE_1 PRIMARY KEY (IDSECAO, IDDIVISAO, IDGRUPO, IDCLASSE, ID)
);
CREATE TABLE CNAE2 
(
  ID                  NUMERIC_PK NOT NULL,
  NUMERO                 VARCHAR(    15)  COLLATE ISO8859_1,
  DESCRICAO              VARCHAR(   200)  COLLATE ISO8859_1,
  GRAURISCO              NUMERIC( 15, 2),
 CONSTRAINT PK_CNAE2_1 PRIMARY KEY (ID)
);
CREATE TABLE CNAECLASSE 
(
  IDSECAO                       V3 NOT NULL,
  IDDIVISAO                VARCHAR(     4) NOT NULL COLLATE ISO8859_1,
  IDGRUPO                  VARCHAR(     5) NOT NULL COLLATE ISO8859_1,
  ID                       VARCHAR(     8) NOT NULL COLLATE ISO8859_1,
  DESCRICAO                   V200 ,
  GRAUDERISCO           NUMERIC_FK ,
 CONSTRAINT PK_CNAECLASSE_1 PRIMARY KEY (IDSECAO, IDDIVISAO, IDGRUPO, ID)
);
CREATE TABLE CNAEDIVISAO 
(
  IDSECAO                     V3 NOT NULL,
  ID                     VARCHAR(     4) NOT NULL COLLATE ISO8859_1,
  DESCRICAO                 V100 ,
 CONSTRAINT PK_CNAEDIVISAO_1 PRIMARY KEY (IDSECAO, ID)
);
CREATE TABLE CNAEGRUPO 
(
  IDSECAO                     V3 NOT NULL,
  IDDIVISAO              VARCHAR(     4) NOT NULL COLLATE ISO8859_1,
  ID                     VARCHAR(     5) NOT NULL COLLATE ISO8859_1,
  DESCRICAO                 V200 ,
 CONSTRAINT PK_CNAEGRUPO_1 PRIMARY KEY (IDSECAO, IDDIVISAO, ID)
);
CREATE TABLE CNAESECAO 
(
  ID                          V3 NOT NULL,
  DESCRICAO                 V100 ,
 CONSTRAINT PK_CNAESECAO_1 PRIMARY KEY (ID)
);
CREATE TABLE CODIGODEBARRAS 
(
  CODIGODEBARRAS              VARCHAR(    13) NOT NULL COLLATE ISO8859_1,
  CODIGOPRODUTO               VARCHAR(    20)  COLLATE ISO8859_1,
 CONSTRAINT PK_CODIGODEBARRAS_1 PRIMARY KEY (CODIGODEBARRAS)
);
CREATE TABLE CODIGOS_DDD 
(
  UF_DDD                         CHAR(     2)  COLLATE ISO8859_1,
  SIGLA_DDD                   VARCHAR(     4)  COLLATE ISO8859_1,
  LOCALIDADE_DDD              VARCHAR(    60)  COLLATE ISO8859_1,
  MUNICIPIO_DDD               VARCHAR(    50)  COLLATE ISO8859_1,
  NUM_DDD                     VARCHAR(     3)  COLLATE ISO8859_1
);
CREATE TABLE COMP_APROVADORES 
(
  FK_EMPRESAS                      SMALLINT         NOT NULL,
  FK_FILIAIS                       SMALLINT         NOT NULL,
  PK_APROVADOR                     SMALLINT         NOT NULL,
  FK_GRUPOSAPROVADORES             SMALLINT,
  NOMEAPROVADOR                     VARCHAR(    50)  COLLATE ISO8859_1,
  TELEFONE                         TELEFONE ,
  TELEFAX                          TELEFONE ,
  EMAIL                             VARCHAR(   100)  COLLATE ISO8859_1,
  PEDIDOSEMSOLICITACAO                 CHAR(     1)  COLLATE ISO8859_1,
  USER_INC                          VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  USER_ALT                          VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_ALT                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  VALORMINIMO                       DECIMAL( 12, 2) DEFAULT 0.01,
  VALORMAXIMO                       DECIMAL( 12, 2) DEFAULT 5000,
  FK_TIPOPERIODO                   SMALLINT,
  FK_MOEDAS                        SMALLINT,
 CONSTRAINT PK_COMP_APROVADORES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_APROVADOR)
);
update rdb$relations set rdb$description = 'tabela de compradores da empresa' where rdb$relation_name = 'COMP_APROVADORES';
update rdb$relation_fields set rdb$description = 'SE SIM , O COMPRADOR PODE INCLUIR ITENS NO PEDIDO SEM SOLICITAÇÃO DE COMPRAS
SE NÃO, NAO PODE INCLUIR' where rdb$relation_name = 'COMP_APROVADORES' and rdb$field_name = 'PEDIDOSEMSOLICITACAO';
update rdb$relation_fields set rdb$description = 'vALOR MINIMO DE COMPRAS DURANTE UM PERIODO ' where rdb$relation_name = 'COMP_APROVADORES' and rdb$field_name = 'VALORMINIMO';
update rdb$relation_fields set rdb$description = 'vALOR MAXIMO DE COMPRAS DURANTE UM PERIODO ' where rdb$relation_name = 'COMP_APROVADORES' and rdb$field_name = 'VALORMAXIMO';
update rdb$relation_fields set rdb$description = 'UNIDADE MEDIDA PARA OPERIODO DE AVALIAÇÃO DE VALORES MAXIMO E MINIMO' where rdb$relation_name = 'COMP_APROVADORES' and rdb$field_name = 'FK_TIPOPERIODO';
update rdb$relation_fields set rdb$description = 'O TIPO DE MOEDA QUE OS VALORES MINIMO E MAXIMO VALEM' where rdb$relation_name = 'COMP_APROVADORES' and rdb$field_name = 'FK_MOEDAS';
CREATE TABLE COMP_COMPRADORES 
(
  FK_EMPRESAS                      SMALLINT         NOT NULL,
  FK_FILIAIS                       SMALLINT         NOT NULL,
  PK_COMPRADOR                     SMALLINT         NOT NULL,
  FK_GRUPOCOMPRADOR                SMALLINT,
  FK_APROVADORES                   SMALLINT,
  FK_GRUPOSAPROVADORES             SMALLINT,
  NOMECOMPRADOR                     VARCHAR(    50)  COLLATE ISO8859_1,
  TELEFONE                         TELEFONE ,
  TELEFAX                          TELEFONE ,
  EMAIL                             VARCHAR(   100)  COLLATE ISO8859_1,
  PEDIDOSEMSOLICITACAO                 CHAR(     1)  COLLATE ISO8859_1,
  USER_INC                          VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  USER_ALT                          VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_ALT                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  VALORMINIMO                       DECIMAL( 12, 2) DEFAULT 0.01,
  VALORMAXIMO                       DECIMAL( 12, 2) DEFAULT 5000,
  FK_TIPOPERIODO                   SMALLINT,
  FK_MOEDAS                        SMALLINT,
 CONSTRAINT PK_COMP_COMPRADORES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_COMPRADOR)
);
update rdb$relations set rdb$description = 'tabela de compradores da empresa' where rdb$relation_name = 'COMP_COMPRADORES';
update rdb$relation_fields set rdb$description = 'SE SIM , O COMPRADOR PODE INCLUIR ITENS NO PEDIDO SEM SOLICITAÇÃO DE COMPRAS
SE NÃO, NAO PODE INCLUIR' where rdb$relation_name = 'COMP_COMPRADORES' and rdb$field_name = 'PEDIDOSEMSOLICITACAO';
update rdb$relation_fields set rdb$description = 'vALOR MINIMO DE COMPRAS DURANTE UM PERIODO ' where rdb$relation_name = 'COMP_COMPRADORES' and rdb$field_name = 'VALORMINIMO';
update rdb$relation_fields set rdb$description = 'vALOR MAXIMO DE COMPRAS DURANTE UM PERIODO ' where rdb$relation_name = 'COMP_COMPRADORES' and rdb$field_name = 'VALORMAXIMO';
update rdb$relation_fields set rdb$description = 'UNIDADE MEDIDA PARA OPERIODO DE AVALIAÃ‡ÃƒO DE VALORES MAXIMO E MINIMO' where rdb$relation_name = 'COMP_COMPRADORES' and rdb$field_name = 'FK_TIPOPERIODO';
update rdb$relation_fields set rdb$description = 'O TIPO DE MOEDA QUE OS VALORES MINIMO E MAXIMO VALEM' where rdb$relation_name = 'COMP_COMPRADORES' and rdb$field_name = 'FK_MOEDAS';
CREATE TABLE COMP_GRUPOSAPROVADORES 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_GRUPOSAPROVADORES             SMALLINT         NOT NULL,
  DESCRICAO                         VARCHAR(   100)  COLLATE ISO8859_1,
  PODEFINCOTACAO                       CHAR(     1)  COLLATE ISO8859_1,
  USER_INC                          VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  USER_ALT                          VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_ALT                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  TIPOAPROVADOR                        CHAR(     1) DEFAULT 'A' COLLATE ISO8859_1,
  TIPOLIBERACAO                        CHAR(     1) DEFAULT 'P' COLLATE ISO8859_1,
  LIMITEAUTOMATICO                     CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_COMP_GRUPOSAPROVADORES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_GRUPOSAPROVADORES)
);
update rdb$relation_fields set rdb$description = 'define se usuario destre grupo pode finalizar cotação e emitir ordem de compras' where rdb$relation_name = 'COMP_GRUPOSAPROVADORES' and rdb$field_name = 'PODEFINCOTACAO';
update rdb$relation_fields set rdb$description = 'TIPO DE APROVADOR OU VISTO
SE APROVADOR, AO APROVAR PEDIDO O VALOR DO PEDIDO EH SUBTRAIDO DE SEU SALDOMENSAL,
SE FOR SO VISTO, APROVA MAS NAO SUBTRAI VALORES DE SEU SALDO' where rdb$relation_name = 'COMP_GRUPOSAPROVADORES' and rdb$field_name = 'TIPOAPROVADOR';
update rdb$relation_fields set rdb$description = 'â€¢ Tipo de liberaÃ§Ã£o (UsuÃ¡rio, NÃ­vel ou Pedido).
â€¢ UsuÃ¡rio - libera apenas seu usuÃ¡rio.
â€¢ NÃ­vel - pode liberar todo o nÃ­vel a que pertence.
â€¢ Pedido - libera todo o documento, independente de outras aprovaÃ§Ãµes (autonomia total para liberaÃ§Ã£o do pedido).' where rdb$relation_name = 'COMP_GRUPOSAPROVADORES' and rdb$field_name = 'TIPOLIBERACAO';
update rdb$relation_fields set rdb$description = 'â€¢ Limite automÃ¡tico - indica se considera os limites mÃ­nimos e mÃ¡ximos definidos, no cadastro de Aprovadores.
â€¢ Sim - serÃ£o considerados somente os pedidos que estejam sobre a faixa de liberaÃ§Ã£o.
â€¢ NÃ£o - ignora os limites definidos no cadastro de AprovaÃ§Ã£o, considerada a hierarquia de aprovaÃ§Ã£o definida no cadastro.' where rdb$relation_name = 'COMP_GRUPOSAPROVADORES' and rdb$field_name = 'LIMITEAUTOMATICO';
CREATE TABLE COMP_GRUPOSCOMPRADORES 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_GRUPOSCOMPRADORES             SMALLINT         NOT NULL,
  DESCRICAO                         VARCHAR(   100)  COLLATE ISO8859_1,
  PODEFINCOTACAO                       CHAR(     1)  COLLATE ISO8859_1,
  USER_INC                          VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  USER_ALT                          VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_ALT                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_COMP_GRUPOSCOMPRADORES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_GRUPOSCOMPRADORES)
);
update rdb$relation_fields set rdb$description = 'define se usuario destre grupo pode finalizar cotaÃ§Ã£o e emitir ordem de compras' where rdb$relation_name = 'COMP_GRUPOSCOMPRADORES' and rdb$field_name = 'PODEFINCOTACAO';
CREATE TABLE COMP_ORCAMENTOS 
(
  PK_EMPRESA                     INTEGER         DEFAULT 1 NOT NULL,
  PK_FILIAL                      INTEGER         DEFAULT 1 NOT NULL,
  PK_ORCAMENTO                   INTEGER         NOT NULL,
  PK_VENDEDOR                    INTEGER         NOT NULL,
  DATAORCAMENTO                TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  SITUACAO                          CHAR(     1) CHARACTER SET NONE DEFAULT 'A' COLLATE NONE,
  PK_CLIENTE                     INTEGER,
  PK_ORIGEM                      INTEGER,
  PK_CONTATO                     INTEGER,
  QUANTITEM                      NUMERIC( 15, 2),
  VALORPRODUTOS                  NUMERIC( 15, 2),
  VALORDESCONTO                  NUMERIC( 15, 2),
  PRAZOENTREGA                   INTEGER         DEFAULT 2,
  VALIDADEORCAMENTO              INTEGER         DEFAULT 10,
  VALORIPI                       NUMERIC( 15, 2),
  VALORICMS                      NUMERIC( 15, 2),
  VALORFRETE                     NUMERIC( 15, 2),
  VALORDESPESAS                  NUMERIC( 15, 2),
  VALORICMSSUBST                 DECIMAL( 12, 2),
  VALORTOTAL                     NUMERIC( 18, 2),
 CONSTRAINT PK_COMP_ORCAMENTOS_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL, PK_VENDEDOR, PK_ORCAMENTO)
);
update rdb$relation_fields set rdb$description = 'SITUCAO DO ORCAMENTO
P PENDENTE
A ABERTO
N CONCLUIDO
C CANCELADO
I PEDIDO
U OUTROS
F FECHADO' where rdb$relation_name = 'COMP_ORCAMENTOS' and rdb$field_name = 'SITUACAO';
update rdb$relation_fields set rdb$description = 'PRAZO DE ENTREGA EM DIAS' where rdb$relation_name = 'COMP_ORCAMENTOS' and rdb$field_name = 'PRAZOENTREGA';
update rdb$relation_fields set rdb$description = 'VALIDADE DO ORÇAMENTO EM DIAS, DEFAULT 10 DIAS' where rdb$relation_name = 'COMP_ORCAMENTOS' and rdb$field_name = 'VALIDADEORCAMENTO';
CREATE TABLE CONHECIMENTOSTATUS 
(
  CODCONHECIMENTOSTATUS                  CHAR(     9) NOT NULL COLLATE ISO8859_1,
  CODIGO                              VARCHAR(    10) NOT NULL COLLATE PT_BR,
  NOMECONHECIMENTOSTATUS              VARCHAR(    50)  COLLATE ISO8859_1,
  FLAGLANCACONTARECEBER                  CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_CONHECIMENTOSTATUS PRIMARY KEY (CODCONHECIMENTOSTATUS)
);
CREATE TABLE CONHECIMENTOTRANSPORTE 
(
  CODCONHECIMENTOTRANSPORTE                 CHAR(     9) NOT NULL COLLATE ISO8859_1,
  CODCLIORIGEM                              CHAR(     9)  COLLATE ISO8859_1,
  CODCLIDESTINO                             CHAR(     9)  COLLATE ISO8859_1,
  DATAEMISSAO                          TIMESTAMP,
  NATUREZACARGA                          VARCHAR(   100)  COLLATE PT_BR,
  QUANTIDADE                             NUMERIC( 18, 4),
  ESPECIE                                VARCHAR(   100)  COLLATE ISO8859_1,
  PESOKG                                 NUMERIC( 18, 4),
  METROCUBICOLITRO                       NUMERIC( 18, 4),
  NUMNOTA                                INTEGER,
  VALORTOTALNOTA                         NUMERIC( 15, 4),
  FRETEPESOVOLUME                        NUMERIC( 15, 4),
  VALORFRETE                             NUMERIC( 15, 4),
  VALORSECCAT                            NUMERIC( 15, 4),
  VALORDESPACHO                          NUMERIC( 15, 4),
  VALORPEDAGIO                           NUMERIC( 15, 4),
  VALOROUTROS                            NUMERIC( 15, 4),
  VALORTOTALPRESTACAO                    NUMERIC( 15, 4),
  FLAGFRETEPAGO                             CHAR(     1)  COLLATE ISO8859_1,
  BASECALCULO                            NUMERIC( 15, 4),
  ALIQICMS                               NUMERIC( 15, 4),
  VALORICMS                              NUMERIC( 15, 4),
  VEICULOMARCA                           VARCHAR(   100)  COLLATE PT_BR,
  VEICULOPLACA                           VARCHAR(     8)  COLLATE ISO8859_1,
  VEICULOLOCAL                           VARCHAR(    40)  COLLATE PT_BR,
  VEICULOUF                                 CHAR(     2)  COLLATE PT_BR,
  NUMDOC                                 VARCHAR(    20)  COLLATE ISO8859_1,
  FLAGSITE                                  CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  CODCONHECIMENTOSTATUS                     CHAR(     9)  COLLATE ISO8859_1,
  FLAGLANCAMENTO                            CHAR(     1)  COLLATE ISO8859_1,
  NOTASFISCAIS                           VARCHAR(   100)  COLLATE ISO8859_1,
  MANIFESTO                              VARCHAR(    50)  COLLATE ISO8859_1,
  FLAGENTREGUE                              CHAR(     1)  COLLATE ISO8859_1,
  CODUSER                                   CHAR(     9)  COLLATE ISO8859_1,
  CODEMPRESAORIGEM                       INTEGER,
  CODEMPRESADESTINO                      INTEGER,
  HORARIOINI                                TIME,
  HORARIOFIN                                TIME,
  INTERVALOINI                              TIME,
  INTERVALOFIN                              TIME,
  CODCONTRATOTRANSPORTE                     CHAR(     9)  COLLATE ISO8859_1,
  OBS                                       BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FLAGCALCULO                            INTEGER,
  VALORTOTALMERCADORIAS                  NUMERIC( 15, 4),
  ALIQICMS2                              NUMERIC( 15, 4),
  ALIQFRETE                              NUMERIC( 15, 4),
  IDCONHECIMENTOTRANSPORTE               INTEGER,
  LAST_CHANGE                          TIMESTAMP,
 CONSTRAINT PK_CONHECIMENTOTRANSPORTE PRIMARY KEY (CODCONHECIMENTOTRANSPORTE)
);
CREATE TABLE CONSIDERACOES_GERAIS_PCMAT2 
(
  FK_GERAL_PCMAT1             SMALLINT         NOT NULL,
  PK_GERAL_PCMAT2             SMALLINT         NOT NULL,
  ID                          SMALLINT,
  TITULO                       VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                           BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                       SMALLINT
);
CREATE TABLE CONSIDERACOES_GERAIS_PCMAT3 
(
  FK_GERAL_PCMAT1             SMALLINT         NOT NULL,
  FK_GERAL_PCMAT2             SMALLINT         NOT NULL,
  PK_GERAL_PCMAT3             SMALLINT,
  TITULO                       VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                           BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                       SMALLINT
);
CREATE TABLE CONSULTASPCENTIDADES 
(
  CODENTIDADES                CHAVE NOT NULL,
  CODIGO                    VARCHAR(    10)  COLLATE ISO8859_1,
  DESCRICAO                 VARCHAR(    60)  COLLATE ISO8859_1,
 CONSTRAINT PK_CONSULTASPCENTIDADES PRIMARY KEY (CODENTIDADES)
);
CREATE TABLE CONSULTASPCNATUREZAOPERACAO 
(
  CODCONSSPCNATUREZAOP                CHAVE NOT NULL,
  CODIGO                            VARCHAR(     3)  COLLATE ISO8859_1,
  DESCRICAO                         VARCHAR(    50)  COLLATE ISO8859_1,
 CONSTRAINT PK_CONSULTASPCNATUREZAOPERACAO PRIMARY KEY (CODCONSSPCNATUREZAOP)
);
CREATE TABLE CONSULTASPCTIPODOCUMENTO 
(
  CODCONSULTPDOC                CHAVE NOT NULL,
  CODIGO                      VARCHAR(    10)  COLLATE ISO8859_1,
  DESCRICAO                   VARCHAR(    60)  COLLATE ISO8859_1,
 CONSTRAINT PK_CONSULTASPCTIPODOCUMENTO PRIMARY KEY (CODCONSULTPDOC)
);
CREATE TABLE CONT_CONTABILISTAS 
(
  PK_CONTABILISTA             SMALLINT         NOT NULL,
  NOME                             V50 ,
  CONTATO                      VARCHAR(    30)  COLLATE ISO8859_1,
  FONE                         VARCHAR(    15)  COLLATE ISO8859_1,
  EMAIL                            V50 ,
  INFORMATICA                  INTEGER,
  REGIAO                      SMALLINT,
  ENDERECO                         V50 ,
  PK_CIDADES                  SMALLINT,
  PK_BAIRROS                  SMALLINT,
  CIDADE                       INTEGER,
  UF                              CHAR(     2)  COLLATE ISO8859_1,
  CEP                             CHAR(     8)  COLLATE ISO8859_1,
  NCONSELHO                    VARCHAR(    15)  COLLATE ISO8859_1,
  PGTO1                   FLAG_SIM_NAO ,
  PERCENTUAL                   NUMERIC(  6, 2),
  NIVEL                       SMALLINT
);
CREATE TABLE CONT_GRPATRIMO 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_GRUPOSPATRIMONIO              SMALLINT         NOT NULL,
  DESCRICAO                         VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  SIGLA                                CHAR(     2)  COLLATE ISO8859_1,
  FOTO                                 BLOB SUB_TYPE 0 SEGMENT SIZE 1,
  CAMINHOFOTO                       VARCHAR(   100)  COLLATE ISO8859_1,
  TAXADEPRECIACAO                     FLOAT,
  TAXAVALORIZACAO                   NUMERIC( 10, 4),
  IMOBILIZAR                           CHAR(     3) CHARACTER SET NONE DEFAULT 'SIM' COLLATE NONE,
  FK_CTACONTABIL                   SMALLINT,
  FK_CTACONTABILDEPREC             SMALLINT,
  FK_CTACONTABILDEPACM             SMALLINT,
 CONSTRAINT PK_CONT_GRPATRIMO_1 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_GRUPOSPATRIMONIO)
);
update rdb$relation_fields set rdb$description = 'IMOBILIZAR ATIVOS DO GRUPOS
SIM
NÃƒO
ISTO EH, DEPRECIAR O ITEM LANÃ‡ADO NESTE GRUPO OU
SIMPLESMENTE LANÃ‡AR EM DESPESAS' where rdb$relation_name = 'CONT_GRPATRIMO' and rdb$field_name = 'IMOBILIZAR';
update rdb$relation_fields set rdb$description = 'CONTA CONTABIL DO GRUPO DE BENS' where rdb$relation_name = 'CONT_GRPATRIMO' and rdb$field_name = 'FK_CTACONTABIL';
update rdb$relation_fields set rdb$description = 'CONTA CONTABIL QUE CONTEM A DEPRECIAÃ‡AO DE ITEM DO GRUPO' where rdb$relation_name = 'CONT_GRPATRIMO' and rdb$field_name = 'FK_CTACONTABILDEPREC';
update rdb$relation_fields set rdb$description = 'CONTA CONTABIL QUE CONTEM A DEPRECIAÃ‡AO ACUMULADA' where rdb$relation_name = 'CONT_GRPATRIMO' and rdb$field_name = 'FK_CTACONTABILDEPACM';
CREATE TABLE CONT_HOSTORICOPATRIMONIO 
(
  EQUI_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  EQUI_FTDEP                FLOAT,
  EQUI_FTCOR                FLOAT,
  EQUI_DEPER                FLOAT,
  EQUI_CRPER                FLOAT,
  EQUI_DTDEP                 DATE,
  EQUI_DTCOR                 DATE,
  EQUI_VCOMP                FLOAT,
  EQUI_VCORR                FLOAT,
  EQUI_VDEPR                FLOAT,
  EQUI_VESTI                FLOAT,
  EQUI_PATRI              VARCHAR(    20)  COLLATE ISO8859_1
);
CREATE TABLE CONT_PATMOVIMENTO 
(
  EMPRESA                      SMALLINT         DEFAULT 1 NOT NULL,
  FILIAL                       SMALLINT         DEFAULT 1 NOT NULL,
  NUMMOVIMENTO                  INTEGER         NOT NULL,
  DATAMOVIMENTO               TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  TIPOMOVIMENTO                 VARCHAR(    10) CHARACTER SET NONE DEFAULT 'INTERNO' COLLATE NONE,
  SENTIDOMOVIMENTO              VARCHAR(    10) CHARACTER SET NONE DEFAULT 'ENTRADA' COLLATE NONE,
  MOTIVOMOVIMENTO               VARCHAR(    10) CHARACTER SET NONE DEFAULT 'AQUISICAO' COLLATE NONE,
  EMITIRDOCFISCAL                  CHAR(     3) CHARACTER SET NONE DEFAULT 'NAO' COLLATE NONE,
  CCUSTOORIGEM                  VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODDEPTOORIGEM                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSETORORIGEM                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSECAOORIGEM                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODFORNORIGEM                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CCUSTODESTINO                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODDEPTODESTINO               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSETORDESTINO               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSECAODESTINO               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  OBSERVACAO                       BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  USER_CAD                      VARCHAR(    10) CHARACTER SET NONE DEFAULT USER COLLATE NONE,
  USER_ALT                      VARCHAR(    10) CHARACTER SET NONE DEFAULT USER COLLATE NONE,
  DATA_CAD                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  CODFORNDESTINO                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  NUMPATRIMONIO                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  NUMPRODUTO                    VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_CONT_PATMOVIMENTO_1 PRIMARY KEY (EMPRESA, FILIAL, NUMMOVIMENTO)
);
update rdb$relation_fields set rdb$description = 'TIPO DE MOVIMENTO 
INTERNO
EXTERNO
OUTROS' where rdb$relation_name = 'CONT_PATMOVIMENTO' and rdb$field_name = 'TIPOMOVIMENTO';
update rdb$relation_fields set rdb$description = 'SENTIDO DE MOVIMENTO
ENTRADA
SAIDA
OUTROS' where rdb$relation_name = 'CONT_PATMOVIMENTO' and rdb$field_name = 'SENTIDOMOVIMENTO';
update rdb$relation_fields set rdb$description = 'MOTIVO DO MOVIIMENTO
AQUISIÃ‡ÃƒO
VENDA
DOAÃ‡ÃƒO
EMPRESTIMO
MANUTENÃ‡ÃƒO
TRANSFERENCIA
REALOCAÃ‡ÃƒO
OUTROS' where rdb$relation_name = 'CONT_PATMOVIMENTO' and rdb$field_name = 'MOTIVOMOVIMENTO';
CREATE TABLE CONT_PATRIMONIO 
(
  EMPRESA                                SMALLINT         DEFAULT 1 NOT NULL,
  FILIAL                                 SMALLINT         DEFAULT 1 NOT NULL,
  SEQUENCIAL                              INTEGER         NOT NULL,
  NUMPATRIMONIO                           VARCHAR(    10)  COLLATE ISO8859_1,
  CODGRUPO                                VARCHAR(    10)  COLLATE ISO8859_1,
  CODSGRUPO                               VARCHAR(    10)  COLLATE ISO8859_1,
  DESCRICAO                               VARCHAR(   100)  COLLATE ISO8859_1,
  RESUMIDO                                VARCHAR(    50)  COLLATE ISO8859_1,
  CODDEPTO                                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSETOR                                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSECAO                                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  DATAAQUISICAO                              DATE,
  VALORORIGINAL                           DECIMAL( 12, 2),
  CODFORNECEDOR                           VARCHAR(    10)  COLLATE ISO8859_1,
  ESTADO                                  VARCHAR(    10) DEFAULT 'BOM' COLLATE ISO8859_1,
  STATUS                                  VARCHAR(    10) DEFAULT 'EM USO' COLLATE ISO8859_1,
  DATABAIXA                                  DATE,
  DATAVENDA                                  DATE,
  PERIODOGARANTIA                        SMALLINT,
  TIPOGARANTIA                            VARCHAR(    20) DEFAULT 'TOTAL' COLLATE ISO8859_1,
  TIPOPERIODO                             VARCHAR(     7) DEFAULT 'MESES' COLLATE ISO8859_1,
  FOTO                                       BLOB SUB_TYPE 0 SEGMENT SIZE 1,
  CAMINHOFOTO                             VARCHAR(   100)  COLLATE ISO8859_1,
  DESCRICAODETALHADA                         BLOB SUB_TYPE 0 SEGMENT SIZE 1,
  DATAALOCACAO                               DATE,
  MARCA                                   VARCHAR(    20)  COLLATE ISO8859_1,
  MODELO                                  VARCHAR(    20)  COLLATE ISO8859_1,
  MEDIDA                                  VARCHAR(    20)  COLLATE ISO8859_1,
  VOLTAGEM                                VARCHAR(    20)  COLLATE ISO8859_1,
  TIPOPATRIMONIO                          VARCHAR(    20)  COLLATE ISO8859_1,
  DATAESTADO                            TIMESTAMP,
  DATASTATUS                            TIMESTAMP,
  USER_CAD                                VARCHAR(    10) DEFAULT user COLLATE ISO8859_1,
  USER_ALT                                VARCHAR(    10) DEFAULT user COLLATE ISO8859_1,
  DATA_CAD                              TIMESTAMP         DEFAULT 'NOW',
  DATA_ALT                              TIMESTAMP         DEFAULT 'NOW',
  ANTIGOPATRIMONIO                       SMALLINT,
  CODINDUBRAS                             VARCHAR(    20)  COLLATE ISO8859_1,
  CENTROCUSTO                             VARCHAR(    10)  COLLATE ISO8859_1,
  NOTAFISCAL                              VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  TAXADEPRECIACAO                         NUMERIC( 10, 4) DEFAULT 10,
  LANCARTEMPORARIO                           CHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  DATAIMPLANTACAO                            DATE,
  TAXAVALORIZACAO                         NUMERIC( 10, 4),
  TIPOALTERACAO                              CHAR(     1) DEFAULT 'D' COLLATE ISO8859_1,
  VALORATUAL                              DECIMAL( 12, 2),
  DEPRECIACAOACUMULADA                    DECIMAL( 12, 2),
  DATAULTIMADEPRECIACAO                      DATE,
  VALORIZACAOACUMULADA                    DECIMAL( 12, 2),
  DATAULTIMAVALORIZACAO                      DATE,
  CTACONTABILVALORIZACAO                 SMALLINT,
  CTACONTABILDEPRECIACAO                 SMALLINT,
  CTACONTABILCORRECAO                    SMALLINT,
  CTACONTABILCORRDEPRECIACAO             SMALLINT,
  CTACONTABIL                            SMALLINT,
  CALCULACIAP                        FLAG_SIM_NAO ,
  CTACONTABILDEPRACUMULADA               SMALLINT,
 CONSTRAINT PK_CONT_PATRIMONIO_1 PRIMARY KEY (EMPRESA, FILIAL, SEQUENCIAL)
);
update rdb$relation_fields set rdb$description = 'data efetiva da compra do bem, constante na nota fiscal ou documento equivalente

' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'DATAAQUISICAO';
update rdb$relation_fields set rdb$description = 'ESTADO DE CONSERVAÃƒÂ‡ÃƒÂƒO
B BOM
R RUIM
P PESSIMO
O OUTROS' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'ESTADO';
update rdb$relation_fields set rdb$description = 'STATUS DO BEM
A ATIVO
I INATIVO
M MANUTENÃƒÂ‡ÃƒÂƒO
O OUTROS' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'STATUS';
update rdb$relation_fields set rdb$description = 'tipos de garantia
T TOTAL
P PARCIAL
N NAO APLICAVEL
O OUTROS--' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'TIPOGARANTIA';
update rdb$relation_fields set rdb$description = 'TIPO DE PERIODO DE GARANTIA
D DIAS
S SEMANAS
M MESES
A ANOS--' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'TIPOPERIODO';
update rdb$relation_fields set rdb$description = 'Data de chegada ÃƒÂ¡ SeÃƒÂ§ÃƒÂ£o' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'DATAALOCACAO';
update rdb$relation_fields set rdb$description = 'data da ultima alteracao do estado do bem
' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'DATAESTADO';
update rdb$relation_fields set rdb$description = 'mesma taxa de depreciaÃ§Ã£o do grupo e subgrupo do bem
padrao eh 10% , mas uso o valor cadastrado nas tabelas de GRUPOS E SUBGRUPOS de patrimonio' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'TAXADEPRECIACAO';
update rdb$relation_fields set rdb$description = 'se deve lanÃƒÂ§ar o registro no arquivo temporario
para geraÃƒÂ§ÃƒÂ£o do arquivo de implantaÃƒÂ§ÃƒÂ£o 
se estiver em SIM lanÃƒÂ§a o registro
se estiver em NAO Nao lanÃƒÂ§a o registro' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'LANCARTEMPORARIO';
update rdb$relation_fields set rdb$description = 'data da efetiva implantacao do bem, nao a data da alocacao que eh diferente - data em que foi incluido o bem no sistema' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'DATAIMPLANTACAO';
update rdb$relation_fields set rdb$description = 'Tripo de alteracao no valo do bem
D = DEPRECIA
V = VALORIZA
N NAO APLICAVEL
PADRAO EH D = DEPRECIA' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'TIPOALTERACAO';
update rdb$relation_fields set rdb$description = 'VALOR ATUAL DO BEM, DEPOIS DA VALORIZACAO OU DEPRECIACAO
' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'VALORATUAL';
update rdb$relation_fields set rdb$description = 'vALOR DA DEPRECIACAO ACUMULADA DO BEM
' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'DEPRECIACAOACUMULADA';
update rdb$relation_fields set rdb$description = 'valor da valorizacao acumulada do bem
' where rdb$relation_name = 'CONT_PATRIMONIO' and rdb$field_name = 'VALORIZACAOACUMULADA';
CREATE TABLE CONT_PATTIPOOCOR 
(
  CODOCORRENCIA               INTEGER         NOT NULL,
  OCOR_DESCRICAO              VARCHAR(    50) CHARACTER SET NONE NOT NULL COLLATE NONE,
  MANUTENCAO                     CHAR(     3) CHARACTER SET NONE DEFAULT 'NAO' COLLATE NONE,
 CONSTRAINT PK_CONT_PATTIPOOCOR_1 PRIMARY KEY (CODOCORRENCIA)
);
CREATE TABLE CONT_PAT_OCOR 
(
  EMPRESA                    SMALLINT         DEFAULT 1,
  FILIAL                     SMALLINT         DEFAULT 1,
  DATAOCORRENCIA                 DATE         DEFAULT CURRENT_DATE,
  CODOCORRENCIA               INTEGER,
  SEQUENCIAL                  INTEGER         NOT NULL,
  MOTIVO                      VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  OBSERVACAO                     BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  NUMPATRIMONIO               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_CONT_PAT_OCOR_1 PRIMARY KEY (SEQUENCIAL)
);
CREATE TABLE CONT_PLANOSCONTAS 
(
  PK_PLANOCONTAS                   INTEGER         NOT NULL,
  FK_PLANOCONTASPAI                INTEGER,
  FK_CLIENTES                      INTEGER,
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_CONTASUPERIOR                 INTEGER,
  FK_PLANOCONTASCTB                INTEGER,
  NUMEROCONTA                     SMALLINT,
  NOMECONTA                        VARCHAR(   100)  COLLATE PT_BR,
  FK_TIPOCONTA                    SMALLINT,
  NOMEFANTASIA                     VARCHAR(    30)  COLLATE PT_BR,
  CLASSIFCONTAB                    VARCHAR(    30)  COLLATE PT_BR,
  TITULOCONTA                      INTEGER,
  FK_HISTORICODEBITO              SMALLINT,
  FK_HISTORICOCREDITO             SMALLINT,
  HISTDEBITO                       VARCHAR(    25)  COLLATE PT_BR,
  HISTCREDITO                      VARCHAR(    25)  COLLATE PT_BR,
  IMPRIMIR                            CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  RETENCAO                            CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  COMENTARIO                       VARCHAR(   300)  COLLATE PT_BR,
  GRAU                            SMALLINT,
 CONSTRAINT PK_PLANOSCONTAS PRIMARY KEY (PK_PLANOCONTAS)
);
CREATE TABLE CONT_SGPATRIMO 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_GRUPOS                         SMALLINT         NOT NULL,
  PK_SUBGRUPOS                      SMALLINT         NOT NULL,
  DESCRICAO                          VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  SIGLA                                 CHAR(     3)  COLLATE ISO8859_1,
  FOTO                                  BLOB SUB_TYPE 0 SEGMENT SIZE 1,
  CAMINHOFOTO                        VARCHAR(   100)  COLLATE ISO8859_1,
  IMOBILIZAR                            CHAR(     3) CHARACTER SET NONE DEFAULT 'SIM' COLLATE NONE,
  TAXADEPRECIACAO                    NUMERIC( 10, 4),
  TAXAVALORIZACAO                    NUMERIC( 10, 4),
  CTACONTABILPAICREDITO             SMALLINT,
  CTACONTABILPAIDEBITO              SMALLINT,
 CONSTRAINT PK_CONT_SGPATRIMO_1 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_GRUPOS, PK_SUBGRUPOS)
);
update rdb$relation_fields set rdb$description = '
IMOBILIZAR O ITEM DE PATRIMONIO
S
N
ASSUME O PADRÃƒO DO GRUPO
MAS PODE SER ALTERADO PELO USUARIO' where rdb$relation_name = 'CONT_SGPATRIMO' and rdb$field_name = 'IMOBILIZAR';
CREATE TABLE DATAS 
(
  DATA                    T_DATA NOT NULL,
  DESCRICAO              VARCHAR(    30)  COLLATE ISO8859_1,
 CONSTRAINT PK_DATAS_1 PRIMARY KEY (DATA)
);
CREATE TABLE DEPARTAMENTOS 
(
  PK_EMPRESA                     INTEGER         DEFAULT 1 NOT NULL,
  PK_FILIAL                      INTEGER         DEFAULT 1 NOT NULL,
  PK_DEPARTAMENTO                INTEGER         NOT NULL,
  DESCRICAO                      VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  RESPONSAVEL                    INTEGER,
  QUANTFUNCIONARIOS              INTEGER,
  PK_CENTROCUSTO                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODIGOANTIGO                   VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_DEPARTAMENTOS_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL, PK_DEPARTAMENTO)
);
CREATE TABLE DEPOSITOS 
(
  FK_EMPRESAS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPOSITOS               SMALLINT         NOT NULL,
  FK_CENTROCUSTO              VARCHAR(    10)  COLLATE ISO8859_1,
  FK_RESPONSAVEL              VARCHAR(    10)  COLLATE ISO8859_1,
  DESCRICAO                   VARCHAR(    50)  COLLATE ISO8859_1,
  USER_INC                    VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  USER_ALT                    VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                  TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                  TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_DEPOSITOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPOSITOS)
);
CREATE TABLE DOCUMENTOS 
(
  PK_EMPRESA                   INTEGER         DEFAULT 1 NOT NULL,
  PK_FILIAL                    INTEGER         DEFAULT 1 NOT NULL,
  PK_DOCUMENTO                 INTEGER         NOT NULL,
  CNPJ                            CNPJ ,
  INSCR_ESTADUAL                   V20 ,
  INSCR_MUNICIPAL                  V20 ,
  IDENTIDADE                       V20 ,
  RG_EMISSAO                      DATE,
  RG_ORGAO                         V10 ,
  RG_UF                             UF ,
  CTPS_NUMERO                      V10 ,
  CTPS_SERIE                       V10 ,
  CTPS_ORGAO                       V20 ,
  CTPS_EMISSAO                    DATE,
  CTPS_UF                           UF ,
  TIT_NUMERO                       V20 ,
  TIT_ZONA                     INTEGER,
  TIT_SECAO                    INTEGER,
  TIT_EMISSAO                     DATE,
  TIT_UF                            UF ,
  PIS_PASEP                        PIS ,
  TIPOPESSOA                    PESSOA DEFAULT 'J',
  TIPOREGISTRO                    CHAR(     1) CHARACTER SET NONE DEFAULT 'C' COLLATE NONE,
  CEI                             CNPJ ,
 CONSTRAINT PK_DOCUMENTOS_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL, PK_DOCUMENTO)
);
update rdb$relation_fields set rdb$description = 'O REGISTRO DE DOCUMENTO EH DE PESSOA
JURIDICA OU
FISICA' where rdb$relation_name = 'DOCUMENTOS' and rdb$field_name = 'TIPOPESSOA';
update rdb$relation_fields set rdb$description = 'TIPO DE REGISTRO
FORNECEDOR
CLIENTES
FUNCIONARIO
TRANSPORTADORA
TERCEIRIZADA
CLINICA
OUTROS' where rdb$relation_name = 'DOCUMENTOS' and rdb$field_name = 'TIPOREGISTRO';
CREATE TABLE EMPRESA 
(
  PK_EMPRESA                   INTEGER         NOT NULL,
  RAZAOSOCIAL                     V100 ,
  ENDERECO                        V100 ,
  END_NUMERO                       V10 ,
  END_COMPLEMENTO                  V20 ,
  PK_BAIRRO                    INTEGER,
  PK_CIDADE                    INTEGER,
  PK_PAIS                      INTEGER,
  TELEFONE                    TELEFONE ,
  TELEFAX                     TELEFONE ,
  EMAIL                            V50 ,
  WEBSITE                          V50 ,
  CNAE                             V10 ,
  CNAE2                            V10 ,
  CNPJ                            CNPJ ,
  INSC_ESTADUAL                   CNPJ ,
  INSC_MUNICIPAL                  CNPJ ,
  CEP                              CEP ,
  UF                                UF ,
  NOMEFANTASIA                     V50 ,
  DDD                         SMALLINT,
 CONSTRAINT PK_EMPRESA_1 PRIMARY KEY (PK_EMPRESA)
);
CREATE TABLE EMPRESAS_TESTE 
(
  CODIGO                       SMALLINT,
  NOME                          VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  FANTASIA                      VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  ENDERECO                      VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  NUMERO                        VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  BAIRRO                        VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  CIDADE                        VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  CNPJ                          VARCHAR(    14) CHARACTER SET NONE  COLLATE NONE,
  DDD                           VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  FONE1                         VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  FONE2                         VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  FAX                           VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CONTATO                       VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  CNJ                           VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  CNAE                          VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CATEGIR                       VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CEP                           VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  DTLCTOMANT                       DATE,
  DTULLCTO                         DATE,
  LVCXANM                      SMALLINT,
  LVCXAPGIN                    SMALLINT,
  LVDIARIONM                   SMALLINT,
  LVDIARIOPGIN                 SMALLINT,
  LVENTNM                      SMALLINT,
  LVENTPGIN                    SMALLINT,
  LVSAINM                      SMALLINT,
  LVSAIPGIN                    SMALLINT,
  LVICMSNM                     SMALLINT,
  LVICMSPGIN                   SMALLINT,
  LVINVNM                      SMALLINT,
  LVINVPGIN                    SMALLINT,
  CDPLCTA                       VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  CDHIST                        VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  CONTRIBUIIPI                  VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  DTREGJC                          DATE,
  NMREGJC                       VARCHAR(    14) CHARACTER SET NONE  COLLATE NONE,
  VLRCAPITAL           DOUBLE PRECISION,
  TIPOATIV                      VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  PERCISSQN            DOUBLE PRECISION,
  LVISSQN                      SMALLINT,
  PGISSQN                      SMALLINT,
  INSCRMUN                      VARCHAR(    15) CHARACTER SET NONE  COLLATE NONE,
  LVIPINM                      SMALLINT,
  LVIPIPGIN                    SMALLINT,
  DTENCEXERCCTB                    DATE,
  DTENCEXERCANTCTB                 DATE,
  DTENCEXERCFIS                    DATE,
  DTENCEXERCANTFIS                 DATE,
  GIAICMSCOMPLETA               VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  EMAIL                         VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  INSSSCODTERC                  VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  INSSCODACTRAB                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  INSSCODFPAS                   VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  INSSPERCEMPR         DOUBLE PRECISION,
  INSSPERCACTRAB       DOUBLE PRECISION,
  INSSPERCTERC         DOUBLE PRECISION,
  INSSCODGPS                    VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  INSSPERCAUTON        DOUBLE PRECISION,
  SOCIOS                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  JURLIB                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  RURURB                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  RAISCODMUN                    VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODEMPCOBOL                   VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CODEMPVAR                     VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  TABSIMPLES                    VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  BCOFGTS                       VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  CODMATRIZ                     VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  CTRLFATURAM                   VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  MARCADA                       VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CNAERAIS                      VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CPFRESPRF                     VARCHAR(    11) CHARACTER SET NONE  COLLATE NONE,
  CODEMPVARCTB                  VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  SINTCLI                       VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  SINTFOR                       VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  DTBAIXA                          DATE,
  DTBASE                        VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  UF                            VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  IE                            VARCHAR(    13) CHARACTER SET NONE  COLLATE NONE,
  COMPL_END                     VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  IE_CAE                        VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  IE_CATEG                      VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  IE_CNAE_1                     VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  IE_CNAE_2                     VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  IE_CNAE_3                     VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  IE_CATEG_DATA                    DATE,
  USAPLANOPD                    VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  PRESTASERVICO                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  SINTEGRA                      VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  ICMSAPUCONSOL                 VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  ICMSAPUCENTR                  VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  ICMSSUBTRIB                   VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  ICMSESCRCONT                  VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  REGAPUICMS                    VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  CODRESPONS                    VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CONTADOR                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CAMPO1                        VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  CAMPO2                        VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CAMPO3                        VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  IE_COMPL                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  DATAFECHFOLHA                    DATE,
  DATA1                            DATE,
  DATA2                            DATE,
  DATA3                            DATE,
  VLR1                 DOUBLE PRECISION,
  VLR2                 DOUBLE PRECISION,
  VLR3                 DOUBLE PRECISION,
  CAMPO4                        VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  CAMPO5                        VARCHAR(    15) CHARACTER SET NONE  COLLATE NONE,
  CAMPO6                        VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  REFHEFER                      VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  REFHEDEC                      VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  REFHEREPR                     VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CV1                           VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CV2                           VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CV3                           VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CV4                           VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CV5                           VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CV6                           VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  DBINSSEMP                     VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CRINSSEMP                     VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  DBINSSCOMP                    VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CRINSSCOMP                    VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  DBINSSTERC                    VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CRINSSTERC                    VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CTADB1                        VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CTACR1                        VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CTADB2                        VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CTACR2                        VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CTADB3                        VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CTACR3                        VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  SALATIV1             DOUBLE PRECISION,
  SALATIV2             DOUBLE PRECISION,
  SALATIV3             DOUBLE PRECISION,
  SALATIV4             DOUBLE PRECISION,
  SALATIV5             DOUBLE PRECISION,
  SALATIV6             DOUBLE PRECISION,
  SALATIV7             DOUBLE PRECISION,
  SALATIV8             DOUBLE PRECISION,
  SALATIV9             DOUBLE PRECISION,
  SALATIV10            DOUBLE PRECISION,
  CODATIV1                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CODATIV2                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CODATIV3                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CODATIV4                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CODATIV5                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CODATIV6                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CODATIV7                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CODATIV8                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CODATIV9                      VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  CODATIV10                     VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  EMPVLR1              DOUBLE PRECISION,
  EMPVLR2              DOUBLE PRECISION,
  EMPVLR3              DOUBLE PRECISION,
  EMPCAM1                       VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  EMPCAM2                       VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  EMPCAM3                       VARCHAR(    12) CHARACTER SET NONE  COLLATE NONE,
  EMPCAM4                       VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  EMPINT1                       INTEGER,
  EMPINT2                       INTEGER,
  EMPDT1                           TIME,
  EMPDT2                           TIME,
  FAP                  DOUBLE PRECISION,
  CEI                           VARCHAR(    16) CHARACTER SET NONE  COLLATE NONE,
  CPF                           VARCHAR(    16) CHARACTER SET NONE  COLLATE NONE,
  IE_CAE_COMPL                  VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  EXERCEATIV                    VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  EMPSTR5                       VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  EFDPERFIL                     VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CODACESSOSN                   VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  EMP_STR3                      VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CODMUNESTADO                  VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE ENDERECOS 
(
  PK_ENDERECO                    INTEGER         NOT NULL,
  FK_TIPOENDERECO                INTEGER         DEFAULT 1 NOT NULL,
  FK_TIPOLOGRADOURO              VARCHAR(    10) DEFAULT 'Rua' COLLATE ISO8859_1,
  LOGRADOURO                     VARCHAR(    50)  COLLATE ISO8859_1,
  END_NUMERO                     VARCHAR(    10)  COLLATE ISO8859_1,
  END_COMPLEMENTO                VARCHAR(    20)  COLLATE ISO8859_1,
  CEP                                CEP NOT NULL,
  FK_BAIRROS                     INTEGER,
  FK_CIDADES                     INTEGER,
  NOMEBAIRRO                     VARCHAR(    50)  COLLATE ISO8859_1,
  NOMECIDADE                     VARCHAR(    50)  COLLATE ISO8859_1,
  FK_PAIS                       SMALLINT,
  FK_UF                             CHAR(     2)  COLLATE ISO8859_1,
  DATAINICIO                        DATE,
  USER_INC                            UF DEFAULT USER,
  USER_ALT                            UF DEFAULT USER,
  DATA_INC                     TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                     TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 PRIMARY KEY (PK_ENDERECO)
);
update rdb$relation_fields set rdb$description = 'data de inicio de uso do endereço' where rdb$relation_name = 'ENDERECOS' and rdb$field_name = 'DATAINICIO';
CREATE TABLE EQUIPAMENTOS 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                       INTEGER         DEFAULT 1 NOT NULL,
  FK_TAGS                           INTEGER         DEFAULT 1 NOT NULL,
  PK_EQUIPAMENTOS                   INTEGER         NOT NULL,
  DESCRICAO                         VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  FK_FABRIBANTE                     INTEGER,
  FK_FORNECEDORES                   INTEGER,
  EQUIP_PRODUCAO                       CHAR(     1) DEFAULT 'N' NOT NULL COLLATE ISO8859_1,
  AQUISICAO_DATA                       DATE,
  INICIO_DATA                          DATE,
  AQUISICAO_VALOR                   DECIMAL( 12, 2),
  FK_SITUACAO                      SMALLINT,
  FK_CENTROCUSTO                    VARCHAR(    10)  COLLATE ISO8859_1,
  FK_FAMILIAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_PRIORIDADE                    SMALLINT         DEFAULT 1 NOT NULL,
  EQUI_PARADO                          CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  AQUISICAO_NOTAFISCAL              VARCHAR(    10)  COLLATE ISO8859_1,
  FK_IMAGEM                         INTEGER,
  FK_TIPOEQUIPAMENTO               SMALLINT,
  EQUI_EM_OS                           CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FK_ESTADO                        SMALLINT         DEFAULT 1,
  FK_CLASSIFICACAO                  INTEGER,
  FK_PRODUTOS                       INTEGER,
  FK_PATRIMONIO                     INTEGER,
  MTBF                              INTEGER,
  OBSERVACAO                        VARCHAR(  1000)  COLLATE ISO8859_1,
  PESO                             SMALLINT,
  EQUI_ATIVO                           CHAR(     1) DEFAULT 'S' NOT NULL COLLATE ISO8859_1,
  FK_OS                             INTEGER,
  FK_ANEXOS                         INTEGER,
  INCERTEZA                           FLOAT,
  VALOR_CRITICIDADE                SMALLINT,
 CONSTRAINT PK_EQUIPAMENTOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, FK_TAGS, PK_EQUIPAMENTOS)
);
CREATE TABLE EQUIPAMENTOS_FUNCIONARIOS 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAGS                           SMALLINT         DEFAULT 1 NOT NULL,
  FK_EQUIPAMENTOS                   SMALLINT         DEFAULT 1 NOT NULL,
  PK_EQUIP_FUNCIONARIOS             SMALLINT         NOT NULL,
  FK_FUNCIONARIOS                   SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_EQUIPAMENTOS_FUNCIONARIO PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, FK_TAGS, FK_EQUIPAMENTOS, PK_EQUIP_FUNCIONARIOS)
);
CREATE TABLE EQUIPAMENTOS_IMAGEM 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAGS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_EQUIPAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  PK_EQUIP_IMAGEM              SMALLINT         NOT NULL,
  FK_IMAGEM                    SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_EQUIPAMENTOS_IMAGEM PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, FK_TAGS, FK_EQUIPAMENTOS, PK_EQUIP_IMAGEM)
);
CREATE TABLE EQUIPAMENTOS_NORMAS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAGS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_EQUIPAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  PK_EQUIP_NORMAS              SMALLINT         NOT NULL,
  FK_NORMAS                    SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_EQUIPAMENTOS_NORMAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, FK_TAGS, PK_EQUIP_NORMAS)
);
CREATE TABLE EQUIPAMENTOS_PECAS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAGS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_EQUIPAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  PK_EQUIP_PECAS               SMALLINT         NOT NULL,
  FK_PECAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_PRODUTOS                   INTEGER         DEFAULT 1 NOT NULL,
  FK_FAMILIAS                  SMALLINT         DEFAULT 1 NOT NULL,
  QUANTIDADE                    INTEGER         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_EQUIPAMENTOS_PECAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, FK_TAGS, FK_EQUIPAMENTOS, PK_EQUIP_PECAS)
);
update rdb$relation_fields set rdb$description = 'CODIGO DA PEÇA NA TABELA DE PRODUTOS
TIPO PRODUTO = ''PEÇAS'' ' where rdb$relation_name = 'EQUIPAMENTOS_PECAS' and rdb$field_name = 'FK_PRODUTOS';
CREATE TABLE EQUIPAMENTOS_SERVICOS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAGS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_EQUIPAMENTOS               SMALLINT         DEFAULT 1 NOT NULL,
  PK_EQUIP_SERVICOS             SMALLINT         NOT NULL,
  FK_SERVICOS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FAMILIAS                   SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_EQUIPAMENTOS_SERVICOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, FK_TAGS, FK_EQUIPAMENTOS, PK_EQUIP_SERVICOS)
);
CREATE TABLE EQUIPAMENTOS_SINTOMAS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAGS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_EQUIPAMENTOS               SMALLINT         DEFAULT 1 NOT NULL,
  PK_EQUIP_SINTOMAS             SMALLINT         NOT NULL,
  FK_SINTOMAS                   SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_EQUIPAMENTOS_SINTOMAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, FK_TAGS, FK_EQUIPAMENTOS, PK_EQUIP_SINTOMAS)
);
CREATE TABLE EXTINTORES 
(
  EMPRESA                        SMALLINT         DEFAULT 1 NOT NULL,
  FILIAL                         SMALLINT         DEFAULT 1 NOT NULL,
  CODEXTINTOR                    SMALLINT         NOT NULL,
  DESCRICAO                       VARCHAR(    50)  COLLATE ISO8859_1,
  TIPO                            VARCHAR(    20)  COLLATE ISO8859_1,
  CLASSE                          VARCHAR(     5)  COLLATE ISO8859_1,
  CAPACIDADE                     SMALLINT,
  MARCA                           VARCHAR(    20)  COLLATE ISO8859_1,
  MODELO                          VARCHAR(    20)  COLLATE ISO8859_1,
  NUMEROSERIE                     VARCHAR(    20)  COLLATE ISO8859_1,
  PROPRIO                            CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  PROPRIETARIO                    VARCHAR(    50)  COLLATE ISO8859_1,
  NUMEROPATRIMONIO                VARCHAR(    20)  COLLATE ISO8859_1,
  DATAAQUISICAO                      DATE,
  DATAULTINSPECAO               TIMESTAMP,
  DATAULTRECARGA                TIMESTAMP,
  DATAPROXRECARGA                    DATE,
  VALIDADERECARGA                SMALLINT,
  VALIDADERETESTE                SMALLINT,
  VALIDADEINSPECAO               SMALLINT,
  VALIDADECASCO                  SMALLINT,
  USER_CAD                        VARCHAR(    10) DEFAULT user COLLATE ISO8859_1,
  USER_ALT                        VARCHAR(    10) DEFAULT user COLLATE ISO8859_1,
  DATA_CAD                      TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                      TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  CUSTOAQUISICAO                  NUMERIC( 12, 2),
  CODFORNECEDOR                   VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CENTROCUSTO                     VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSETOR                        VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSECAO                        VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  DATAALOCACAO                       DATE,
  CODDEPTO                        VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  FK_PRODUTOS                     INTEGER,
  FK_FORN_AQUISICAO               INTEGER,
  FK_FORN_MANUTENCAO              INTEGER,
  FK_PATRIMONO                    INTEGER,
 CONSTRAINT PK_EXTINTORES_1 PRIMARY KEY (EMPRESA, FILIAL, CODEXTINTOR)
);
update rdb$relation_fields set rdb$description = 'TIPO EXTINTOR
AGUA 
GAS CARBONICO
PO QUIMICO
OUTROS---' where rdb$relation_name = 'EXTINTORES' and rdb$field_name = 'TIPO';
update rdb$relation_fields set rdb$description = 'CLASSE DO EXTINTOR
A
B
C
AB 
AC
ABC
' where rdb$relation_name = 'EXTINTORES' and rdb$field_name = 'CLASSE';
update rdb$relation_fields set rdb$description = 'CAPACIDADE EM litros' where rdb$relation_name = 'EXTINTORES' and rdb$field_name = 'CAPACIDADE';
update rdb$relation_fields set rdb$description = 'MESES DA VALIDADE DE RECAR' where rdb$relation_name = 'EXTINTORES' and rdb$field_name = 'VALIDADERECARGA';
update rdb$relation_fields set rdb$description = 'MESES DA VALIDADE DE RETES' where rdb$relation_name = 'EXTINTORES' and rdb$field_name = 'VALIDADERETESTE';
update rdb$relation_fields set rdb$description = 'MESES DA VALIDADE DE INSPEC' where rdb$relation_name = 'EXTINTORES' and rdb$field_name = 'VALIDADEINSPECAO';
update rdb$relation_fields set rdb$description = 'MESES DA VALIDADE DO CAS' where rdb$relation_name = 'EXTINTORES' and rdb$field_name = 'VALIDADECASCO';
update rdb$relation_fields set rdb$description = 'codigo do produto no registro geral de produtos
' where rdb$relation_name = 'EXTINTORES' and rdb$field_name = 'FK_PRODUTOS';
CREATE TABLE FAMILIA_CODIGO 
(
  PK_FAMILIAS              SMALLINT         NOT NULL,
  CODIGOANTIGO              VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_FAMILIA_CODIGO PRIMARY KEY (PK_FAMILIAS)
);
CREATE TABLE FERIADO 
(
  DIAFERIADO                  CHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO              DESCRICAO NOT NULL,
  PK_FERIADOS              INTEGER         NOT NULL
);
CREATE TABLE FILIAL 
(
  PK_EMPRESA                       INTEGER         NOT NULL,
  PK_FILIAL                        INTEGER         NOT NULL,
  RAZAOSOCIAL                         V100 ,
  ENDERECO                            V100 ,
  END_NUMERO                           V10 ,
  END_COMPLEMENTO                      V20 ,
  PK_BAIRRO                        INTEGER,
  PK_CIDADE                        INTEGER,
  PK_PAIS                          INTEGER,
  TELEFONE                        TELEFONE ,
  TELEFAX                         TELEFONE ,
  EMAIL                                V50 ,
  WEBSITE                              V50 ,
  CNAE                                 V10 ,
  CNAE2                                V10 ,
  CNPJ                                CNPJ ,
  INSC_ESTADUAL                        V20 ,
  INSC_MUNICIPAL                       V20 ,
  CEP                                  CEP ,
  UF                                    UF ,
  NOMEFANTASIA                         V50 ,
  DDD                             SMALLINT,
  FK_NATUREZAJURIDICA              VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_FILIAL_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL)
);
CREATE TABLE FIN_ALINEA_CHEQUES 
(
  PK_ALINEA_CHEQUES             SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(    50)  COLLATE ISO8859_1,
  STATUS_ALINEA                     CHAR(     1)  COLLATE ISO8859_1,
 PRIMARY KEY (PK_ALINEA_CHEQUES)
);
CREATE TABLE FIN_BANCOS 
(
  PK_BANCOS              VARCHAR(     5) CHARACTER SET NONE NOT NULL COLLATE NONE,
  BANCONOME              VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  CAD_USER               VARCHAR(    10) CHARACTER SET NONE DEFAULT USER COLLATE NONE,
  ALT_USER               VARCHAR(    10) CHARACTER SET NONE DEFAULT USER COLLATE NONE,
  CAD_DATA             TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  ALT_DATA             TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  LOGOTIPO                  BLOB SUB_TYPE 0 SEGMENT SIZE 80,
 CONSTRAINT PK_FIN_BANCOS_1 PRIMARY KEY (PK_BANCOS)
);
CREATE TABLE FIN_BANCOS_AGENCIAS 
(
  FK_BANCOS                           VALORS NOT NULL,
  PK_AGENCIAS                 DESCRICAO_20RQ NOT NULL,
  DSC_AGE                     DESCRICAO_50RQ NOT NULL,
  OPE_INC                  NOME_OPERADOR_DEF ,
  DTHR_INC                     DATA_HORA_DEF ,
  OPE_ALT                      NOME_OPERADOR ,
  DTHR_ALT                         DATA_HORA ,
  RESPONSAVELCOBRANCA                VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  GERENTEAGENCIA                     VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  ENDERECO                          ENDERECO ,
  END_NUMERO                             V10 ,
  END_COMPLEMENTO                        V10 ,
  PK_CEP                                 CEP ,
  PK_BAIRRO                          INTEGER,
  PK_CIDADE                          INTEGER,
  PK_PAISES                          INTEGER,
  PK_UF                                   UF ,
  TELEFONE                          TELEFONE ,
  TELEFAX                           TELEFONE ,
  EMAIL                                 V100 ,
  CONTACORRENTE                     SMALLINT,
  CONTACOBRANCA                     SMALLINT,
  FK_CTACONTABILDEBITO              SMALLINT,
  FK_CTACONTABILCREDITO             SMALLINT,
  SALDOATUAL                         DECIMAL( 12, 2),
  DIASRETENCAO                      SMALLINT,
  TAXACOBRANCASIMPLES                DECIMAL( 12, 2),
  TAXADESCONTO                       DECIMAL( 12, 2),
  FLUXODECAIXA                  FLAG_SIM_NAO ,
  DIASCOBRANCA                      SMALLINT,
  LIMITECREDITO                      DECIMAL( 12, 2),
  CNPJ_AGENCIA                          CNPJ ,
  SITUACAO                              CHAR(     1) DEFAULT 'A' COLLATE ISO8859_1,
 CONSTRAINT PK_FIN_BANCOS_AGENCIAS_1 PRIMARY KEY (FK_BANCOS, PK_AGENCIAS)
);
CREATE TABLE FIN_BANCOS_BOLETOS 
(
  FK_BANCOS                      INTEGER         NOT NULL,
  F_BANCOAGENCIA                 INTEGER         DEFAULT 1 NOT NULL,
  FK_CONTACORRENTE               VARCHAR(    15) DEFAULT '1' NOT NULL COLLATE ISO8859_1,
  SEQUENCIAL                    SMALLINT         NOT NULL,
  NOME                           VARCHAR(    35)  COLLATE ISO8859_1,
  CODIGOBOLETO                   INTEGER,
  LAYOUTRETORNO                  VARCHAR(    50)  COLLATE ISO8859_1,
  DIRETORIORECEPCAO              VARCHAR(    50)  COLLATE ISO8859_1,
  EXTENSAORECEPCAO               VARCHAR(     3)  COLLATE ISO8859_1,
  VALORBOLETO                    NUMERIC( 15, 2),
  CONVERTEMAIUSCULO              T_YESNO ,
  VALORMINIMO                    NUMERIC( 15, 2),
  MENSAGEM1                      VARCHAR(    60)  COLLATE ISO8859_1,
  MENSAGEM2                      VARCHAR(    60)  COLLATE ISO8859_1,
  MENSAGEM3                      VARCHAR(    60)  COLLATE ISO8859_1,
  MENSAGEM4                      VARCHAR(    60)  COLLATE ISO8859_1,
  MENSAGEM5                      VARCHAR(    60)  COLLATE ISO8859_1,
  MENSAGEM6                      VARCHAR(    60)  COLLATE ISO8859_1,
  LAYOUTBANCO                    VARCHAR(    50)  COLLATE ISO8859_1,
  CODIGOCEDENTE                  VARCHAR(    25)  COLLATE ISO8859_1,
  CEDENTE                        VARCHAR(    40)  COLLATE ISO8859_1,
  CNPJ                           VARCHAR(    20)  COLLATE ISO8859_1,
 CONSTRAINT PK_FIN_BANCOS_BOLETOS PRIMARY KEY (FK_BANCOS, F_BANCOAGENCIA, FK_CONTACORRENTE, SEQUENCIAL)
);
CREATE TABLE FIN_BANCOS_CONTAS 
(
  FK_EMPRESAS                  VALORI NOT NULL,
  FK_TIPO_CONTAS               VALORI NOT NULL,
  FK_CONTAS                    VALORS NOT NULL,
  FK_BANCOS                    VALORS NOT NULL,
  FK_AGENCIAS          DESCRICAO_20RQ NOT NULL,
  COD_CTA              DESCRICAO_20RQ NOT NULL,
  NUM_INITL                    VALORI ,
  PAG_NUM                      VALORS ,
  NUM_CHQ                      VALORI ,
  NUM_REM                      VALORI ,
  SLD_PRVST         NUMERO_GRANDE_4CD ,
  SLD_REAL          NUMERO_GRANDE_4CD ,
  NUM_CTR                DESCRICAO_20 ,
  OPE_INC           NOME_OPERADOR_DEF ,
  DTHR_INC              DATA_HORA_DEF ,
  OPE_ALT               NOME_OPERADOR ,
  DTHR_ALT                  DATA_HORA ,
 CONSTRAINT PK_FIN_BANCOS_CONTAS_1 PRIMARY KEY (FK_BANCOS, FK_AGENCIAS, FK_EMPRESAS, FK_TIPO_CONTAS, FK_CONTAS)
);
CREATE TABLE FIN_BOLETOMSG 
(
  PK_BOLETO_MSG             SMALLINT         NOT NULL,
  NOME                       VARCHAR(    30)  COLLATE ISO8859_1,
  MENSAGEM1                  VARCHAR(    60)  COLLATE ISO8859_1,
  MENSAGEM2                  VARCHAR(    60)  COLLATE ISO8859_1,
  MENSAGEM3                  VARCHAR(    60)  COLLATE ISO8859_1,
  MENSAGEM4                  VARCHAR(    60)  COLLATE ISO8859_1,
  MENSAGEM5                  VARCHAR(    60)  COLLATE ISO8859_1,
 CONSTRAINT PK_FIN_BOLETOMSG PRIMARY KEY (PK_BOLETO_MSG)
);
CREATE TABLE FIN_CARTAOCREDITO 
(
  PK_CARTAOCREDITO                INTEGER         NOT NULL,
  NOMECARTAOCREDITO                   V50 ,
  DIARECEBIMENTO                  INTEGER,
  CARECIA                         INTEGER,
  REDETECBAN                         CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  TIPOREDE                        INTEGER,
  ULTIMOMOVIMENTO                    DATE,
  VALORULTMOVIMENTO               DECIMAL( 15, 2),
  SALDOCONTA                      DECIMAL( 15, 2),
  FK_BANCO                        INTEGER,
  FK_BANCOAGENCIA                 INTEGER,
  FK_CONTACORRENTE                INTEGER,
  FK_FORNECEDOR                   INTEGER         DEFAULT 1 NOT NULL,
  TAXAADMINISTRATIVA              DECIMAL(  6, 2) DEFAULT 5 NOT NULL,
 CONSTRAINT PK_FIN_CARTAOCREDITO_1 PRIMARY KEY (PK_CARTAOCREDITO)
);
update rdb$relation_fields set rdb$description = 'CODIGO DA ADMINISTRADORA NA TABELA DE FORNECEDORES' where rdb$relation_name = 'FIN_CARTAOCREDITO' and rdb$field_name = 'FK_FORNECEDOR';
CREATE TABLE FIN_CONDICAOPAGTOS 
(
  FK_EMPRESAS                     SMALLINT,
  FK_FILIAIS                      SMALLINT,
  PK_CONDICAOPAGTO                SMALLINT         NOT NULL,
  DESCRICAO                        VARCHAR(    50)  COLLATE ISO8859_1,
  DIASCONDICAO                    SMALLINT,
  IPI_CONDICAO                        CHAR(     1)  COLLATE ISO8859_1,
  DESCONTOFINANCEIRO               DECIMAL(  6, 2),
  DIASPARADESCONTO                SMALLINT,
  ACRESCIMOFINANCEIRO              DECIMAL(  6, 2),
  LIMITESUPERIOR                   DECIMAL( 12, 2),
  LIMITEINFERIOR                   DECIMAL( 12, 2),
 PRIMARY KEY (PK_CONDICAOPAGTO)
);
update rdb$relation_fields set rdb$description = 'TIPO DE IPI 
N - J - S' where rdb$relation_name = 'FIN_CONDICAOPAGTOS' and rdb$field_name = 'IPI_CONDICAO';
CREATE TABLE FIN_CONDPAGTO_ITEM 
(
  FK_EMPRESAS                   SMALLINT         NOT NULL,
  FK_FILIAIS                    SMALLINT         NOT NULL,
  FK_CONDICAOPAGTO              SMALLINT         NOT NULL,
  PK_CONDPAGTO_ITEM             SMALLINT         NOT NULL,
  DIASDACONDICAO                SMALLINT,
  PERCENTUALRATEIO               DECIMAL(  6, 2)
);
CREATE TABLE FIN_HISTORICOPADRAO 
(
  PK_HISTORICOPADRAO             SMALLINT         NOT NULL,
  CODIGO                         SMALLINT,
  DESCRICAO                       VARCHAR(   100)  COLLATE PT_BR,
 CONSTRAINT PK_HISTPADRAO PRIMARY KEY (PK_HISTORICOPADRAO)
);
CREATE TABLE FIN_INDICESFINANCEIROS 
(
  PK_INDICES             SMALLINT         NOT NULL,
  DESCRICAO               VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  TIPOINDICE                 CHAR(     1) DEFAULT 'I' COLLATE ISO8859_1,
  SIMBOLO                 VARCHAR(    10)  COLLATE ISO8859_1,
  PERIODO                    CHAR(     1) DEFAULT 'M' COLLATE ISO8859_1,
  USER_INC                VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  USER_ALT                VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC              TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT              TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 PRIMARY KEY (PK_INDICES)
);
update rdb$relation_fields set rdb$description = 'Tipo de indice,
MOEDA
INDICE 
PADRAO EH INDICE' where rdb$relation_name = 'FIN_INDICESFINANCEIROS' and rdb$field_name = 'TIPOINDICE';
update rdb$relation_fields set rdb$description = 'tipo de periodo de reajuste do indice
HORAS
DIAS
MENSAL
BIMESTRAL
TRIMESTRAL
SEMESTRAL
ANUAL
' where rdb$relation_name = 'FIN_INDICESFINANCEIROS' and rdb$field_name = 'PERIODO';
CREATE TABLE FIN_INDICESVALORES 
(
  FK_INDICES              SMALLINT         NOT NULL,
  DATAINDICE                  DATE         DEFAULT CURRENT_DATE NOT NULL,
  VALORINDICE              DECIMAL( 12, 2),
  TAXAINDICE               DECIMAL(  6, 2),
  USER_INC           USUARIOPADRAO DEFAULT USER,
  USER_ALT           USUARIOPADRAO DEFAULT USER,
  DATA_INC               TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT               TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 PRIMARY KEY (FK_INDICES, DATAINDICE)
);
CREATE TABLE FIN_NATUREZAS 
(
  FK_EMPRESAS                   SMALLINT,
  FK_FILIAIS                    SMALLINT,
  PK_NATUREZAS                  SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  CALCULA_IRRF              FLAG_SIM_NAO ,
  CALCULA_ISS               FLAG_SIM_NAO ,
  CALCULA_INSS              FLAG_SIM_NAO ,
  CALCULA_COFINS            FLAG_SIM_NAO ,
  CALCULA_PIS               FLAG_SIM_NAO ,
  CALCULA_CSLL              FLAG_SIM_NAO ,
  FK_CTACONTABIL                SMALLINT,
  DEDUZ_PIS                 FLAG_SIM_NAO ,
  DEDUZ_COFINS              FLAG_SIM_NAO ,
  DEDUZ_INSS                FLAG_SIM_NAO ,
  DEDUZ_CSLL                FLAG_SIM_NAO ,
  DEDUZ_IRRF                FLAG_SIM_NAO ,
  DEDUZ_ISS                 FLAG_SIM_NAO ,
  PERCENTUAL_ISS                 DECIMAL(  6, 2),
  PERCENTUAL_INSS                DECIMAL(  6, 2),
  PERCENTUAL_PIS                 DECIMAL(  6, 2),
  PERCENTUAL_IRRF                DECIMAL(  6, 2),
  PERCENTUAL_CSLL                DECIMAL(  6, 2),
  PERCENTUAL_COFINS              DECIMAL(  6, 2),
 PRIMARY KEY (PK_NATUREZAS)
);
CREATE TABLE FIN_ORCAMENTOS 
(
  FK_EMPRESAS               SMALLINT,
  FK_FILIAIS                SMALLINT,
  PK_ORCAMENTOS             SMALLINT         NOT NULL,
  FK_NATUREZAS              SMALLINT,
  DESCRICAO                  VARCHAR(   100)  COLLATE ISO8859_1,
  ANOORCAMENTO              SMALLINT,
  JANEIRO                    DECIMAL( 12, 2),
  FEVEREIRO                  DECIMAL( 12, 2),
  MARCO                      DECIMAL( 12, 2),
  ABRIL                      DECIMAL( 12, 2),
  MAIO                       DECIMAL( 12, 2),
  JUNHO                      DECIMAL( 12, 2),
  JULHO                      DECIMAL( 12, 2),
  AGOSTO                     DECIMAL( 12, 2),
  SETEMBRO                   DECIMAL( 12, 2),
  OUTUBRO                    DECIMAL( 12, 2),
  NOVEMBRO                   DECIMAL( 12, 2),
  DEZEMBRO                   DECIMAL( 12, 2),
 PRIMARY KEY (PK_ORCAMENTOS)
);
CREATE TABLE FIN_PARAMETROS 
(
  FKFK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                    SMALLINT,
  SEQUENCIATITULOS                  CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  PREFIXOTITULO                  VARCHAR(    10)  COLLATE ISO8859_1,
  DISPENSAPISCOFINS                 CHAR(     1)  COLLATE ISO8859_1,
  ALTERAMODRETENSAO                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  ALICOTAIRRFFONTE               DECIMAL(  6, 2) DEFAULT 3,
  ALICOTAISS                     DECIMAL(  6, 2) DEFAULT 5,
  DATAANTERIOR              FLAG_SIM_NAO DEFAULT 'N'
);
update rdb$relation_fields set rdb$description = 'Define a inicialização da primeira parcela do título
gerado.
Exemplo:
A -> Para seqüência alfa.
N -> Para seqüência numérica.' where rdb$relation_name = 'FIN_PARAMETROS' and rdb$field_name = 'SEQUENCIATITULOS';
update rdb$relation_fields set rdb$description = 'Campo ou dado a ser gravado no prefixo do título
quando for gerado automaticamente pela rotina -
Atualização de Comissão -' where rdb$relation_name = 'FIN_PARAMETROS' and rdb$field_name = 'PREFIXOTITULO';
update rdb$relation_fields set rdb$description = 'Descrição modalidade de tratamento da dispensa
de retenção para PIS/Cofins/CSLL .
1 = Avaliação por nota/título. MV_AB10925
2 = Avaliação por somatório das notas/títulos por
cliente/loja/mês/ano.' where rdb$relation_name = 'FIN_PARAMETROS' and rdb$field_name = 'DISPENSAPISCOFINS';
update rdb$relation_fields set rdb$description = 'Indica se o usuário tem permissão para alterar a
modalidade de retenção na janela “Cálculo de
Retenção”.S= permite alteração (padrão); N = não
permite alteração.' where rdb$relation_name = 'FIN_PARAMETROS' and rdb$field_name = 'ALTERAMODRETENSAO';
update rdb$relation_fields set rdb$description = 'Alíquota de IRRF para títulos com retenção na
fonte. Os percentuais são utilizados de acordo com
tabela legal.' where rdb$relation_name = 'FIN_PARAMETROS' and rdb$field_name = 'ALICOTAIRRFFONTE';
update rdb$relation_fields set rdb$description = 'Alíquota do ISS em casos de prestação de serviços,
utilizando percentuais definidos pelo município' where rdb$relation_name = 'FIN_PARAMETROS' and rdb$field_name = 'ALICOTAISS';
update rdb$relation_fields set rdb$description = 'Permite a baixa de título a receber com data de
crédito menor que a data de emissão' where rdb$relation_name = 'FIN_PARAMETROS' and rdb$field_name = 'DATAANTERIOR';
CREATE TABLE FIN_TIPOEMPRESTIMOS 
(
  PK_TIPOEMPRESTIMOS             SMALLINT         NOT NULL,
  DESCRICAO                       VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  OBSERVACAO                         BLOB SUB_TYPE 0 SEGMENT SIZE 20,
 PRIMARY KEY (PK_TIPOEMPRESTIMOS)
);
CREATE TABLE FIN_TIPOINSTRUCACOBRANCA 
(
  PK_TIPOINSTRUCAO             SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_TIPOINSTRUCAO)
);
CREATE TABLE FIN_TIPOOCORCOBRANCA 
(
  PK_TIPOOCORCOBRANCA             SMALLINT         NOT NULL,
  DESCRICAO                        VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_TIPOOCORCOBRANCA)
);
CREATE TABLE FIS_ATIVIDADES_SERVICOS 
(
  PK_ATIVIDADESERVICOS              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  DESCRICAO                         VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  PERCENTUAL_ISS                    DECIMAL(  6, 2),
  FK_CODSERVATIVIDADE               VARCHAR(    10)  COLLATE ISO8859_1,
  USER_INC                          VARCHAR(    10) DEFAULT USER NOT NULL COLLATE ISO8859_1,
  USER_ALT                          VARCHAR(    10) DEFAULT USER NOT NULL COLLATE ISO8859_1,
  DATA_INC                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 PRIMARY KEY (PK_ATIVIDADESERVICOS)
);
CREATE TABLE FIS_BANCOS_CONTRATOS 
(
  FK_BANCOS                      SMALLINT,
  FK_BANCOS_AGENCIAS             SMALLINT,
  FK_CONTACORRENTE               SMALLINT,
  PK_BANCOCONTRATO               SMALLINT         NOT NULL,
  VALORCONTRATO                   DECIMAL( 12, 2),
  DATACONTRATO                       DATE,
  VENCIMENTO                         DATE,
  RENOVACAO                          DATE,
  DESCRICAO                       VARCHAR(   100)  COLLATE ISO8859_1,
  TAXAACRESVENDOR                 DECIMAL(  6, 2),
  VALORCOTA                       DECIMAL( 12, 4),
 PRIMARY KEY (PK_BANCOCONTRATO)
);
CREATE TABLE FIS_BASEICMS 
(
  PK_UF                         CHAR(     2) CHARACTER SET NONE NOT NULL COLLATE NONE,
  PK_PRODUTO                 INTEGER         NOT NULL,
  BASEICMS                   NUMERIC( 15, 2),
  TIPO                       INTEGER,
  CLASSIFICACAO                  V10 ,
 CONSTRAINT PK_FIS_BASEICMS_1 PRIMARY KEY (PK_UF, PK_PRODUTO)
);
CREATE TABLE FIS_CFOPISS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_CFOPISS                    SMALLINT         NOT NULL,
  FK_SERVICOLEIAUTE             SMALLINT         DEFAULT 1 NOT NULL,
  CFOPISS                        VARCHAR(    10)  COLLATE PT_BR,
  DESCRICAO                      VARCHAR(   200)  COLLATE PT_BR,
 CONSTRAINT FIS_CFOPISSPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_CFOPISS)
);
CREATE TABLE FIS_CODFISCFOP 
(
  COD                        INTEGER,
  DIVIS                      INTEGER,
  NOME                       VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  ENTSAI                     VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  VARVCONT                   VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARBCST                    VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARVST                     VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARBCTICMS                 VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARVLICMS                  VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARISICMS                  VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARDIICMS                  VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VAROUICMS                  VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARBCTIPI                  VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARVLIPI                   VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARISIPI                   VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARDIIPI                   VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VAROUIPI                   VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARVLFAT                   VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARBCISSQN                 VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARVLISSQN                 VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARBCINSS                  VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARVLINSS                  VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARBCIRF                   VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  VARVLIRF                   VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  BC_TAB_EPP                 VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CLASSIF1                   VARCHAR(   240) CHARACTER SET NONE  COLLATE NONE,
  CLASSIF2                   VARCHAR(   240) CHARACTER SET NONE  COLLATE NONE,
  CLASSIF3                   VARCHAR(   240) CHARACTER SET NONE  COLLATE NONE,
  CLASSIF4                   VARCHAR(   240) CHARACTER SET NONE  COLLATE NONE,
  ACEITALCTO                 VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  ES                         VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  ST                         VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  VC                         VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  BC                         VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  IS_                        VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  OU                         VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  EX                         VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DIMEQ41ITEM10              VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  C1                         VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  C2                         VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  C3                         VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  C4                         VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  C5                         VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  C6                         VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  C7                         VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  C8                         VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  C9                         VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  C10                        VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  C11                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  C12                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  C13                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  C14                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  C15                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  C16                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  C17                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  C18                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  C19                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  C20                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CODRECSIMPLES              VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  VCTADB                     INTEGER,
  VCTACR                     INTEGER,
  PCTADB                     INTEGER,
  PCTACR                     INTEGER,
  ICMSDB                     INTEGER,
  ICMSCR                     INTEGER,
  IPIDB                      INTEGER,
  IPICR                      INTEGER,
  STDB                       INTEGER,
  STCR                       INTEGER,
  ISSQNDB                    INTEGER,
  ISSQNCR                    INTEGER,
  INSSDB                     INTEGER,
  INSSCR                     INTEGER,
  IRFDB                      INTEGER,
  IRFCR                      INTEGER,
  VHIST                      VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  PHIST                      VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  IPIHIST                    VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  ICMSHIST                   VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  STHIST                     VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  ISSQNHIST                  VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  INSSHIST                   VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  IRFHIST                    VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  PRAZOCTACLI                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  PRAZOCTAFOR                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE FIS_DIARIOS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_DIARIOS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_DIARIOSCONC                SMALLINT         DEFAULT 1 NOT NULL,
  FK_PLANOSCONTAS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_PLANOSCONTASUB             SMALLINT         DEFAULT 1 NOT NULL,
  FK_LOTECAD                    SMALLINT         DEFAULT 1 NOT NULL,
  LANCAMENTO                    SMALLINT         DEFAULT 1 NOT NULL,
  DATA                         TIMESTAMP         DEFAULT CURRENT_TIMESTAMP  NOT NULL,
  HISTORICO                      VARCHAR(   400) NOT NULL COLLATE PT_BR,
  VALOR                          DECIMAL( 12, 2),
  TPLANCTO                      SMALLINT         DEFAULT 1,
  FLUXOCX                       SMALLINT         DEFAULT 1,
  ORIGEM                        SMALLINT         DEFAULT 1,
  ORIGEMESPECIE                 SMALLINT         DEFAULT 1,
  FK_ESCRICAT                   SMALLINT,
  FK_GRUPOLANCTO                SMALLINT         DEFAULT 1,
  ORIGEMOP                      SMALLINT         DEFAULT 1,
 CONSTRAINT FIS_DIARIOPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_DIARIOS)
);
CREATE TABLE FIS_DIARIOSCUSTOS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DIARIOS                   SMALLINT         NOT NULL,
  PK_DIARIOSCUSTOS             SMALLINT         NOT NULL,
  FK_CENTROCUSTO                VARCHAR(    10)  COLLATE ISO8859_1,
  VALOR                         DECIMAL( 12, 2),
 CONSTRAINT CO01_DIARIOCUSTOPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DIARIOS, PK_DIARIOSCUSTOS)
);
CREATE TABLE FIS_DIARIOSDUPLICATAS 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_DIARIOS                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_DIARIOSDUPLICATAS             SMALLINT         NOT NULL,
  NRTITULO                          VARCHAR(    20)  COLLATE PT_BR,
  VENCTOTITULO                    TIMESTAMP,
  VALOR                             DECIMAL( 12, 2),
  EMITENTE                         SMALLINT,
  TPTITULO                         SMALLINT,
  DESCTITULO                        VARCHAR(   200)  COLLATE PT_BR,
  ESPECIE                          SMALLINT,
 CONSTRAINT FIS_DIARIODUPLPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DIARIOS, PK_DIARIOSDUPLICATAS)
);
CREATE TABLE FIS_LIVROSFISCAIS 
(
  PK_LIVROFISCAL              INTEGER         NOT NULL,
  FK_EMPRESAS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_TIPOLIVRO                   CHAR(     2)  COLLATE PT_BR,
  NUMEROLIVRO                 INTEGER,
  ANOLIVRO                   SMALLINT,
  MESLIVRO                   SMALLINT,
  PAGINAICIAL                SMALLINT,
  PAGINAFINAL                SMALLINT,
  TIPONUMLIVRO               SMALLINT,
  DATAIMPRESSAO             TIMESTAMP,
 CONSTRAINT FIS_LIVROSFISCAISPK PRIMARY KEY (PK_LIVROFISCAL)
);
CREATE TABLE FIS_PLANOCONTAS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_PLANOSCONTAS               SMALLINT         NOT NULL,
  FK_PLANOCONTAPAI              SMALLINT         DEFAULT 1,
  CLIENTEFORNECEDOR                 CHAR(     1) DEFAULT 'C' COLLATE ISO8859_1,
  FK_CODCLIFORN                 SMALLINT,
  FK_CONTASUPERIOR              SMALLINT         DEFAULT 1,
  FK_PLANOCONTAB                SMALLINT         DEFAULT 1,
  NUMEROCONTA                   SMALLINT,
  DESCRICAO                      VARCHAR(   100)  COLLATE PT_BR,
  TIPOCONTA                     SMALLINT,
  NOMEFANTASIA                   VARCHAR(    30)  COLLATE PT_BR,
  CLASSIFCONTAB                  VARCHAR(    30)  COLLATE PT_BR,
  CONTATITULO                       CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  HISTORICODEBITO                VARCHAR(    25)  COLLATE PT_BR,
  HISTORICOCREDITO               VARCHAR(    25)  COLLATE PT_BR,
  IMPRIMIR                          CHAR(     1)  COLLATE ISO8859_1,
  RETENCAO                          CHAR(     1)  COLLATE ISO8859_1,
  COMENTARIO                     VARCHAR(   300)  COLLATE PT_BR,
  GRAU                          SMALLINT,
 CONSTRAINT CO01_PLANOPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_PLANOSCONTAS)
);
CREATE TABLE FIS_PLANOCONTASCFG 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PLANOCONTAS                SMALLINT         DEFAULT 1 NOT NULL,
  PK_PLANOCONTASCFG             SMALLINT         NOT NULL,
  FK_PLANOCONTASSUB             SMALLINT,
  ORIGEM                        SMALLINT,
  ESPECIE                       SMALLINT,
  DATAINICIO                   TIMESTAMP,
  DATAFIM                      TIMESTAMP,
  INFORMACAO1                    VARCHAR(    30)  COLLATE PT_BR,
  INFORMACAO2                    VARCHAR(    30)  COLLATE PT_BR,
  INFORMACAO3                    VARCHAR(    30)  COLLATE PT_BR,
 CONSTRAINT CO01_PLANOCFGPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PLANOCONTAS, PK_PLANOCONTASCFG)
);
CREATE TABLE FIS_PLANOCONTASSUB 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PLANOCONTAS               SMALLINT         DEFAULT 1 NOT NULL,
  PK_PLANOCONTASUB             SMALLINT         NOT NULL,
  CODIGO                       SMALLINT,
  DESCRICAO                     VARCHAR(   100)  COLLATE PT_BR,
  COMENTARIO                    VARCHAR(   300)  COLLATE PT_BR,
 CONSTRAINT CO01_PLANOSUBPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PLANOCONTAS, PK_PLANOCONTASUB)
);
CREATE TABLE FIS_RAZAOANO 
(
  FK_EMPRESA                SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                SMALLINT         DEFAULT 1 NOT NULL,
  PK_RAZAOANO               SMALLINT         NOT NULL,
  ANO                       SMALLINT         NOT NULL,
  ORIGEMESPECIE             SMALLINT,
  STATUS                    SMALLINT,
 CONSTRAINT FIS_RAZAOANOPK PRIMARY KEY (FK_EMPRESA, FK_FILIAIS, PK_RAZAOANO)
);
CREATE TABLE FIS_RAZAOANODETALHE 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_RAZAOANO                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PLANOCONTAS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_PLANOCONTASSUB             SMALLINT         DEFAULT 1 NOT NULL,
  DEBITO                         DECIMAL( 12, 2),
  CREDITO                        DECIMAL( 12, 2),
  SALDOANTERIOR                  DECIMAL( 12, 2),
  SALDOFINAL                     DECIMAL( 12, 2)
);
CREATE TABLE FIS_SERVICOLEIAUTE 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_SERVICOLEIAUTE             SMALLINT         NOT NULL,
  CODIGO                        SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
 CONSTRAINT FIS_SERVICOLEIAUTEPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_SERVICOLEIAUTE)
);
CREATE TABLE FIS_SIMPLES_EMPRESA 
(
  FK_EMPRESAS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                SMALLINT         DEFAULT 1 NOT NULL,
  DATA                     TIMESTAMP,
  PORTE_FEDERAL             SMALLINT,
  SIMPLES_LEI               SMALLINT,
  ANEXOI                    SMALLINT,
  ANEXOII                   SMALLINT,
  ANEXOIII                  SMALLINT,
  ANEXOIV                   SMALLINT,
  ANEXOV                    SMALLINT
);
CREATE TABLE FIS_SIT_TRIBUTARIAS 
(
  PK_SITUACAO_TRIBUTARIA               VALORS NOT NULL,
  DSC_IMPST                    DESCRICAO_50RQ NOT NULL,
  OPE_INC                   NOME_OPERADOR_DEF ,
  DTHR_INC                      DATA_HORA_DEF ,
  OPE_ALT                       NOME_OPERADOR ,
  DTHR_ALT                          DATA_HORA ,
 CONSTRAINT PK_FIS_SIT_TRIBUTARIAS_1 PRIMARY KEY (PK_SITUACAO_TRIBUTARIA)
);
CREATE TABLE FIS_ST_PIS_SPED 
(
  PK_COD_ST_PIS_SPED                 CHAR(     2) NOT NULL COLLATE ISO8859_1,
  DESCRICAO                       VARCHAR(   100)  COLLATE ISO8859_1,
 PRIMARY KEY (PK_COD_ST_PIS_SPED)
);
CREATE TABLE FIS_TABELANCM 
(
  PK_CODIGONCM              VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  DESCRICAO                 VARCHAR(   100)  COLLATE ISO8859_1,
  SIGLAUNIDADE              VARCHAR(     2)  COLLATE ISO8859_1,
  FK_UNIDADES              SMALLINT,
 CONSTRAINT PK_FIS_TABELANCM PRIMARY KEY (PK_CODIGONCM)
);
CREATE TABLE FIS_VENCTOIMPOSTOS 
(
  COD                 INTEGER,
  NUM                 INTEGER,
  DTFIAP                 DATE,
  NOME                VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  DTINAP                 DATE,
  DTVCTO                 DATE
);
CREATE TABLE FORNECEDORES 
(
  PK_FORNECEDOR                      INTEGER         NOT NULL,
  PK_EMPRESA                         INTEGER         DEFAULT 1 NOT NULL,
  PK_FILIAL                          INTEGER         DEFAULT 1 NOT NULL,
  DATACADASTRO                          DATE,
  CNAE                                   V10 ,
  CNAE2                                  V10 ,
  RAZAOSOCIAL                           V100 ,
  APELIDO                                V50 ,
  TIPOPESSOA                            CHAR(     1) CHARACTER SET NONE DEFAULT 'J' COLLATE NONE,
  SITUACAO                              CHAR(     1) CHARACTER SET NONE DEFAULT 'A' COLLATE NONE,
  PK_CADASTRO                        INTEGER,
  CNPJ_CPF                              CNPJ ,
  INSC_ESTADUAL                         CNPJ ,
  INSC_MUNICIPAL                        CNPJ ,
  ENDERECO                          ENDERECO ,
  END_NUMERO                             V10 ,
  END_COMPLEMENTO                        V20 ,
  PK_BAIRRO                          INTEGER,
  PK_CIDADE                          INTEGER,
  NOMEBAIRRO                             V50 ,
  NOMECIDADE                             V50 ,
  COBRAFRETE                            CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  COBRAICMSSUBST                        CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  CEP                                    CEP ,
  UF                                      UF ,
  PK_PAIS                            INTEGER,
  ULTIMACOMPRA                          DATE,
  MENORCOMPRA                       NUMERICO ,
  MAIORCOMPRA                       NUMERICO ,
  PRIMEIRACOMPRA                        DATE,
  ACUMULADOANO                      NUMERICO ,
  ACUMULADOMES                      NUMERICO ,
  TELEFONE                          TELEFONE ,
  TELEFAX                           TELEFONE ,
  EMAIL                                  V50 ,
  WEBSITE                                V50 ,
  OBSERVACAO                            BLOB SUB_TYPE 1 SEGMENT SIZE 16384 CHARACTER SET NONE,
  FK_CTACONTABILCREDITO              VARCHAR(    10)  COLLATE ISO8859_1,
  FK_CTACONTABILDEBITO               VARCHAR(    10)  COLLATE ISO8859_1,
  FK_NATUREZAFINANCEIRA             SMALLINT,
  FK_CONDICAOPAGTO                  SMALLINT,
  DATAMENORCOMPRA                       DATE,
  DATAMAIORCOMPRA                       DATE,
  DIASMEDIOSDEATRASO                SMALLINT,
  MAIORSALDODEVEDOR                  DECIMAL( 12, 2),
  NUMEROCOMPRAS                     SMALLINT,
  SALDOATUALCONTA                    DECIMAL( 12, 2),
  FIS_RECOLHE_ISS               FLAG_SIM_NAO ,
  FIS_RECOLHE_COFINS            FLAG_SIM_NAO ,
  FIS_RECOLHE_CSLL              FLAG_SIM_NAO ,
  FIS_RECOLHE_PIS               FLAG_SIM_NAO ,
  FIS_CALCULA_INSS              FLAG_SIM_NAO ,
 CONSTRAINT PK_FORNECEDORES_1 PRIMARY KEY (PK_FORNECEDOR)
);
update rdb$relation_fields set rdb$description = 'TIPO DE PESSOA
JURIDICA
FISICA' where rdb$relation_name = 'FORNECEDORES' and rdb$field_name = 'TIPOPESSOA';
update rdb$relation_fields set rdb$description = 'SITUACAO DO FORNECEDORE
A ATIVO
B BLOQUEADO
C CANCELADO
O OUTROS
PADRAO EH ''A''' where rdb$relation_name = 'FORNECEDORES' and rdb$field_name = 'SITUACAO';
update rdb$relation_fields set rdb$description = 'O FORNECEDOR COBRA FRETE?
SIM
NAO
DEFAULT = ''N''' where rdb$relation_name = 'FORNECEDORES' and rdb$field_name = 'COBRAFRETE';
update rdb$relation_fields set rdb$description = 'FORNECEDOR COBRA ICMS SUBSTITUIÇÃO
SIM
NAO
DEFAULT = NAO' where rdb$relation_name = 'FORNECEDORES' and rdb$field_name = 'COBRAICMSSUBST';
CREATE TABLE FORNPRODUTO 
(
  CODFORN                            CHAVE NOT NULL,
  CODPROD                            CHAVE NOT NULL,
  CUSTOREAL                          VALOR ,
  DATATU                              DATE         DEFAULT CURRENT_DATE,
  CODIGOPRODUTO                    VARCHAR(    20)  COLLATE PT_BR,
  ALIQICMS                           VALOR ,
  ALIQIPI                            VALOR ,
  CST                                 CHAR(     3)  COLLATE ISO8859_1,
  MARGEM                             VALOR ,
  OUTROS                             VALOR ,
  PREVENDA                           VALOR ,
  QUANTIDADEEMBALAGEM           QUANTIDADE ,
  NOMEPRODUTO                      VARCHAR(   100)  COLLATE ISO8859_1,
 CONSTRAINT PK_FORNPRODUTO PRIMARY KEY (CODFORN, CODPROD)
);
CREATE TABLE FORNREMEDIOS 
(
  CODIGO                 VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  NOME                   VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  RAZAO                  VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  ENDERECO1              VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  ENDERECO2              VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  BAIRRO                 VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  CIDADE                 VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  ESTADO                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  FONE                   VARCHAR(    14) CHARACTER SET NONE  COLLATE NONE,
  FAX                    VARCHAR(    14) CHARACTER SET NONE  COLLATE NONE,
  CEP                    VARCHAR(     9) CHARACTER SET NONE  COLLATE NONE,
  CGC                    VARCHAR(    18) CHARACTER SET NONE  COLLATE NONE,
  IE                     VARCHAR(    15) CHARACTER SET NONE  COLLATE NONE,
  OBS1                   VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  OBS2                   VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  APELIDO                VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE FORNSIGMA 
(
  FOR_CODIGO              VARCHAR(    20) NOT NULL COLLATE ISO8859_1,
  FOR_DESCRI              VARCHAR(    50)  COLLATE ISO8859_1,
  FOR_ENDERE              VARCHAR(    60)  COLLATE ISO8859_1,
  FOR_CIDADE              VARCHAR(    40)  COLLATE ISO8859_1,
  FOR_FAX                 VARCHAR(    20)  COLLATE ISO8859_1,
  FOR_FONE                VARCHAR(    20)  COLLATE ISO8859_1,
  FOR_CONTAT              VARCHAR(    40)  COLLATE ISO8859_1,
  FOR_APAREL              VARCHAR(    70)  COLLATE ISO8859_1,
  FOR_METODO              VARCHAR(    70)  COLLATE ISO8859_1,
  FOR_OBSERV              VARCHAR(   100)  COLLATE ISO8859_1,
  FOR_BAIRRO              VARCHAR(    30)  COLLATE ISO8859_1,
  FOR_UF                     CHAR(     2)  COLLATE ISO8859_1,
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  FOR_TIPO                VARCHAR(    30)  COLLATE ISO8859_1,
  FOR_EMAIL               VARCHAR(    50)  COLLATE ISO8859_1,
  FOR_IMAGEM              VARCHAR(   254)  COLLATE ISO8859_1,
  FOR_ANEXO               VARCHAR(   254)  COLLATE ISO8859_1,
  HOMEPAGE                VARCHAR(   100)  COLLATE ISO8859_1,
  CELULAR                 VARCHAR(    20)  COLLATE ISO8859_1,
  INSC_ESTAD              VARCHAR(    20)  COLLATE ISO8859_1,
  TIP_FORNEC                 CHAR(     1)  COLLATE ISO8859_1,
  FOR_CGC                 VARCHAR(    18)  COLLATE ISO8859_1,
  FOR_CEP                 VARCHAR(    10)  COLLATE ISO8859_1
);
CREATE TABLE FORNTESTE 
(
  PK_FORNSEQUENCIA                INTEGER         DEFAULT 1 NOT NULL,
  PK_FORNECEDOR                   VARCHAR(    30) CHARACTER SET NONE NOT NULL COLLATE NONE,
  FORNRAZAOSOCIAL                 VARCHAR(    40) CHARACTER SET NONE  COLLATE NONE,
  FORNCNPJ                        VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_IE                         VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_ENDERECO                   VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_NUM_ENDERECO               VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_COMP_ENDERECO              VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_BAIRRO                     VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_CIDADE                     VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_CEP                        VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  FORN_UF                         VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_PAIS                       VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_DATACAD                    VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_TIPOPESSOA                 VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_CONTATO                    VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_TELEFONE                   VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_TELEFAX                    VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_CELULAR                    VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_EMAIL                      VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_DATAULTCOMPRA              VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FORN_OBSERVACAO                 VARCHAR(   171) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                       INTEGER,
  PK_CIDADE                       INTEGER,
  PK_PAISES                       INTEGER,
  FORN_INSC_MUN                      CNPJ ,
  FORN_DDD                            V10 ,
  FORN_CNAE                       VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  FORN_APELIDO                       V100 ,
  FORN_CNAE2                      VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE FORN_CONTATOS 
(
  PK_FORNECEDOR              INTEGER         NOT NULL,
  PK_CONTATOS                INTEGER         NOT NULL,
  CONTATONOME                   V100 ,
  CARGO                          V10 ,
  RAMAL                          V10 ,
  CELULAR                   TELEFONE ,
  ANIVERSARIO                    V10 ,
  CADASTRO                      DATE,
  ULTIMOCONTATO            TIMESTAMP,
 CONSTRAINT PK_FORN_CONTATOS_1 PRIMARY KEY (PK_FORNECEDOR, PK_CONTATOS)
);
CREATE TABLE FORN_LABORATORIOS 
(
  CODIGO              INTEGER         NOT NULL,
  NOME                VARCHAR(    40)  COLLATE ISO8859_1,
 CONSTRAINT PK_FORN_LABORATORIOS_1 PRIMARY KEY (CODIGO)
);
CREATE TABLE FUNCIONARIOS_TESTE 
(
  FUNCI_CODI                     VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  FUNCI_NOME                     VARCHAR(    50)  COLLATE ISO8859_1,
  FUNCI_ABRE                     VARCHAR(    10)  COLLATE ISO8859_1,
  FUNCI_HH                         FLOAT,
  HH_MES                           FLOAT,
  FUNCAO_COD                     VARCHAR(    10)  COLLATE ISO8859_1,
  ORG_CODIGO                     VARCHAR(    10)  COLLATE ISO8859_1,
  AREA_CODIG                     VARCHAR(    10)  COLLATE ISO8859_1,
  FUNCI_IMAG                     VARCHAR(   254)  COLLATE ISO8859_1,
  PLANT_DESC                     VARCHAR(    30)  COLLATE ISO8859_1,
  ADMISSAO                          DATE,
  DEMISSAO                          DATE,
  INATIVO                        T_YESNO ,
  FUNCI_CEP                      VARCHAR(    15)  COLLATE ISO8859_1,
  FUNCI_ENDE                     VARCHAR(    50)  COLLATE ISO8859_1,
  FUNCI_CIDA                     VARCHAR(    30)  COLLATE ISO8859_1,
  FUNCI_TELE                     VARCHAR(    30)  COLLATE ISO8859_1,
  FUNCI_CEL                      VARCHAR(   100)  COLLATE ISO8859_1,
  FUNCI_EMAI                     VARCHAR(   100)  COLLATE ISO8859_1,
  ESCOLARIDA                     VARCHAR(   100)  COLLATE ISO8859_1,
  FUNCI_OBS                      VARCHAR(   150)  COLLATE ISO8859_1,
  FUNCI_ANEX                     VARCHAR(   254)  COLLATE ISO8859_1,
  TIP_PLANTAO                       CHAR(     1)  COLLATE ISO8859_1,
  LOGIN                          VARCHAR(    50)  COLLATE ISO8859_1,
  GRP_CODIGO                     VARCHAR(    15)  COLLATE ISO8859_1,
  CPF                            VARCHAR(    20)  COLLATE ISO8859_1,
  RG                             VARCHAR(    15)  COLLATE ISO8859_1,
  EQUIPE_COD                     VARCHAR(    10)  COLLATE ISO8859_1,
  DATA                              DATE,
  ADMINISTRATIVO                    CHAR(     1)  COLLATE ISO8859_1,
  MANTENEDOR                        CHAR(     1)  COLLATE ISO8859_1,
  OPERADOR                          CHAR(     1)  COLLATE ISO8859_1,
  AREA_CENTRALIZADO                 CHAR(     1)  COLLATE ISO8859_1,
  SENHA_MOBILE                   VARCHAR(    15)  COLLATE ISO8859_1,
  H_DISP_MES                       FLOAT,
  SEQUENCIAL                     INTEGER,
 CONSTRAINT PK_FUNCIONARIOS_TESTE_1 PRIMARY KEY (FUNCI_CODI)
);
CREATE TABLE GRANDESUSCEP 
(
  CODIGO                  VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  UF                      VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADES              INTEGER,
  PK_BAIRROS              INTEGER,
  E                       VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  NOME                    VARCHAR(    71) CHARACTER SET NONE  COLLATE NONE,
  ENDERECO                VARCHAR(    62) CHARACTER SET NONE  COLLATE NONE,
  CEP                     VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE GRMATERIAL 
(
  EMPRESA               SMALLINT         DEFAULT 1 NOT NULL,
  FILIAL                SMALLINT         DEFAULT 1 NOT NULL,
  CODGRUPO                  CHAR(     3) NOT NULL COLLATE ISO8859_1,
  DESCRICAO              VARCHAR(    20) NOT NULL COLLATE ISO8859_1,
 CONSTRAINT PK_GRMATERIAL_1 PRIMARY KEY (EMPRESA, FILIAL, CODGRUPO)
);
CREATE TABLE GRUPOS_SIGLAS 
(
  SIG_CODIGO              VARCHAR(     3) NOT NULL COLLATE ISO8859_1,
  SIG_DESCRI              VARCHAR(   150)  COLLATE ISO8859_1,
  SIG_QUANT                 FLOAT,
  GRP_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE IBE$LOG_BLOB_FIELDS 
(
  LOG_TABLES_ID               NUMERIC( 18, 0) NOT NULL,
  FIELD_NAME                  VARCHAR(    67) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
  OLD_CHAR_VALUE              VARCHAR(  8000) CHARACTER SET UTF8  COLLATE UTF8,
  NEW_CHAR_VALUE              VARCHAR(  8000) CHARACTER SET UTF8  COLLATE UTF8,
  OLD_BLOB_VALUE                 BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  NEW_BLOB_VALUE                 BLOB SUB_TYPE 0 SEGMENT SIZE 80
);
CREATE TABLE IBE$LOG_FIELDS 
(
  LOG_TABLES_ID              NUMERIC( 18, 0) NOT NULL,
  FIELD_NAME                 VARCHAR(    67) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
  OLD_VALUE                  VARCHAR(   255) CHARACTER SET UTF8  COLLATE UTF8,
  NEW_VALUE                  VARCHAR(   255) CHARACTER SET UTF8  COLLATE UTF8
);
CREATE TABLE IBE$LOG_KEYS 
(
  LOG_TABLES_ID              NUMERIC( 18, 0) NOT NULL,
  KEY_FIELD                  VARCHAR(    67) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
  KEY_VALUE                  VARCHAR(   255) CHARACTER SET UTF8  COLLATE UTF8
);
CREATE TABLE IBE$LOG_TABLES 
(
  ID                      NUMERIC( 18, 0) NOT NULL,
  TABLE_NAME              VARCHAR(    67) CHARACTER SET UTF8 NOT NULL COLLATE UTF8,
  OPERATION               VARCHAR(     1) NOT NULL COLLATE ISO8859_1,
  DATE_TIME             TIMESTAMP         NOT NULL,
  USER_NAME               VARCHAR(    67) NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (ID)
);
CREATE TABLE IDIOMAS 
(
  PK_IDIOMA              INTEGER         NOT NULL,
  DESCRICAO                  V20 ,
 CONSTRAINT PK_IDIOMAS_1 PRIMARY KEY (PK_IDIOMA)
);
CREATE TABLE INTERVALOCIDCNAE 
(
  FK_INTERVALOCID                 SMALLINT,
  PK_INTERVALOCIDCNAE             SMALLINT,
  FK_CNAE                          VARCHAR(    15)  COLLATE ISO8859_1
);
CREATE TABLE LABORATORIOS 
(
  LABOR                 VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  NOME                  VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  RAZAO                 VARCHAR(    40) CHARACTER SET NONE  COLLATE NONE,
  CGC                   VARCHAR(    18) CHARACTER SET NONE  COLLATE NONE,
  ENDERE                VARCHAR(    35) CHARACTER SET NONE  COLLATE NONE,
  CIDADE                VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FONE                  VARCHAR(    40) CHARACTER SET NONE  COLLATE NONE,
  CONTATO               VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  "DESC"       DOUBLE PRECISION,
  CONTROLE              VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE LIMITEICMS 
(
  ANO                    INTEGER,
  MES                    INTEGER,
  SEQ                    INTEGER,
  UNIDADE                VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  LIMITEME      DOUBLE PRECISION,
  LIMITEEPP     DOUBLE PRECISION,
  LI            DOUBLE PRECISION,
  LF            DOUBLE PRECISION,
  D             DOUBLE PRECISION,
  VARCR                  VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  VARTAB                 VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  NEMPREG       DOUBLE PRECISION,
  DESCONTO      DOUBLE PRECISION,
  VLRICMS       DOUBLE PRECISION,
  VLR1          DOUBLE PRECISION,
  VLR2          DOUBLE PRECISION,
  VLR3          DOUBLE PRECISION,
  VLR4          DOUBLE PRECISION,
  VLR5          DOUBLE PRECISION,
  STR1                   VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  STR2                   VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  STR3                   VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  STR4                   VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE LOCALESTOQUE 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPOSITOS                SMALLINT         DEFAULT 1 NOT NULL,
  PK_LOCALESTOQUE             SMALLINT         NOT NULL,
  ESCOPODEPOSITO                  CHAR(     1) DEFAULT 'D' COLLATE ISO8859_1,
  QUANTRUAS                   SMALLINT         DEFAULT 5,
  FK_CENTROCUSTO               VARCHAR(    10)  COLLATE ISO8859_1,
  SITUACAO                        CHAR(     1) DEFAULT 'A' COLLATE ISO8859_1,
  DESCRICAO                    VARCHAR(    50)  COLLATE ISO8859_1,
  USER_INC                     VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  USER_ALT                     VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                   TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                   TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  CRIARENDERECOS                  CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  TIPODEPOSITO                    CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_LOCALESTOQUE PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPOSITOS, PK_LOCALESTOQUE)
);
update rdb$relation_fields set rdb$description = 'CODIGO DO DEPOSITO OU ALMOXARIFADO' where rdb$relation_name = 'LOCALESTOQUE' and rdb$field_name = 'FK_DEPOSITOS';
update rdb$relation_fields set rdb$description = 'ESCOPO - TIPO DE DEPOSITO
SE EH DEPOSITO OU UM ALMOXARIFADO
D = DEPOSITO
A = ALMOXARIFADO
PADRAO = D' where rdb$relation_name = 'LOCALESTOQUE' and rdb$field_name = 'ESCOPODEPOSITO';
update rdb$relation_fields set rdb$description = 'SITUAÇAO DO ENDEREÇO
A = ATIVO
I = INATIVO
B = BLOQUEADO
O = OUTROS
M = EM MANUTENCAO
PADRAO =ATIVO ' where rdb$relation_name = 'LOCALESTOQUE' and rdb$field_name = 'SITUACAO';
update rdb$relation_fields set rdb$description = 'PERGUNTA SE QUER CRIAR OS ENDEREÇOS DO LOCAL DE ESTOQUE, SE FOR RESPONDIDO SIM A ESTA PERGUNTA,
O SISTEMA CRIARA TODOS OS (QUANTIDADE DE RUAS) DO CADASTRO
FUNCIONA APENAS QUANDO SE ESTA CADASTRANDO -INSERINDO NOVO REGISTRO' where rdb$relation_name = 'LOCALESTOQUE' and rdb$field_name = 'CRIARENDERECOS';
update rdb$relation_fields set rdb$description = 'tipo de deposito,
S secos
M molhados
R refrigerados
G congelados
C confinados
O outros
' where rdb$relation_name = 'LOCALESTOQUE' and rdb$field_name = 'TIPODEPOSITO';
CREATE TABLE LOCALESTOQUECONF 
(
  FK_EMPRESAS                       SMALLINT         NOT NULL,
  FK_FILIAIS                        SMALLINT         NOT NULL,
  MOSTRAEMPRESA_FILIAIS                 CHAR(     1) DEFAULT 'N ' COLLATE ISO8859_1,
 CONSTRAINT PK_LOCALESTOQUECONF PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS)
);
update rdb$relation_fields set rdb$description = 'SE AO CODIFICAR O ENDERECO MOSTRA O CODIGO DA EMPRESA 
PADRAO DE CODIFICAÃ‡ÃƒO
1 = EMPRESA
1.1 = FILIAL
1.1.1 DEPOSITO
1.1.1.1 LOCAL DO ENDERECO
1.1.1.11. RUA
1.1.1.11.111 ENDERECO
1.1.1.11.111.1 ANDAR
1.1.1.11.111.1.1 APARTAMENTO
1.1.1.11.111.1.1.1 SALA
SE VAI CONSTAR O PRIMEIRO ITEM NO ENDERECO
VAI SERVIR PARA TODOS OS TIPOS DE ARMAZENAMENTO
' where rdb$relation_name = 'LOCALESTOQUECONF' and rdb$field_name = 'MOSTRAEMPRESA_FILIAIS';
CREATE TABLE LOCALESTOQUEENDERECOS 
(
  FK_EMPRESA                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAL                           SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPOSITO                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_LOCALESTOQUE                     SMALLINT         DEFAULT 1 NOT NULL,
  PK_LOCALESTOQUEENDERECO             SMALLINT         NOT NULL,
  END_RUA                              VARCHAR(     5) NOT NULL COLLATE ISO8859_1,
  END_ENDERECO                        SMALLINT         NOT NULL,
  END_ANDAR                           SMALLINT         DEFAULT 1,
  END_APARTAMENTO                     SMALLINT         DEFAULT 1 NOT NULL,
  END_SALA                            SMALLINT         NOT NULL,
  TIPOENDERECO                            CHAR(     1) CHARACTER SET NONE DEFAULT 'P' COLLATE NONE,
  TAMANHOENDERECO                         CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  MED_LARGURA                          DECIMAL( 15, 2) DEFAULT 1.5,
  MED_ALTURA                           DECIMAL( 15, 2) DEFAULT 2.3,
  MED_PROFUNDIDADE                     DECIMAL( 15, 2) DEFAULT 1.2,
  SITUACAO                                CHAR(     1) DEFAULT 'D' COLLATE ISO8859_1,
  FK_PALETE                           SMALLINT,
  ENDERECOMPLETO                       VARCHAR(    25)  COLLATE ISO8859_1,
  ENDERECOAJUSTADO                     VARCHAR(    25)  COLLATE ISO8859_1,
  MED_CUBAGEM                          NUMERIC(  8, 6) COMPUTED BY ( MED_LARGURA * MED_ALTURA * MED_PROFUNDIDADE ),
  DESCRICAO                            VARCHAR(    50)  COLLATE ISO8859_1,
 CONSTRAINT PK_LOCALESTOQUEENDERECOS_1 PRIMARY KEY (FK_EMPRESA, FK_FILIAL, FK_DEPOSITO, FK_LOCALESTOQUE, PK_LOCALESTOQUEENDERECO)
);
update rdb$relation_fields set rdb$description = 'TIPO DE ENDEREÇO
PULMAO
APANHA
VIRTUAL
OUTROS
PADRAO = PULMAO' where rdb$relation_name = 'LOCALESTOQUEENDERECOS' and rdb$field_name = 'TIPOENDERECO';
update rdb$relation_fields set rdb$description = 'TAMANHO DO ENDERECO
NORMAL
GRANDE
ENORME
MEDIO
MINUSCULO
VIRTUAL
OUTROS' where rdb$relation_name = 'LOCALESTOQUEENDERECOS' and rdb$field_name = 'TAMANHOENDERECO';
update rdb$relation_fields set rdb$description = 'SITUAÇAO DO ENDEREÇO
DISPONIVEL
EM USO
MANUTENCAO
OUTROS
PADRAO = DISPONIVEL' where rdb$relation_name = 'LOCALESTOQUEENDERECOS' and rdb$field_name = 'SITUACAO';
CREATE TABLE LOGRADOURO 
(
  PK_LOGRADOURO                      INTEGER         NOT NULL,
  UF                                 VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  PK_CIDADE                          INTEGER,
  DESCRICAONAOABREVIADA              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                          VARCHAR(   125) CHARACTER SET NONE  COLLATE NONE,
  PK_BAIRRO                          INTEGER,
  CEP                                VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  BAI_NU_SEQUENCIAL_FIM              INTEGER,
  LOG_COMPLEMENTO                    VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  LOG_TIPO_LOGRADOURO                VARCHAR(    72) CHARACTER SET NONE  COLLATE NONE,
  LOG_STATUS_TIPO_LOG                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAOSEMACENTO                 VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  DDD                                VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  QUANTCLIENTES                      INTEGER,
  QUANTFORNECEDORES                  INTEGER,
  QUANTTRANSPORTADORAS               INTEGER,
  QUANTVENDEDORES                    INTEGER,
  VENDASTOTAL                        DECIMAL( 12, 2),
  COMPRASTOTAL                      NUMERICO ,
  ULTIMACOMPRA                          DATE,
  ULTIMAVENDA                           DATE,
 CONSTRAINT PK_LOGRADOURO_1 PRIMARY KEY (PK_LOGRADOURO)
);
CREATE TABLE LOG_CALENDARIOS 
(
  PK_CALENDARIOS             SMALLINT         NOT NULL,
  DESCRICAO                   VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  DIAINICIAL                 SMALLINT         DEFAULT 1 NOT NULL,
  TIPOCALENDARIO                 CHAR(     1) DEFAULT 'S' NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_CALENDARIOS)
);
update rdb$relation_fields set rdb$description = 'Dia inicial – Informe o dia do mês (1 a 31) no qual iniciará a sequência das semanas caso o calendário seja semanal' where rdb$relation_name = 'LOG_CALENDARIOS' and rdb$field_name = 'DIAINICIAL';
update rdb$relation_fields set rdb$description = 'Tipo Calend.- Indique “semanal ou mensal”
' where rdb$relation_name = 'LOG_CALENDARIOS' and rdb$field_name = 'TIPOCALENDARIO';
CREATE TABLE LOG_CALENDARIOS_ITEM 
(
  FK_CALENDARIOS               SMALLINT         NOT NULL,
  PK_CALEND_ITEM               SMALLINT         NOT NULL,
  NUMERODIASEMANA              SMALLINT         DEFAULT 1 NOT NULL,
  FEQUENCIASEMANAL             SMALLINT         DEFAULT 1 NOT NULL,
  DIASDASEMANA                  VARCHAR(    10)  COLLATE ISO8859_1,
 PRIMARY KEY (FK_CALENDARIOS, PK_CALEND_ITEM)
);
update rdb$relation_fields set rdb$description = 'Dias Semana – em conseqüência da seleção dos dias da semana, este campo será atualizado com 2,4,6 – segunda, quarta e sexta, por exemplo.' where rdb$relation_name = 'LOG_CALENDARIOS_ITEM' and rdb$field_name = 'DIASDASEMANA';
CREATE TABLE LOG_REGRAENTREGA 
(
  PK_REGRAENTREGA               SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  FK_GRUPOSCLIENTES             SMALLINT,
  FK_CLIENTES                    INTEGER,
 PRIMARY KEY (PK_REGRAENTREGA)
);
update rdb$relations set rdb$description = 'Regras de Entrega
Esta rotina tem o objetivo de cadastrar as regras ou exceções de entrega de um determinado cliente ou grupo de clientes. Estas regras podem se restringir a um veículo, a um grupo de veículos, horário ou calendário.
Exemplo:
Através das regras de entregas podemos configurar que o cliente 00001 recebe apenas com veículo tipo Carreta, das 18:00 às 20:00 horas de segundas, quartas e sextas-feiras' where rdb$relation_name = 'LOG_REGRAENTREGA';
CREATE TABLE LOG_REGRAENTREGA_ITEM 
(
  FK_REGRASENTREGAS               SMALLINT         NOT NULL,
  PK_REGRAENTREGAITEM             SMALLINT         NOT NULL,
  FK_GRUPOSVEICULOS               SMALLINT,
  FK_VEICULOS                         CHAR(     7)  COLLATE ISO8859_1,
  FK_CALENDARIOS                  SMALLINT,
  HORAINICIAL                         TIME,
  HORAFINAL                           TIME,
  TIPOREGRA                           CHAR(     1) DEFAULT 'R' COLLATE ISO8859_1,
 PRIMARY KEY (FK_REGRASENTREGAS, PK_REGRAENTREGAITEM)
);
update rdb$relation_fields set rdb$description = 'Regra - Regra do grupo de clientes ou cliente: Ex: Regra = Condição aceita; Exceção = Condição não aceita' where rdb$relation_name = 'LOG_REGRAENTREGA_ITEM' and rdb$field_name = 'TIPOREGRA';
CREATE TABLE LOG_ROTAS 
(
  PK_ROTAS                         SMALLINT         NOT NULL,
  DESCRICAO                         VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  FK_VEICULO                           CHAR(     7) NOT NULL COLLATE ISO8859_1,
  QUANTPONTOSATENDIDOS             SMALLINT,
  FK_CALENDARIOS                   SMALLINT,
  TEMPODESLOCAMENTO                    TIME,
 PRIMARY KEY (PK_ROTAS)
);
update rdb$relation_fields set rdb$description = 'veiculo
Veículo – É possível associar o veículo à uma rota específica, principalmente se a mesma possuir restrições quanto a horário ou altura do mesmo, por exemplo' where rdb$relation_name = 'LOG_ROTAS' and rdb$field_name = 'FK_VEICULO';
update rdb$relation_fields set rdb$description = 'Máx. Pontos Ven. - indica a quantidade de pontos atendidos por aquela rota' where rdb$relation_name = 'LOG_ROTAS' and rdb$field_name = 'QUANTPONTOSATENDIDOS';
update rdb$relation_fields set rdb$description = 'Calendário – Associando um calendário a uma rota, é possível efetuar a seleção de pedidos, de acordo com uma programação de entregas.' where rdb$relation_name = 'LOG_ROTAS' and rdb$field_name = 'FK_CALENDARIOS';
update rdb$relation_fields set rdb$description = 'Tempo Desl. – Tempo médio de deslocamento entre zonas e setores da rota.' where rdb$relation_name = 'LOG_ROTAS' and rdb$field_name = 'TEMPODESLOCAMENTO';
CREATE TABLE LOG_ROTAS_ITEM 
(
  FK_ROTAS                    SMALLINT         NOT NULL,
  PK_SEQUENCIA                SMALLINT         NOT NULL,
  FK_ZONAS                    SMALLINT,
  FK_ZONA_SETORES             SMALLINT,
  FK_CLIENTES                  INTEGER,
  OBSERVACAO                      BLOB SUB_TYPE 0 SEGMENT SIZE 20,
 PRIMARY KEY (FK_ROTAS, PK_SEQUENCIA)
);
update rdb$relation_fields set rdb$description = 'codigo da rota' where rdb$relation_name = 'LOG_ROTAS_ITEM' and rdb$field_name = 'FK_ROTAS';
update rdb$relation_fields set rdb$description = 'numero da sequencia ' where rdb$relation_name = 'LOG_ROTAS_ITEM' and rdb$field_name = 'PK_SEQUENCIA';
CREATE TABLE LOG_TEMPOSERVICO 
(
  PK_TEMPOSERVICO               SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  FK_GRUPOSCLIENTES             SMALLINT,
  FK_CLIENTES                    INTEGER,
 PRIMARY KEY (PK_TEMPOSERVICO)
);
update rdb$relations set rdb$description = 'Esta rotina tem como objetivo cadastrar o Tempo de Parada do veículo no cliente tendo como base o volume e peso a ser descarregado. Este tempo influenciará a rotina de "Regra de Entrega" no momento da montagem de carga' where rdb$relation_name = 'LOG_TEMPOSERVICO';
CREATE TABLE LOG_TEMPOSERVICO_ITEM 
(
  FK_TEMPOSERVICO                 SMALLINT         NOT NULL,
  PK_TEMPOSERVICOITEM             SMALLINT         NOT NULL,
  DESCRICAO                        VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  PESOTOTAL                        DECIMAL( 12, 2),
  TEMPOGASTO                          TIME,
  VOLUMEMANIPULADO                 DECIMAL( 12, 2),
 PRIMARY KEY (FK_TEMPOSERVICO, PK_TEMPOSERVICOITEM)
);
CREATE TABLE LOG_TIPOSCARGAS 
(
  PK_TIPOSCARGAS             SMALLINT         NOT NULL,
  DESCRICAO                   VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  CARGASECA              FLAG_SIM_NAO ,
  CONGELADA              FLAG_SIM_NAO DEFAULT 'N',
  RESFRIADA              FLAG_SIM_NAO DEFAULT 'N',
  GRANULADA              FLAG_SIM_NAO DEFAULT 'N',
 PRIMARY KEY (PK_TIPOSCARGAS)
);
CREATE TABLE LOG_TIPOZONAARMAZENAGEM 
(
  PK_ZONAARMAZENAGEM             SMALLINT         NOT NULL,
  DESCRICAO                       VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  FK_CORES                       SMALLINT,
  PROCEDIMENTOS                      BLOB SUB_TYPE 0 SEGMENT SIZE 20,
 PRIMARY KEY (PK_ZONAARMAZENAGEM)
);
update rdb$relation_fields set rdb$description = 'Cor – Para identificar a zona de armazenagem, através de cores/semáforo' where rdb$relation_name = 'LOG_TIPOZONAARMAZENAGEM' and rdb$field_name = 'FK_CORES';
CREATE TABLE LOG_UNITIZADORES 
(
  PK_UNITIZADOR                  SMALLINT         NOT NULL,
  DESCRICAO                       VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  MED_LARGURA                     DECIMAL( 12, 2),
  MED_ALTURA                      DECIMAL( 12, 2),
  MED_PROFUNDIDADE                DECIMAL( 12, 2),
  MED_CUBAGEM                     NUMERIC(  8, 6) COMPUTED BY (MED_LARGURA * MED_ALTURA * MED_PROFUNDIDADE),
  CAPACIDADE                      DECIMAL( 12, 2),
  EMPILHAMENTOMAXIMO             SMALLINT         DEFAULT 10,
  PESOTARA                        DECIMAL( 12, 2),
  ITEMCONSUMO                FLAG_SIM_NAO DEFAULT 'N',
 PRIMARY KEY (PK_UNITIZADOR)
);
update rdb$relation_fields set rdb$description = 'Desc. Unitiz. – Descrição do Unitizador. Ex.:caixa, pallet, gaiola ou outros' where rdb$relation_name = 'LOG_UNITIZADORES' and rdb$field_name = 'DESCRICAO';
update rdb$relation_fields set rdb$description = 'Altura / Largura / Comprimento - Dimensões do unitizador, sendo que os valores informados serão aplicados nos cálculos de cubagem.' where rdb$relation_name = 'LOG_UNITIZADORES' and rdb$field_name = 'MED_LARGURA';
update rdb$relation_fields set rdb$description = 'Altura / Largura / Comprimento - Dimensões do unitizador, sendo que os valores informados serão aplicados nos cálculos de cubagem.' where rdb$relation_name = 'LOG_UNITIZADORES' and rdb$field_name = 'MED_ALTURA';
update rdb$relation_fields set rdb$description = 'Altura / Largura / Comprimento - Dimensões do unitizador, sendo que os valores informados serão aplicados nos cálculos de cubagem.' where rdb$relation_name = 'LOG_UNITIZADORES' and rdb$field_name = 'MED_PROFUNDIDADE';
update rdb$relation_fields set rdb$description = 'Altura / Largura / Comprimento - Dimensões do unitizador, sendo que os valores informados serão aplicados nos cálculos de cubagem.' where rdb$relation_name = 'LOG_UNITIZADORES' and rdb$field_name = 'MED_CUBAGEM';
update rdb$relation_fields set rdb$description = 'Capacidade – Capacidade máxima de peso suportada por um Unitizador EM KILOS
' where rdb$relation_name = 'LOG_UNITIZADORES' and rdb$field_name = 'CAPACIDADE';
update rdb$relation_fields set rdb$description = 'Empilha Máx. – Quantidade máxima de Unitizadores para o empilhamento.' where rdb$relation_name = 'LOG_UNITIZADORES' and rdb$field_name = 'EMPILHAMENTOMAXIMO';
update rdb$relation_fields set rdb$description = 'Tara – Tara do Unitizador, ou seja, peso de um unitizador vazio.' where rdb$relation_name = 'LOG_UNITIZADORES' and rdb$field_name = 'PESOTARA';
update rdb$relation_fields set rdb$description = 'Consumo – Classifica o Unitizador como sendo ou não de consumo ("S" ou "N"), onde:
"S" - significa que o unitizador não retorna p/o fornecedor; "
“N" - o unitizador retorna p/ o fornecedor' where rdb$relation_name = 'LOG_UNITIZADORES' and rdb$field_name = 'ITEMCONSUMO';
CREATE TABLE LOG_VEICMOVIMENTO 
(
  EMPRESA                  SMALLINT         NOT NULL,
  FILIAL                   SMALLINT         NOT NULL,
  PLACAVEICULO                 CHAR(     7) CHARACTER SET NONE NOT NULL COLLATE NONE,
  DATASAIDA               TIMESTAMP         DEFAULT CURRENT_TIMESTAMP  NOT NULL,
  KMSAIDA                   NUMERIC( 15, 4),
  DATAENTRADA             TIMESTAMP,
  KMENTRADA                 NUMERIC( 15, 4),
  MOTORISTA                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  DESTINO                   VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  OBSERVACAO                   BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  SEQUENCIAL                INTEGER,
 CONSTRAINT PK_LOG_VEICMOVIMENTO_1 PRIMARY KEY (EMPRESA, FILIAL, PLACAVEICULO, DATASAIDA)
);
CREATE TABLE LOG_ZONAS 
(
  PK_ZONAS                   SMALLINT         NOT NULL,
  DESCRICAO                   VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  FK_VENDEDORES               INTEGER,
  FK_COBRADORES               INTEGER,
  FK_CALENDARIOS              INTEGER,
  TEMPOROTA                      TIME,
 PRIMARY KEY (PK_ZONAS)
);
update rdb$relation_fields set rdb$description = 'Zona - AUTOMATICO Informe um código para identificação da Zona' where rdb$relation_name = 'LOG_ZONAS' and rdb$field_name = 'PK_ZONAS';
update rdb$relation_fields set rdb$description = '• Descrição – Para complemento da descrição informado no campo anterior, informe a descrição do mesmo.' where rdb$relation_name = 'LOG_ZONAS' and rdb$field_name = 'DESCRICAO';
update rdb$relation_fields set rdb$description = '• Calendário - Código do calendário para a zona. Caso informado será usado na janela de entregas na montagem de carga.' where rdb$relation_name = 'LOG_ZONAS' and rdb$field_name = 'FK_CALENDARIOS';
update rdb$relation_fields set rdb$description = '• Tempo - Tempo médio de deslocamento entre os setores da zona. Será usado na montagem de carga para previsão de horário de chegada ao cliente.' where rdb$relation_name = 'LOG_ZONAS' and rdb$field_name = 'TEMPOROTA';
CREATE TABLE LOG_ZONAS_SETORES 
(
  FK_ZONAS                      SMALLINT         NOT NULL,
  PK_ZONAS_SETORES               INTEGER         NOT NULL,
  DESCRICAO                      VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  PONTOREFERENCIA                VARCHAR(   100)  COLLATE ISO8859_1,
  TEMPODESLOCAMENTO                 TIME,
 PRIMARY KEY (FK_ZONAS, PK_ZONAS_SETORES)
);
update rdb$relation_fields set rdb$description = 'Zona - Informe um código para identificação da Zona para roteirização' where rdb$relation_name = 'LOG_ZONAS_SETORES' and rdb$field_name = 'FK_ZONAS';
update rdb$relation_fields set rdb$description = 'Setor - Código do Setor na Zona. AUTOMATICO PELO SISTEMA' where rdb$relation_name = 'LOG_ZONAS_SETORES' and rdb$field_name = 'PK_ZONAS_SETORES';
update rdb$relation_fields set rdb$description = 'Ponto Referen. - Observação do ponto de referência do setor selecionado' where rdb$relation_name = 'LOG_ZONAS_SETORES' and rdb$field_name = 'PONTOREFERENCIA';
update rdb$relation_fields set rdb$description = 'Tempo Desl. - Tempo médio de deslocamento entre clientes do setor.' where rdb$relation_name = 'LOG_ZONAS_SETORES' and rdb$field_name = 'TEMPODESLOCAMENTO';
CREATE TABLE LOG_ZONA_SETOR_PONTOS 
(
  FK_ZONAS                         SMALLINT         NOT NULL,
  FK_ZONAS_SETORES                 SMALLINT         NOT NULL,
  PK_ZONA_SETOR_PONTOS              INTEGER         NOT NULL,
  SEQUENCIA                        SMALLINT         NOT NULL,
  FK_CLIENTES                       INTEGER,
 PRIMARY KEY (FK_ZONAS, FK_ZONAS_SETORES, PK_ZONA_SETOR_PONTOS)
);
update rdb$relation_fields set rdb$description = 'SEQUENCIA DE ENTREGA DENTRO DA ROTA' where rdb$relation_name = 'LOG_ZONA_SETOR_PONTOS' and rdb$field_name = 'SEQUENCIA';
update rdb$relation_fields set rdb$description = 'CODIGO DO CLIENTE NA TABELA clientes
' where rdb$relation_name = 'LOG_ZONA_SETOR_PONTOS' and rdb$field_name = 'FK_CLIENTES';
CREATE TABLE MAN_5W2H_PECAS 
(
  PK_OSR_PECAS                 INTEGER         NOT NULL,
  QUANTIDADE                   INTEGER         DEFAULT 1 NOT NULL,
  PECAS_DESCRICAO              VARCHAR(   200)  COLLATE ISO8859_1,
  FK_OSR_CODIGO                INTEGER         DEFAULT 1 NOT NULL,
  FK_PECAS                     INTEGER         DEFAULT 1 NOT NULL,
 PRIMARY KEY (PK_OSR_PECAS)
);
CREATE TABLE MAN_ABASTECIMENTO_ITEM 
(
  CODIGO                      INTEGER,
  DESCRICAO                   VARCHAR(    80)  COLLATE ISO8859_1,
  VALOR_UNITARIO                FLOAT,
  IDEAL                         FLOAT,
  FOR_CODIGO                  VARCHAR(    15)  COLLATE ISO8859_1
);
CREATE TABLE MAN_ABASTECIMENTO_MAQ_ITEM 
(
  MAQ_CODIGO                      VARCHAR(    25)  COLLATE ISO8859_1,
  DISP_CODIG                      VARCHAR(    10)  COLLATE ISO8859_1,
  VALOR_DISP                        FLOAT,
  VALOR_CONSUMO                     FLOAT,
  IDEAL                             FLOAT,
  ITEM_ABASTECIMENTO              INTEGER
);
CREATE TABLE MAN_ACOMPANHAMENTO 
(
  OS_CODIGO                    VARCHAR(    15)  COLLATE ISO8859_1,
  ACM_INDICE                     FLOAT,
  ACM_ORDEM                    VARCHAR(    20)  COLLATE ISO8859_1,
  ACM_DESCRI                   VARCHAR(   750)  COLLATE ISO8859_1,
  ACM_DATA                      T_DATA ,
  FUNCI_CODI                   VARCHAR(    10)  COLLATE ISO8859_1,
  ACM_MARCAD                      CHAR(     3)  COLLATE ISO8859_1,
  ACM_ENVIAD                      CHAR(     1)  COLLATE ISO8859_1,
  ACM_PENDEN                   VARCHAR(    15)  COLLATE ISO8859_1,
  PEND_DESCR                   VARCHAR(    50)  COLLATE ISO8859_1,
  FUNCI_NOME                   VARCHAR(    50)  COLLATE ISO8859_1,
  CODIGO                       INTEGER,
  HT_CODIGO                    INTEGER,
  FK_OS                        INTEGER,
  FK_FUNCIONARIOS              INTEGER
);
CREATE TABLE MAN_AREAEXEC 
(
  PK_AREAEXEC             SMALLINT         NOT NULL,
  AREA_DESCR               VARCHAR(    50)  COLLATE ISO8859_1,
  DATA                        DATE,
 CONSTRAINT PK_MAN_AREAEXEC PRIMARY KEY (PK_AREAEXEC)
);
CREATE TABLE MAN_AREAEXEC_ANEXO 
(
  FK_AREAEXEC             SMALLINT         NOT NULL,
  ARQUIVO                  VARCHAR(   500)  COLLATE ISO8859_1,
 PRIMARY KEY (FK_AREAEXEC)
);
CREATE TABLE MAN_AS_BUILT 
(
  PK_AS_BUILT                  INTEGER         NOT NULL,
  DESCRICAO                       BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  ANEXO                           BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  NOME_ANEXO                   VARCHAR(   100)  COLLATE ISO8859_1,
  DATA_REALIZADO             TIMESTAMP,
  DATA_SOLICITADO            TIMESTAMP,
  DES_CODIGO                   VARCHAR(    30)  COLLATE ISO8859_1,
  SOLICITANTE                  VARCHAR(   100)  COLLATE ISO8859_1,
  CAMINHO_ANEXO                VARCHAR(   500)  COLLATE ISO8859_1,
  STATUS                          CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FK_DESENHOS                  INTEGER         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_MAN_AS_BUILT PRIMARY KEY (PK_AS_BUILT)
);
CREATE TABLE MAN_AUSENCIAS 
(
  PK_AUSENCIAS                 INTEGER         NOT NULL,
  FK_FUNCIONARIOS              INTEGER         DEFAULT 1 NOT NULL,
  FK_MOTIVOS                   INTEGER         DEFAULT 1 NOT NULL,
  DATA_INI                   TIMESTAMP,
  DATA_FIN                   TIMESTAMP,
  MOTIVO                       VARCHAR(   200)  COLLATE ISO8859_1,
  DIA_TODO                        CHAR(     1) DEFAULT 'N' NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_AUSENCIAS)
);
CREATE TABLE MAN_BANCO_AUSENCIAS 
(
  DATA                              DATE         NOT NULL,
  TOTAL_AUSENTE                  INTEGER,
  TOTAL_AUSENTE_HRS              VARCHAR(    15)  COLLATE ISO8859_1,
  FK_FUNCIONARIOS                INTEGER         DEFAULT 1 NOT NULL,
  PK_BANCOAUSENCIA               INTEGER         NOT NULL,
 PRIMARY KEY (PK_BANCOAUSENCIA)
);
CREATE TABLE MAN_BANCO_HORAS_EXTRAS 
(
  DATA                              DATE         NOT NULL,
  TOTAL_EXTRA_HRS                VARCHAR(    10)  COLLATE ISO8859_1,
  FK_FUNCIONARIOS                INTEGER         DEFAULT 1 NOT NULL,
  FK_OS                          INTEGER         DEFAULT 1 NOT NULL,
  PK_BCOHORASEXTRAS              INTEGER         NOT NULL,
  QUANTHORAEXTRAS                   TIME,
 CONSTRAINT PK_MAN_BANCO_HORAS_EXTRAS PRIMARY KEY (PK_BCOHORASEXTRAS)
);
CREATE TABLE MAN_CAD_PARADAFUNC 
(
  PARADA_CODIGO              INTEGER,
  DESCRIC                    VARCHAR(   140)  COLLATE ISO8859_1,
  META_DIARIA                INTEGER
);
CREATE TABLE MAN_CALIB_APARELHOS 
(
  CALE_CERTI              VARCHAR(    20)  COLLATE ISO8859_1,
  EQCA_CODIG              VARCHAR(    15)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CALIB_AUXLEITURA 
(
  CALE_CERTI                      VARCHAR(    20)  COLLATE ISO8859_1,
  EQUI_CODIG                      VARCHAR(    15)  COLLATE ISO8859_1,
  CALE_ITEM                       VARCHAR(    30)  COLLATE ISO8859_1,
  NUMEROPADRAO                      FLOAT,
  VALORPADRAO                       FLOAT,
  LEITURA1                          FLOAT,
  LEITURA2                          FLOAT,
  LEITURA3                          FLOAT,
  FK_CALIBRACAO                   INTEGER,
  FK_EQUIPAMENTOS                 INTEGER,
  FK_CALIBRACAO_ITEM              INTEGER,
  FK_FAMILIAS                    SMALLINT
);
CREATE TABLE MAN_CALIB_CERT_RESULT 
(
  ESTATUS                   CHAR(     4)  COLLATE ISO8859_1,
  RESULTADO                 CHAR(     2)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CALIB_CUSTO 
(
  CALE_CERTI              VARCHAR(    20)  COLLATE ISO8859_1,
  CALC_TOTAL                FLOAT,
  CALC_APROV              VARCHAR(    30)  COLLATE ISO8859_1,
  CALC_GARAN                 DATE,
  CALC_OBTOT              VARCHAR(   250)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CALIB_EQUIPAM 
(
  CALE_CERTI              VARCHAR(    20)  COLLATE ISO8859_1,
  EQUI_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  CALE_IE                    CHAR(     1)  COLLATE ISO8859_1,
  CALE_EXECU              VARCHAR(    30)  COLLATE ISO8859_1,
  FOR_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  CALE_DATA                  DATE,
  CALE_DESCR              VARCHAR(    50)  COLLATE ISO8859_1,
  CALE_LEITU              NUMERIC(  2, 0),
  CALE_PONTO              NUMERIC(  2, 0),
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  CALE_LOCAL              VARCHAR(    50)  COLLATE ISO8859_1,
  CALE_PRESS              NUMERIC( 15, 8),
  CALE_TEMPE              NUMERIC( 15, 8),
  CALE_MAXDE              NUMERIC( 15, 8),
  CALE_MAXIN              NUMERIC( 15, 8),
  CALE_LAUDO                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_OBS                VARCHAR(   254)  COLLATE ISO8859_1,
  CALE_ERROM              NUMERIC( 15, 8),
  CALE_UMIDA              NUMERIC( 15, 8),
  CALE_VIBRA              NUMERIC( 15, 8),
  CALE_INTER              NUMERIC( 15, 8),
  CALE_POEIR              NUMERIC( 15, 8),
  CALE_LUMIN              NUMERIC( 15, 8),
  CALE_ELETR              NUMERIC( 15, 8),
  CALE_SITUA                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_DIAS               NUMERIC(  3, 0),
  CALE_IMAGE              VARCHAR(   250)  COLLATE ISO8859_1,
  SERV_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  MAL_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  CALE_ORGEX              VARCHAR(    40)  COLLATE ISO8859_1,
  EQCA_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  CALE_PROVI              VARCHAR(    40)  COLLATE ISO8859_1,
  CALE_RASTR              VARCHAR(    55)  COLLATE ISO8859_1,
  CALE_ANEXO              VARCHAR(   254)  COLLATE ISO8859_1,
  CALE_INCER              NUMERIC( 15, 8),
  CALE_DVMED              NUMERIC( 15, 8),
  CALE_FAIXA              NUMERIC( 15, 8),
  CALE_DM1                NUMERIC( 15, 8),
  CALE_DM2                NUMERIC( 15, 8),
  CALE_DM3                NUMERIC( 15, 8),
  CALE_DM4                NUMERIC( 15, 8),
  CALE_DM5                NUMERIC( 15, 8),
  CALE_DM6                NUMERIC( 15, 8),
  CALE_DM7                NUMERIC( 15, 8),
  CALE_DM8                NUMERIC( 15, 8),
  CALE_DM9                NUMERIC( 15, 8),
  CALE_DM10               NUMERIC( 15, 8),
  CALE_DM11               NUMERIC( 15, 8),
  CALE_DM12               NUMERIC( 15, 8),
  CALE_DM13               NUMERIC( 15, 8),
  CALE_DM14               NUMERIC( 15, 8),
  CALE_DM15               NUMERIC( 15, 8),
  CALE_DM16               NUMERIC( 15, 8),
  CALE_DM17               NUMERIC( 15, 8),
  CALE_DM18               NUMERIC( 15, 8),
  CALE_DM19               NUMERIC( 15, 8),
  CALE_DM20               NUMERIC( 15, 8),
  CALE_ERRO               NUMERIC( 15, 8),
  CALE_UTI1                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI2                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI3                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI4                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI5                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI6                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI7                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI8                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI9                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI10                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI11                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI12                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI13                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI14                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI15                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI16                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI17                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI18                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI19                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_UTI20                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LM1                NUMERIC( 15, 8),
  CALE_LM2                NUMERIC( 15, 8),
  CALE_LM3                NUMERIC( 15, 8),
  CALE_LM4                NUMERIC( 15, 8),
  CALE_LM5                NUMERIC( 15, 8),
  CALE_LM6                NUMERIC( 15, 8),
  CALE_LM7                NUMERIC( 15, 8),
  CALE_LM8                NUMERIC( 15, 8),
  CALE_LM9                NUMERIC( 15, 8),
  CALE_LM10               NUMERIC( 15, 8),
  CALE_LM11               NUMERIC( 15, 8),
  CALE_LM12               NUMERIC( 15, 8),
  CALE_LM13               NUMERIC( 15, 8),
  CALE_LM14               NUMERIC( 15, 8),
  CALE_LM15               NUMERIC( 15, 8),
  CALE_LM16               NUMERIC( 15, 8),
  CALE_LM17               NUMERIC( 15, 8),
  CALE_LM18               NUMERIC( 15, 8),
  CALE_LM19               NUMERIC( 15, 8),
  CALE_LM20               NUMERIC( 15, 8),
  CALE_LTI1                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI2                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI3                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI4                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI5                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI6                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI7                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI8                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI9                  CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI10                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI11                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI12                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI13                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI14                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI15                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI16                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI17                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI18                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI19                 CHAR(     1)  COLLATE ISO8859_1,
  CALE_LTI20                 CHAR(     1)  COLLATE ISO8859_1,
  ERRO_PRE                NUMERIC( 15, 8),
  PROG_PERIO              VARCHAR(    25)  COLLATE ISO8859_1,
  CALE_NORM               VARCHAR(    25)  COLLATE ISO8859_1,
  PROG_TOLER                FLOAT
);
CREATE TABLE MAN_CALIB_FAIXAS 
(
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  FCALE_ITEM              VARCHAR(    30)  COLLATE ISO8859_1,
  FCALE_FAIE              VARCHAR(    10)  COLLATE ISO8859_1,
  FCALE_UNIE              VARCHAR(    10)  COLLATE ISO8859_1,
  FCALE_FAIS              VARCHAR(    10)  COLLATE ISO8859_1,
  FCALE_UNIS              VARCHAR(    10)  COLLATE ISO8859_1,
  FCALE_P1                NUMERIC( 15, 8),
  FCALE_P2                NUMERIC( 15, 8),
  FCALE_P3                NUMERIC( 15, 8),
  FCALE_P4                NUMERIC( 15, 8),
  FCALE_P5                NUMERIC( 15, 8),
  FCALE_P6                NUMERIC( 15, 8),
  FCALE_P7                NUMERIC( 15, 8),
  FCALE_P8                NUMERIC( 15, 8),
  FCALE_P9                NUMERIC( 15, 8),
  FCALE_P10               NUMERIC( 15, 8),
  FCALE_P11               NUMERIC( 15, 8),
  FCALE_P12               NUMERIC( 15, 8),
  FCALE_P13               NUMERIC( 15, 8),
  FCALE_P14               NUMERIC( 15, 8),
  FCALE_P15               NUMERIC( 15, 8),
  FCALE_P16               NUMERIC( 15, 8),
  FCALE_P17               NUMERIC( 15, 8),
  FCALE_P18               NUMERIC( 15, 8),
  FCALE_P19               NUMERIC( 15, 8),
  FCALE_P20               NUMERIC( 15, 8),
  FCALE_GRIT              VARCHAR(    45)  COLLATE ISO8859_1,
  FCALE_V1                NUMERIC( 15, 8),
  FCALE_V2                NUMERIC( 15, 8),
  FCALE_V3                NUMERIC( 15, 8),
  FCALE_V4                NUMERIC( 15, 8),
  FCALE_V5                NUMERIC( 15, 8),
  FCALE_V6                NUMERIC( 15, 8),
  FCALE_V7                NUMERIC( 15, 8),
  FCALE_V8                NUMERIC( 15, 8),
  FCALE_V9                NUMERIC( 15, 8),
  FCALE_V10               NUMERIC( 15, 8),
  FCALE_V11               NUMERIC( 15, 8),
  FCALE_V12               NUMERIC( 15, 8),
  FCALE_V13               NUMERIC( 15, 8),
  FCALE_V14               NUMERIC( 15, 8),
  FCALE_V15               NUMERIC( 15, 8),
  FCALE_V16               NUMERIC( 15, 8),
  FCALE_V17               NUMERIC( 15, 8),
  FCALE_V18               NUMERIC( 15, 8),
  FCALE_V19               NUMERIC( 15, 8),
  FCALE_V20               NUMERIC( 15, 8)
);
CREATE TABLE MAN_CALIB_FICHA 
(
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  FCALE_ITEM              VARCHAR(    30)  COLLATE ISO8859_1,
  FCALE_UNID              VARCHAR(    10)  COLLATE ISO8859_1,
  FCALE_GRIT              VARCHAR(    45)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CALIB_FICHAPADRAO 
(
  EQUI_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  TOLER_PROC              NUMERIC( 15, 8),
  CAPA_EXATI              NUMERIC( 15, 8),
  CAPA_INCER              NUMERIC( 15, 8),
  CAPA_CRITI              NUMERIC( 15, 8),
  CAPA_TEMPE              NUMERIC( 15, 8),
  CAPA_UMIDA              NUMERIC( 15, 8),
  CAPA_VIBRA              NUMERIC( 15, 8),
  CAPA_INTER              NUMERIC( 15, 8),
  CAPA_PRESS              NUMERIC( 15, 8),
  CAPA_POEIR              NUMERIC( 15, 8),
  CAPA_LUMIN              NUMERIC( 15, 8),
  CAPA_ELETR              NUMERIC( 15, 8),
  FAIXA_ADEQ              NUMERIC( 15, 8),
  CAPA_NUMSE              VARCHAR(    15)  COLLATE ISO8859_1,
  CAPA_MODEL              VARCHAR(    15)  COLLATE ISO8859_1,
  CAPA_RESP               VARCHAR(    35)  COLLATE ISO8859_1,
  MEDICAO                    CHAR(     1)  COLLATE ISO8859_1,
  STUS_CERTI                 CHAR(     4)  COLLATE ISO8859_1,
  INCER_EXP               NUMERIC( 15, 8),
  INCER_COMB              NUMERIC( 15, 8),
  CALCULO                 NUMERIC( 15, 8),
  COEFIC1                 NUMERIC( 15, 8),
  COEFIC2                 NUMERIC( 15, 8),
  MET_CALC                VARCHAR(    10)  COLLATE ISO8859_1,
  UNID_CONV               VARCHAR(    20)  COLLATE ISO8859_1,
  VL_CONV                 NUMERIC( 15, 8),
  FORM_CONV               VARCHAR(    20)  COLLATE ISO8859_1,
  CAL_TEXT                VARCHAR(    25)  COLLATE ISO8859_1,
  TOL_PROC_2              NUMERIC( 15, 8),
  CODIGO                  INTEGER,
  A                       NUMERIC( 15, 8),
  B                       NUMERIC( 15, 8),
  C                       NUMERIC( 15, 8)
);
CREATE TABLE MAN_CALIB_FICHA_EQUIPAM 
(
  EQUI_CODIG                VARCHAR(    15)  COLLATE ISO8859_1,
  TOLER_PROC                NUMERIC( 15, 8),
  CAPA_INCER                NUMERIC( 15, 8),
  INCER_EXP                 NUMERIC( 15, 8),
  CALCULO                   NUMERIC( 15, 8),
  COEFIC1                   NUMERIC( 15, 8),
  COEFIC2                   NUMERIC( 15, 8),
  MET_CALC                  VARCHAR(    10)  COLLATE ISO8859_1,
  UNID_CONV                 VARCHAR(    20)  COLLATE ISO8859_1,
  CALE_CERTI                VARCHAR(    20)  COLLATE ISO8859_1,
  VL_CONV                   NUMERIC( 15, 8),
  FORM_CONV                 VARCHAR(    20)  COLLATE ISO8859_1,
  CAL_TEXT                  VARCHAR(    25)  COLLATE ISO8859_1,
  TOL_PROC_2                NUMERIC( 15, 8),
  CAPA_EXATI                NUMERIC( 15, 8),
  MEDICAO                      CHAR(     1)  COLLATE ISO8859_1,
  CODIGO                    INTEGER         NOT NULL,
  A                         NUMERIC( 15, 8),
  B                         NUMERIC( 15, 8),
  C                         NUMERIC( 15, 8),
  STATUS_CERTI                 CHAR(    10)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CALIB_SERVICOS 
(
  SERV_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  SERV_DESCR              VARCHAR(   100)  COLLATE ISO8859_1,
  SERV_CLASS              VARCHAR(    40)  COLLATE ISO8859_1,
  AREA_CODIG              VARCHAR(    10)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CALIB_TEXTUAL 
(
  EQUI_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  CAL_CERTI               VARCHAR(    15)  COLLATE ISO8859_1,
  DESCRIC                 VARCHAR(   254)  COLLATE ISO8859_1,
  ORDEM                   VARCHAR(    10)  COLLATE ISO8859_1,
  CODIGO                  INTEGER,
  CAL_TEXT                VARCHAR(    50)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CAUSAS 
(
  PK_CAUSAS             SMALLINT         NOT NULL,
  CODIGO                 VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  DESCRICAO              VARCHAR(   150)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CAUSAS_LISTA 
(
  PK_CAUSASLISTAS              INTEGER         NOT NULL,
  FK_SINTOMAS                  INTEGER         DEFAULT 1 NOT NULL,
  FK_INTERVENCAO               INTEGER         DEFAULT 1 NOT NULL,
  FK_DEFEITOS                  INTEGER         DEFAULT 1 NOT NULL,
  FK_CAUSAS                    INTEGER         DEFAULT 1 NOT NULL,
 PRIMARY KEY (PK_CAUSASLISTAS)
);
CREATE TABLE MAN_CELULUAS_CODIGOS 
(
  PK_CELULAS               SMALLINT         NOT NULL,
  CODIGOANTIGO              VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_CELULUAS_CODIGOS PRIMARY KEY (PK_CELULAS)
);
CREATE TABLE MAN_CFGSIGMA 
(
  MCONFIG_AN                              T_YESNO ,
  MCONFIG_SO                              T_YESNO ,
  MCONFIG_BT                              T_YESNO ,
  MCONFIG_BB                              T_YESNO ,
  EMPRESA                                 VARCHAR(   250)  COLLATE ISO8859_1,
  LOGOTIPO                                VARCHAR(   254)  COLLATE ISO8859_1,
  LOGO_ENTRA                              VARCHAR(   254)  COLLATE ISO8859_1,
  NETDIR_PRI                              VARCHAR(   254)  COLLATE ISO8859_1,
  NETDIR_TAB                              VARCHAR(   254)  COLLATE ISO8859_1,
  NETDIR_CAD                              VARCHAR(   254)  COLLATE ISO8859_1,
  NETDIR_OS                               VARCHAR(   254)  COLLATE ISO8859_1,
  PRIVATE_DI                              VARCHAR(   254)  COLLATE ISO8859_1,
  NETFILE_DI                              VARCHAR(   254)  COLLATE ISO8859_1,
  DATA_LIMIT                                 DATE,
  DATA_ULTIM                                 DATE,
  IMP_ACOMPA                              T_YESNO ,
  IMP_DETALH                              T_YESNO ,
  IMP_SINTOM                              T_YESNO ,
  IMP_HORAST                              T_YESNO ,
  CLS_CODIGO                                FLOAT,
  SIT_CODIGO                                FLOAT,
  BRANCO                                  VARCHAR(   100)  COLLATE ISO8859_1,
  AMARELO                                 VARCHAR(   100)  COLLATE ISO8859_1,
  VERDE                                   VARCHAR(   100)  COLLATE ISO8859_1,
  AZUL                                    VARCHAR(   100)  COLLATE ISO8859_1,
  ROXO                                    VARCHAR(   100)  COLLATE ISO8859_1,
  VERMELHO                                VARCHAR(   100)  COLLATE ISO8859_1,
  PRETO                                   VARCHAR(   100)  COLLATE ISO8859_1,
  DIAS_ALERT                             SMALLINT,
  TEMPODEUSO                             SMALLINT,
  METAFRAME                                  CHAR(     1)  COLLATE ISO8859_1,
  DADOSATU                                   CHAR(     1)  COLLATE ISO8859_1,
  NIV_USU_AL                             SMALLINT,
  EXIBE_ALER                                 CHAR(     1)  COLLATE ISO8859_1,
  PRI_CORRET                             SMALLINT,
  MENSA_INIC                              VARCHAR(   254)  COLLATE ISO8859_1,
  USUA_SETOR                                 CHAR(     1)  COLLATE ISO8859_1,
  DESAB_SIGM                                 CHAR(     1)  COLLATE ISO8859_1,
  MCI                                        CHAR(     1)  COLLATE ISO8859_1,
  "DATABASE"                                 DATE,
  IDIOMA                                     CHAR(     1)  COLLATE ISO8859_1,
  ATU_PES_OS                                 CHAR(     1)  COLLATE ISO8859_1,
  PRI_VEZ                                    CHAR(     1)  COLLATE ISO8859_1,
  TAG_DIV                                    CHAR(     1)  COLLATE ISO8859_1,
  IMP_LEG_CK                                 CHAR(     1)  COLLATE ISO8859_1,
  CAM_SS                                  VARCHAR(   255)  COLLATE ISO8859_1,
  PARAMETRIZA                                CHAR(     1)  COLLATE ISO8859_1,
  MSG_TEMPOESTIMADOOS                        CHAR(     1)  COLLATE ISO8859_1,
  LOGIN_FUNC                                 CHAR(     1)  COLLATE ISO8859_1,
  COD_CFGSIGMA                            VARCHAR(    20)  COLLATE ISO8859_1,
  TEMPO_PENDENCIAS                        INTEGER,
  FILTRAMAQUINA                              CHAR(     1)  COLLATE ISO8859_1,
  SSWEB                                      CHAR(     1)  COLLATE ISO8859_1,
  USUARIOBD                               VARCHAR(    50)  COLLATE ISO8859_1,
  IPSERVIDOR                              VARCHAR(    50)  COLLATE ISO8859_1,
  SENHABD                                 VARCHAR(    50)  COLLATE ISO8859_1,
  FORMULA_VL_MEDIO                           CHAR(     2)  COLLATE ISO8859_1,
  VL_CAL_CUST                             VARCHAR(    10)  COLLATE ISO8859_1,
  GERABACKUP                                 CHAR(     1)  COLLATE ISO8859_1,
  ORD_CK                                     CHAR(     1)  COLLATE ISO8859_1,
  AUDIO_FIM                                  CHAR(     1)  COLLATE ISO8859_1,
  AUDIO_INI                                  CHAR(     1)  COLLATE ISO8859_1,
  AUDIO_MSG                                  CHAR(     1)  COLLATE ISO8859_1,
  AUDIO_TELA                                 CHAR(     1)  COLLATE ISO8859_1,
  EXIBEALERTA_WINDOWS                        CHAR(     1)  COLLATE ISO8859_1,
  ALERTA_PEND                                CHAR(     1)  COLLATE ISO8859_1,
  MULTI_DEP                                  CHAR(     1)  COLLATE ISO8859_1,
  ASSINATURA_SS                              CHAR(     1)  COLLATE ISO8859_1,
  META_SERV_PLAN                          NUMERIC( 15, 2),
  META_UTILIZACAO                         NUMERIC( 15, 2),
  META_EFICIENCIA                         NUMERIC( 15, 2),
  META_PRODUTIVIDADE                      NUMERIC( 15, 2),
  META_DIAS_BACKLOG                       INTEGER,
  DT_ULT_BACKUP                              DATE,
  EXIBE_QUAL_PREENCHIMENTO                   CHAR(     1)  COLLATE ISO8859_1,
  ULT_AVALIACAO                              DATE,
  NECES_TRABALHO                             CHAR(     1)  COLLATE ISO8859_1,
  CODOS                                      CHAR(     3)  COLLATE ISO8859_1,
  GERA_OS_ANTE                               CHAR(     1)  COLLATE ISO8859_1,
  PERIO_CALCULOS                             CHAR(     1)  COLLATE ISO8859_1,
  REQ_APROV_OS                               CHAR(     1)  COLLATE ISO8859_1,
  PECAS_CONCLUSAO                            CHAR(     1)  COLLATE ISO8859_1,
  EXIBE_MSG_PROG_CONCLU                      CHAR(     1)  COLLATE ISO8859_1,
  HERDA_HERARQUIA                            CHAR(     1)  COLLATE ISO8859_1,
  GERA_OS_REL_LUB                            CHAR(     1)  COLLATE ISO8859_1,
  BACK_ORD_OS_DATA                           CHAR(     1)  COLLATE ISO8859_1,
  TIPO_MENU                                  CHAR(     1)  COLLATE ISO8859_1,
  EXIBE_ALERTA_WIN_SS                        CHAR(     1)  COLLATE ISO8859_1,
  SIGMA_MOBILE                               CHAR(     1)  COLLATE ISO8859_1,
  CAMINHO_SERVIDOR                        VARCHAR(   254) CHARACTER SET NONE  COLLATE NONE,
  SIGLA_FAMILIA                              CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  PERCENT_DISPAROS                           CHAR(     1)  COLLATE ISO8859_1,
  TIPO_PAPEL                                 CHAR(     1)  COLLATE ISO8859_1,
  DATA_INSTALACAO                            DATE,
  SS_DUAS_APROV                              CHAR(     1)  COLLATE ISO8859_1,
  BANCO_WEB_EMPRESA                       VARCHAR(    30)  COLLATE ISO8859_1,
  BANCO_WEB_LOCALSERVICE                  VARCHAR(   200)  COLLATE ISO8859_1,
  BANCO_WEB_RECURSO                          CHAR(     1)  COLLATE ISO8859_1,
  BANCO_WEB_SENHA                         VARCHAR(    15)  COLLATE ISO8859_1,
  BANCO_WEB_TEMPO                         INTEGER,
  BANCO_WEB_USUARIO                       VARCHAR(    30)  COLLATE ISO8859_1,
  BANCO_WEB_VALOR                         INTEGER,
  BQO_DATABASE                               CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FILTRAR_PEND_MOBO                          CHAR(     1)  COLLATE ISO8859_1,
  N_PREENCHER_DATA_HT                        CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  ENVIA_EMAIL_SETOR                          CHAR(     1)  COLLATE ISO8859_1,
  SIGMAMAIL                                  CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  CALC_AUTOM_PESO                            CHAR(     1)  COLLATE ISO8859_1,
  EXIBE_MTTR_ITEM                            CHAR(     1)  COLLATE ISO8859_1,
  APLICATIVO_INTEGRA_RM                   VARCHAR(   150)  COLLATE ISO8859_1,
  CALC_PESO_SALVAR                           CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  LANCAMENTOHT_LD                            CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  CODIGO_TAG                                 CHAR(     1)  COLLATE ISO8859_1,
  CODIGO_TAG_VALOR                        VARCHAR(    30)  COLLATE ISO8859_1,
  BACKUP_DIR                              VARCHAR(   400)  COLLATE ISO8859_1,
  FREQ_BACKUP                             INTEGER,
  N_PERM_LHT_FUTURO                          CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  EXIBE_ALERTA_PROG                          CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  XML_PASS_PROXY                          VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  XML_PROXY                               VARCHAR(   250) CHARACTER SET NONE  COLLATE NONE,
  XML_USER_PROXY                          VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  APLICATIVO_INTEGRA_SAIDAPC              VARCHAR(   200)  COLLATE ISO8859_1,
  MODELOREL_CUSTO                            CHAR(     1) CHARACTER SET NONE DEFAULT '1' COLLATE NONE,
  EXIBIR_AVAL_SOLICIT                        CHAR(     1)  COLLATE ISO8859_1,
  GERAR_COD_RM_OS                            CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  RETCHECK_UMA_OS                            CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  ESTOQUE_PC_LOTE                            CHAR(     1)  COLLATE ISO8859_1,
  QTD_LINHAS_LANC_SERV                    INTEGER,
  LOGOTIPO_II                             VARCHAR(   254) CHARACTER SET NONE  COLLATE NONE,
  MODELO_RELCONCLU                        INTEGER         DEFAULT 1,
  SEGUNDA_ASSINATURA                      VARCHAR(   150) CHARACTER SET NONE  COLLATE NONE,
  FILTRA_FUNC_ABER_OS                     VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  SIGMAMAIL_PRAZO                       T_YESNO_S ,
  SIGMAMAIL_LANHT                       T_YESNO_S ,
  SIGMAMAIL_CONOS                       T_YESNO_S ,
  SIGMAMAIL_TODOS                       T_YESNO_S ,
  SIGMAMAIL_APRSS                       T_YESNO_S ,
  SIGMAMAIL_REPSS                       T_YESNO_S ,
  SS_ANEXO                                VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  MULTI_ESTOQ                             T_YESNO ,
  INT_IHM                                    CHAR(     1) CHARACTER SET NONE DEFAULT 'F' COLLATE NONE,
  INT_IMPLAN                              VARCHAR(   250)  COLLATE ISO8859_1,
  LOG_DATABASE                            T_YESNO ,
  IDENT_CLIENTE                           INTEGER,
  CODIGO                                  INTEGER         DEFAULT 1
);
CREATE TABLE MAN_CHECKLIST 
(
  PK_CHECKLIST              INTEGER         NOT NULL,
  DESCRICAO                 VARCHAR(   240)  COLLATE ISO8859_1,
  GERA_OS                      CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  CHECK_ORD                 INTEGER,
  FK_IMAGEM                 INTEGER         DEFAULT 1,
  FK_ANEXO                  INTEGER,
  FK_TIPO_OS               SMALLINT         DEFAULT 1,
  FK_TAG                    INTEGER,
 CONSTRAINT PK_MAN_CHECKLIST PRIMARY KEY (PK_CHECKLIST)
);
CREATE TABLE MAN_CHECKLIST_ITENS 
(
  CHECK_COD               VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  ITEM_CODIG              VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(   100)  COLLATE ISO8859_1,
  ORDEM                   INTEGER,
 CONSTRAINT PK_MAN_CHECKLIST_ITENS_1 PRIMARY KEY (CHECK_COD, ITEM_CODIG)
);
CREATE TABLE MAN_CHECKLIST_ITENS_CAD 
(
  ITEM_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(   120)  COLLATE ISO8859_1,
  ORDEM                   INTEGER,
  TAG_CODIGO              VARCHAR(    25)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CHECKLIST_LEGENDAS 
(
  LEG_CODIGO              VARCHAR(     2) NOT NULL COLLATE ISO8859_1,
  LEG_DESCRI              VARCHAR(    15)  COLLATE ISO8859_1,
  LEG_GERAOS                 CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_CHECKLIST_LEGENDAS_1 PRIMARY KEY (LEG_CODIGO)
);
CREATE TABLE MAN_CHECKLIST_PROGRAMACAO 
(
  CHECK_COD               VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  PRCKLI_PER                FLOAT,
  PRCKLI_TOL                FLOAT,
  PRCKLI_DTB                 DATE,
  PRCKLI_EXE                 DATE,
  DISP_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  PRCKLI_MAX                FLOAT,
  PRCKLI_TLR                FLOAT,
  PRCKLI_TIP              VARCHAR(    10)  COLLATE ISO8859_1,
  PRCKLI_ACU                FLOAT,
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  PRCKLI_PAR                 CHAR(     1)  COLLATE ISO8859_1,
  PRCKLI_SIT                 CHAR(     1)  COLLATE ISO8859_1,
  PRCKLI_MAR              T_YESNO ,
  PRCKLI_O_D              VARCHAR(    50)  COLLATE ISO8859_1,
  EQUI_COD                VARCHAR(    30)  COLLATE ISO8859_1,
  IMAGEM                  VARCHAR(   254)  COLLATE ISO8859_1,
  CHECK_ID                INTEGER,
  PRI_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  FUNCI_CODI              VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CHECKLIST_RETORNO 
(
  CHECK_COD               VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  TAG_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  RETC_DATA                  DATE,
  LEG_CODIGO                 CHAR(     2)  COLLATE ISO8859_1,
  RETC_ACAO1              VARCHAR(    70)  COLLATE ISO8859_1,
  RETC_ACAO2              VARCHAR(    70)  COLLATE ISO8859_1,
  FUNCI_CODI              VARCHAR(    10)  COLLATE ISO8859_1,
  RETC_GEROS                 CHAR(     1)  COLLATE ISO8859_1,
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  TIP_OS_COD              VARCHAR(    10)  COLLATE ISO8859_1,
  RETC_POSIC              VARCHAR(    10)  COLLATE ISO8859_1,
  RETC_LINHA              VARCHAR(    10)  COLLATE ISO8859_1,
  RETC_COLUN              VARCHAR(    10)  COLLATE ISO8859_1,
  PRCKLI_EXE                 DATE,
  CHECK_ID                INTEGER,
  LEITURA                   FLOAT
);
CREATE TABLE MAN_CHECKLIST_TAG 
(
  CHECK_COD               VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  TAG_CODIGO              VARCHAR(    25) NOT NULL COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(   100)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_CHECKLIST_TAG_1 PRIMARY KEY (CHECK_COD, TAG_CODIGO)
);
CREATE TABLE MAN_CHECKLIST_TIPO 
(
  CHECK_COD                VARCHAR(    15)  COLLATE ISO8859_1,
  CODIGO_TIPO              VARCHAR(    30)  COLLATE ISO8859_1,
  DESCRICAO                VARCHAR(    20)  COLLATE ISO8859_1,
  TIPO_CHECK               VARCHAR(    20)  COLLATE ISO8859_1,
  ORDEM                    INTEGER
);
CREATE TABLE MAN_CHECK_VERIFICA 
(
  ID                      INTEGER         NOT NULL,
  CHECK_COD               VARCHAR(    15)  COLLATE ISO8859_1,
  TAG_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  ITEM_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  LEG_CODIGO                 CHAR(     2)  COLLATE ISO8859_1,
  LINHA                   VARCHAR(    10)  COLLATE ISO8859_1,
  COLUNA                  VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_CHECK_VERIFICA_1 PRIMARY KEY (ID)
);
CREATE TABLE MAN_CLASSES_SERVICO 
(
  PK_CLASSES             SMALLINT         NOT NULL,
  DESCRICAO               VARCHAR(    50) NOT NULL COLLATE ISO8859_1
);
CREATE TABLE MAN_CRITICIDADE 
(
  TAG_CODIGO              VARCHAR(    25)  COLLATE ISO8859_1,
  EQUI_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  SA                         CHAR(     1)  COLLATE ISO8859_1,
  QP                         CHAR(     1)  COLLATE ISO8859_1,
  "TO"                       CHAR(     1)  COLLATE ISO8859_1,
  OP                         CHAR(     1)  COLLATE ISO8859_1,
  FQ                         CHAR(     1)  COLLATE ISO8859_1,
  MT                         CHAR(     1)  COLLATE ISO8859_1,
  VL_CRITIC              SMALLINT,
  MAQ_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CTRLPROC_CUSTO 
(
  PROC_CUSTO             SMALLINT,
  HORA                    VARCHAR(     8)  COLLATE ISO8859_1,
  DATA                       DATE,
  MES                    SMALLINT,
  ANO                    SMALLINT,
  USUARIO                 VARCHAR(    15)  COLLATE ISO8859_1
);
CREATE TABLE MAN_CUSTOSGLOBAIS 
(
  SAL_MINIMO                FLOAT,
  ENCARGO_HE                FLOAT,
  ENCARGO_HN                FLOAT,
  VL_TOT_ADM                FLOAT,
  VL_TOT_OPE                FLOAT,
  H_DISP_MES                FLOAT,
  ULT_LOTE_C                FLOAT
);
CREATE TABLE MAN_DEFEITOS 
(
  PK_DEFEITOS                       INTEGER         NOT NULL,
  FK_AREAEXEC                       INTEGER         DEFAULT 1 NOT NULL,
  FK_UNID_REINCIDENCIA             SMALLINT         DEFAULT 1,
  REINCIDENCIA                      INTEGER         DEFAULT 1 NOT NULL,
  FK_FUNC_RESPONSAVEL               INTEGER         DEFAULT 1 NOT NULL,
  TEMPOPADRAO                          TIME,
  DESCRICAO                         VARCHAR(   100) NOT NULL COLLATE ISO8859_1
);
CREATE TABLE MAN_DEPTOS_DADOS_ADICIONAIS 
(
  DEP_CODIGO              VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  ITEM                    VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  CONTEUDO                VARCHAR(   200)  COLLATE ISO8859_1
);
CREATE TABLE MAN_DESENHOS 
(
  DES_CODIGO              VARCHAR(    20) NOT NULL COLLATE ISO8859_1,
  DES_DESCRI              VARCHAR(    70)  COLLATE ISO8859_1,
  DES_FORMAT              VARCHAR(    20)  COLLATE ISO8859_1,
  DES_ARQUIV              VARCHAR(    20)  COLLATE ISO8859_1,
  DES_CATALO              VARCHAR(    20)  COLLATE ISO8859_1,
  DES_FORNEC              VARCHAR(    20)  COLLATE ISO8859_1,
  DES_RESPON              VARCHAR(    20)  COLLATE ISO8859_1,
  DES_ALMOXA              VARCHAR(    20)  COLLATE ISO8859_1,
  DES_PARTE               VARCHAR(    20)  COLLATE ISO8859_1,
  DES_FUNCAO              VARCHAR(    20)  COLLATE ISO8859_1,
  DES_IMAGEM              VARCHAR(   254)  COLLATE ISO8859_1,
  DES_ANEXO               VARCHAR(   254)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_DESENHOS_1 PRIMARY KEY (DES_CODIGO)
);
CREATE TABLE MAN_DETALHAMENTO 
(
  OS_CODIGO                  VARCHAR(    15)  COLLATE ISO8859_1,
  DET_INDICE                   FLOAT,
  DET_ORDEM                  VARCHAR(    20)  COLLATE ISO8859_1,
  DET_DESCRI                 VARCHAR(   450)  COLLATE ISO8859_1,
  DET_TEMPO                  VARCHAR(    10)  COLLATE ISO8859_1,
  TEMPO_REAL                 VARCHAR(    10)  COLLATE ISO8859_1,
  DET_DEP_ORDEM              VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  FK_AREAEXEC               SMALLINT         DEFAULT 1 NOT NULL,
  FK_SERVICOS                INTEGER         DEFAULT 1 NOT NULL,
  FK_OS                      INTEGER
);
CREATE TABLE MAN_DISPAROS 
(
  DESCRICAO                VARCHAR(    50)  COLLATE ISO8859_1,
  PK_DISPAROS              INTEGER         NOT NULL,
  FK_UNIDADES              INTEGER         DEFAULT 6 NOT NULL
);
CREATE TABLE MAN_EQUIPAM_HISTORICO 
(
  EQUI_CODIG              VARCHAR(    30)  COLLATE ISO8859_1,
  EQUI_HISTO                 BLOB SUB_TYPE 0 SEGMENT SIZE 80
);
CREATE TABLE MAN_EQUIPAM_PADROES_EXATIDAO 
(
  EQUI_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  INDICE                  VARCHAR(    20)  COLLATE ISO8859_1,
  PADRAO_DES              VARCHAR(   254)  COLLATE ISO8859_1,
  PADRAO_EXA              NUMERIC( 15, 8),
  UNIDADE                 VARCHAR(    20)  COLLATE ISO8859_1
);
CREATE TABLE MAN_EQUIPAM_STUACAO 
(
  SIT_CODIGO                FLOAT         NOT NULL,
  SIT_DESCRI              VARCHAR(    40)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_EQUIPAM_STUACAO_1 PRIMARY KEY (SIT_CODIGO)
);
CREATE TABLE MAN_EQUIPES 
(
  EQUIPE_COD              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  EQUIPE_DES              VARCHAR(   120)  COLLATE ISO8859_1
);
CREATE TABLE MAN_EQUIPES_FUNC 
(
  FK_EQUIPES                  SMALLINT         DEFAULT 1 NOT NULL,
  PK_EQUIPES_FUNC             SMALLINT         NOT NULL,
  FK_FUNCIONARIOS              INTEGER         NOT NULL,
 PRIMARY KEY (PK_EQUIPES_FUNC)
);
CREATE TABLE MAN_EQUIPES_N 
(
  FK_EMPRESAS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                 SMALLINT         DEFAULT 1 NOT NULL,
  PK_EQUIPES                 SMALLINT         NOT NULL,
  NOMEEQUIPE                  VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  FK_CENTROCUSTO              VARCHAR(    10)  COLLATE ISO8859_1
);
CREATE TABLE MAN_EQUIP_CLASSE 
(
  CLS_CODIGO                FLOAT         NOT NULL,
  CLS_DESCRI              VARCHAR(    40)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_EQUIP_CLASSE_1 PRIMARY KEY (CLS_CODIGO)
);
CREATE TABLE MAN_EQUIP_DESENHOS 
(
  EQUI_CODIG              VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  DES_CODIGO              VARCHAR(    20) NOT NULL COLLATE ISO8859_1
);
CREATE TABLE MAN_EQUI_FORNECEDOR 
(
  EQUI_CODIG              VARCHAR(    30)  COLLATE ISO8859_1,
  FOR_CODIGO              VARCHAR(    20)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FAMILIAS 
(
  GRP_CODIGO               VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  GRP_DESCRI               VARCHAR(   150)  COLLATE ISO8859_1,
  INT_CODIGO               VARCHAR(    10)  COLLATE ISO8859_1,
  NORMA_CODI               VARCHAR(    10)  COLLATE ISO8859_1,
  TIPO                     VARCHAR(    30)  COLLATE ISO8859_1,
  GRP_IMAGEM               VARCHAR(   254)  COLLATE ISO8859_1,
  GRP_ANEXO                VARCHAR(   254)  COLLATE ISO8859_1,
  FT_MAQ                   VARCHAR(    20)  COLLATE ISO8859_1,
  FT_EQU                   VARCHAR(    20)  COLLATE ISO8859_1,
  FT_MAL                   VARCHAR(    20)  COLLATE ISO8859_1,
  FT_TAG                   VARCHAR(    20)  COLLATE ISO8859_1,
  FT_FOR                   VARCHAR(    20)  COLLATE ISO8859_1,
  PESO                    SMALLINT,
  GRP_TIPO                 INTEGER,
  SIG_CODIGO               VARCHAR(    10)  COLLATE ISO8859_1,
  PRI_CODIGO               VARCHAR(    10)  COLLATE ISO8859_1,
  CRITICIDADE              INTEGER,
  POSSUI_EQUI                 CHAR(     1)  COLLATE ISO8859_1,
  PK_FAMILIAS              INTEGER
);
CREATE TABLE MAN_FAMILIAS_CARACT 
(
  FK_FAMILIAS                SMALLINT,
  FK_INTERVENCAO              INTEGER,
  FK_SINTOMAS                SMALLINT,
  CONTROLE                   SMALLINT,
  ORDEM                      SMALLINT,
  DESCRICAO                   VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FAMILIAS_NEW 
(
  PK_FAMILIAS                      INTEGER         NOT NULL,
  FAM_DESCRICAO                    VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  FK_INTERVENCAO                   INTEGER         DEFAULT 1,
  FK_NORMAS                        INTEGER         DEFAULT 1,
  FK_TIPOFAMILIAS                 SMALLINT         DEFAULT 1,
  FK_FAMILIAS_ANEXO                INTEGER         DEFAULT 1,
  FK_FAMILIAS_IMAGENS              INTEGER         DEFAULT 1,
  PESOFAMILIAS                    SMALLINT         DEFAULT 1,
  FK_PRIORIDADE                   SMALLINT         DEFAULT 1,
  FK_CRITICIDADE                  SMALLINT         DEFAULT 1,
  POSSUIEQUIPAMENTOS          FLAG_SIM_NAO ,
  USER_INC                   USUARIOPADRAO DEFAULT USER,
  USER_ALT                   USUARIOPADRAO DEFAULT USER,
  DATA_INC                       TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                       TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 PRIMARY KEY (PK_FAMILIAS)
);
CREATE TABLE MAN_FAMILIAS_SINTOMAS 
(
  GRP_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  SINT_CODIG              VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FAMILIA_IMAGEM 
(
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  GRP_ANEXO               VARCHAR(   254)  COLLATE ISO8859_1,
  GRP_IMAGEM              VARCHAR(   254)  COLLATE ISO8859_1,
  IMAG_DESCR              VARCHAR(   250)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FAMILIA_NORMAS 
(
  FK_FAMILIAS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_NORMAS                 SMALLINT         DEFAULT 1 NOT NULL,
  KF_FAM_NORMAS              INTEGER         NOT NULL,
 PRIMARY KEY (KF_FAM_NORMAS)
);
CREATE TABLE MAN_FAMLIAS_PECAS 
(
  GRP_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  PC_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1,
  QTDE_NECES                FLOAT,
  UNIDADE                 VARCHAR(    15)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FAMLIAS_SERVICOS 
(
  GRP_CODIGO              VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  SERV_CODIG              VARCHAR(    30)  COLLATE ISO8859_1,
  TOT_HORAS               VARCHAR(     8)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FERRAMCOMPL 
(
  EMPRESA                      SMALLINT         DEFAULT 1 NOT NULL,
  FILIAL                       SMALLINT         DEFAULT 1 NOT NULL,
  DESCRICAO                     VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  RESUMIDA                      VARCHAR(    20)  COLLATE ISO8859_1,
  PORTE                         VARCHAR(    20) DEFAULT 'PORTATIL' COLLATE ISO8859_1,
  TIPOFERRAMENTA                VARCHAR(    10) DEFAULT 'MANUAL' COLLATE ISO8859_1,
  MEDIDA                        VARCHAR(    20)  COLLATE ISO8859_1,
  ESTMINIMO                    SMALLINT,
  ESTMAXIMO                    SMALLINT,
  ESTATUAL                     SMALLINT,
  ULTENTRADA                       DATE,
  ULTSAIDA                         DATE,
  PROPRIEDADE                   VARCHAR(    10) DEFAULT 'PROPRIO' COLLATE ISO8859_1,
  PROPRIETARIO                  VARCHAR(    50)  COLLATE ISO8859_1,
  PATRIMONIO                    VARCHAR(    20)  COLLATE ISO8859_1,
  TEMGARANTIA                   VARCHAR(    10) DEFAULT 'NAO' COLLATE ISO8859_1,
  TEMPOGARANTIA                SMALLINT,
  MARCA                         VARCHAR(    20)  COLLATE ISO8859_1,
  MODELO                        VARCHAR(    20)  COLLATE ISO8859_1,
  NUMEROSERIE                   VARCHAR(    20)  COLLATE ISO8859_1,
  DATAAQUISICAO                    DATE,
  CODIFICACAO                   VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  SEQUENCIAL                    INTEGER         NOT NULL,
  CODFORNECEDOR                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  DOCAQUISICAO                  VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  TIPOTEMPOGAR                  VARCHAR(    10) CHARACTER SET NONE DEFAULT 'MESES' COLLATE NONE,
  CUSTOAQUISICAO       DOUBLE PRECISION,
  VOLTAGEM                      VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  AMPERAGEM                     VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  CODAREA                       VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSETOR                      VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  USER_CAD                      VARCHAR(    10) CHARACTER SET NONE DEFAULT user COLLATE NONE,
  USER_ALT                      VARCHAR(    10) CHARACTER SET NONE DEFAULT user COLLATE NONE,
  DATA_CAD                    TIMESTAMP         DEFAULT current_timestamp,
  DATA_ALT                    TIMESTAMP         DEFAULT current_timestamp,
  LANCARPATRIMONIO                 CHAR(     3) CHARACTER SET NONE DEFAULT 'SIM' COLLATE NONE,
  CODDEPTO                      VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSECAO                      VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE
);
update rdb$relation_fields set rdb$description = 'PORTE DA FERRAMENTA
MANUAL
MOVEL
BANCADA
OUTROS---' where rdb$relation_name = 'MAN_FERRAMCOMPL' and rdb$field_name = 'PORTE';
update rdb$relation_fields set rdb$description = 'MANUAL
ELETRICA
HIDRAULICA
PNEUMATICA
OUTROS--' where rdb$relation_name = 'MAN_FERRAMCOMPL' and rdb$field_name = 'TIPOFERRAMENTA';
update rdb$relation_fields set rdb$description = 'PROPRIEDADE DA FERRAMENTA
EMPRESA
TERCEIROS
OUTROS---' where rdb$relation_name = 'MAN_FERRAMCOMPL' and rdb$field_name = 'PROPRIEDADE';
update rdb$relation_fields set rdb$description = 'TEM GARANTIA
SIM
NAO
NAO APLICAV---' where rdb$relation_name = 'MAN_FERRAMCOMPL' and rdb$field_name = 'TEMGARANTIA';
update rdb$relation_fields set rdb$description = 'CODIFICACAO 
FEM = FERRAMENTA MANUAL 
FEB  ELETRICA BANCADA
FEP ELETRICA PORTATIL
FHB HIDRAULICA BANCADA
FPB PNEUMATICA BANCADA
FXX999/999' where rdb$relation_name = 'MAN_FERRAMCOMPL' and rdb$field_name = 'CODIFICACAO';
update rdb$relation_fields set rdb$description = 'MESES
ANOS
SEMANAS
DIAS
HORAS
OUTROS-----' where rdb$relation_name = 'MAN_FERRAMCOMPL' and rdb$field_name = 'TIPOTEMPOGAR';
CREATE TABLE MAN_FERRAMENTAS 
(
  CODIGO                  VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(   200)  COLLATE ISO8859_1,
  QUANTIDADE                FLOAT,
  CUS_UNIT                  FLOAT,
  AREA_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  SET_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FERRAMEN_FUNC 
(
  COD_FUNC                VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  COD_FERRAM              VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  QUANTIDADE                FLOAT,
  CUS_TOTAL                 FLOAT,
 CONSTRAINT PK_MAN_FERRAMEN_FUNC_1 PRIMARY KEY (COD_FUNC, COD_FERRAM)
);
CREATE TABLE MAN_FICHATECNICA 
(
  FK_FAMILIAS                 SMALLINT         NOT NULL,
  PK_FICHATECNICA              INTEGER         NOT NULL,
  DESCRICAO                    VARCHAR(    50)  COLLATE ISO8859_1,
  CONTEUDO                     VARCHAR(    70)  COLLATE ISO8859_1,
  FK_IMAGEM                    INTEGER,
  FK_ANEXO                     INTEGER,
 CONSTRAINT MAN_FICHATECNICA_INDEX01 PRIMARY KEY (FK_FAMILIAS, PK_FICHATECNICA)
);
CREATE TABLE MAN_FICHATEC_CAMPOS 
(
  FK_FAMILIAS             SMALLINT,
  FK_TAG                  SMALLINT,
  INDICE                   INTEGER,
  NOME                     VARCHAR(    30)  COLLATE ISO8859_1,
  TIPO                     VARCHAR(    30)  COLLATE ISO8859_1,
  TAMANHO                 SMALLINT,
  WIDTH                   SMALLINT,
  DADOS                    VARCHAR(    80)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FICHATEC_CONJ 
(
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  NOME                    VARCHAR(    30)  COLLATE ISO8859_1,
  INDICE                    FLOAT,
  TIPO                    VARCHAR(    30)  COLLATE ISO8859_1,
  TAMANHO                   FLOAT,
  WIDTH                     FLOAT,
  DADOS                   VARCHAR(    80)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FICHATEC_EQUIPAM 
(
  EQUI_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_ORDEM              VARCHAR(     5)  COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(    50)  COLLATE ISO8859_1,
  CONTEUDO                VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FICHATEC_FORNEC 
(
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  FOR_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_ORDEM             SMALLINT,
  DESCRICAO               VARCHAR(    50)  COLLATE ISO8859_1,
  CONTEUDO                VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FICHATEC_FUNCAO 
(
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  FUNCAO_COD              VARCHAR(    10)  COLLATE ISO8859_1,
  ITEM_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_ORDEM             SMALLINT,
  DESCRICAO               VARCHAR(    50)  COLLATE ISO8859_1,
  CONTEUDO                VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FICHATEC_FUNCION 
(
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  FUNCI_CODI              VARCHAR(    10)  COLLATE ISO8859_1,
  ITEM_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_ORDEM             SMALLINT,
  DESCRICAO               VARCHAR(    50)  COLLATE ISO8859_1,
  CONTEUDO                VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FICHATEC_LABORATORIO 
(
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  NOME                    VARCHAR(    30)  COLLATE ISO8859_1,
  INDICE                    FLOAT,
  TIPO                    VARCHAR(    30)  COLLATE ISO8859_1,
  TAMANHO                   FLOAT,
  WIDTH                     FLOAT,
  DADOS                   VARCHAR(    80)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FICHATEC_MAQUINAS 
(
  GRP_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  MAQ_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  ITEM_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_ORDEM              VARCHAR(     5)  COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(    50)  COLLATE ISO8859_1,
  CONTEUDO                VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FICHATEC_PECAS 
(
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  PC_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1,
  ITEM_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_ORDEM              INTEGER,
  DESCRICAO               VARCHAR(    50)  COLLATE ISO8859_1,
  CONTEUDO                VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FICHATEC_SS_ITENS 
(
  CODIGO                       INTEGER,
  DATA                            DATE,
  UNIDADE                        FLOAT,
  ANTERIOR                       FLOAT,
  MEDIDO                         FLOAT,
  ACUMULADO                      FLOAT,
  TOLERANCIA                     FLOAT,
  DIFERENCA                      FLOAT,
  CAMPO_FICHA                  VARCHAR(    50)  COLLATE ISO8859_1,
  MAQ_CODIGO                   VARCHAR(    30)  COLLATE ISO8859_1,
  TIPO_LANCAMENTO              VARCHAR(    20)  COLLATE ISO8859_1,
  HORA                            TIME,
  OPERADOR                     VARCHAR(    50)  COLLATE ISO8859_1,
  DISPARO                      VARCHAR(    10)  COLLATE ISO8859_1,
  ROTA                         VARCHAR(    10)  COLLATE ISO8859_1,
  VALOR_DISPARO                  FLOAT,
  IDEAL                          FLOAT,
  IDEAL_CONSUMO                  FLOAT
);
CREATE TABLE MAN_FICHATEC_TAG 
(
  GRP_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  TAG_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  ITEM_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_ORDEM              VARCHAR(     5)  COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(    50)  COLLATE ISO8859_1,
  CONTEUDO                VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FICHA_CONTROLE_CALIBRACAO 
(
  EQUI_CODIG                       VARCHAR(    30)  COLLATE ISO8859_1,
  MARCA                            VARCHAR(    30)  COLLATE ISO8859_1,
  SERIE                            VARCHAR(    10)  COLLATE ISO8859_1,
  CAPACIDADE                       NUMERIC( 15, 6),
  MODELO                           VARCHAR(    50)  COLLATE ISO8859_1,
  RESOLUCAO                        NUMERIC( 15, 6),
  CAPACIDADE_MIN                   NUMERIC( 15, 6),
  CRITERIO_ACEITACAO               NUMERIC( 15, 6),
  TAG_CODIGO                       VARCHAR(    30)  COLLATE ISO8859_1,
  UNID_CAPACIDADE_MAX              VARCHAR(    10)  COLLATE ISO8859_1,
  UNID_RESOLUCAO                   VARCHAR(    10)  COLLATE ISO8859_1,
  UNID_CAPACIDADE_MIN              VARCHAR(    10)  COLLATE ISO8859_1,
  UNID_CRITERIO                    VARCHAR(    10)  COLLATE ISO8859_1
);
CREATE TABLE MAN_FUNCOES 
(
  DESCRICAO                   VARCHAR(    50)  COLLATE ISO8859_1,
  AREA_CODIG                  VARCHAR(    10)  COLLATE ISO8859_1,
  CUSTOMEDIOHORA                FLOAT,
  FUNCAO_COD                  VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  FUNCAO_IMAG                 VARCHAR(   254)  COLLATE ISO8859_1,
  FUNCAO_ANEX                 VARCHAR(   254)  COLLATE ISO8859_1,
  GRP_CODIGO                  VARCHAR(    15)  COLLATE ISO8859_1,
  FK_AREAEXEC                 INTEGER,
  PK_FUNCAO                   INTEGER         NOT NULL,
  FK_FAMILIAS                 INTEGER,
  FK_IMAGEM                   INTEGER,
  FK_ANEXO                    INTEGER
);
CREATE TABLE MAN_GARANTIAS 
(
  PC_CODIGO                    VARCHAR(    16)  COLLATE ISO8859_1,
  EQUI_CODIG                   VARCHAR(    15)  COLLATE ISO8859_1,
  SINT_CODIG                   VARCHAR(    10)  COLLATE ISO8859_1,
  GARAN_PERI                     FLOAT,
  GARAN_LIMI                      DATE,
  FOR_CODIGO                   VARCHAR(    10)  COLLATE ISO8859_1,
  OS_CODIGO                    VARCHAR(    15)  COLLATE ISO8859_1,
  MOTIVO_GAR                   VARCHAR(   250)  COLLATE ISO8859_1,
  TAG_CODIGO                   VARCHAR(    25)  COLLATE ISO8859_1,
  GARAN_RESP                   VARCHAR(    60)  COLLATE ISO8859_1,
  GARAN_ORIG                      CHAR(     1)  COLLATE ISO8859_1,
  FK_PECAS                     INTEGER,
  FK_EQUIPAMENTOS              INTEGER,
  FK_SINTOMAS                  INTEGER,
  FK_FORNECEDOR                INTEGER,
  FK_OS                        INTEGER,
  FK_TAG                       INTEGER
);
CREATE TABLE MAN_GRAFICOS_META 
(
  GRAFICO                 VARCHAR(    10) CHARACTER SET NONE NOT NULL COLLATE NONE,
  META                      FLOAT,
  DESCRICAO               VARCHAR(    57) CHARACTER SET NONE  COLLATE NONE,
  UNID_SAIDA              VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_MAN_GRAFICOS_META_1 PRIMARY KEY (GRAFICO)
);
CREATE TABLE MAN_HIERARQUIA 
(
  TAG_CODIGO              VARCHAR(    50)  COLLATE ISO8859_1,
  TAG_PAI                 VARCHAR(    50)  COLLATE ISO8859_1,
  MAQ_CODIGO              VARCHAR(    50)  COLLATE ISO8859_1
);
CREATE TABLE MAN_HISTORICOS 
(
  PK_HISTORICOS              INTEGER         NOT NULL,
  HISTORICO                     BLOB SUB_TYPE 0 SEGMENT SIZE 20,
  USER_INC             USUARIOPADRAO DEFAULT USER,
  USER_ALT             USUARIOPADRAO DEFAULT USER,
  DATA_INC                 TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                 TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 PRIMARY KEY (PK_HISTORICOS)
);
CREATE TABLE MAN_HORASHOMENS 
(
  FUNCI_CODI              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  FUNCI_NOME              VARCHAR(    50)  COLLATE ISO8859_1,
  FUNCI_TP                VARCHAR(    25)  COLLATE ISO8859_1,
  SAL_BRUTO                 FLOAT,
  IMP_REL_GL              INTEGER,
  IMP_ADM                 INTEGER,
  VL_ADM_APL              NUMERIC( 15, 2),
  HH_VL_NORM              NUMERIC( 15, 2),
  HH_PO_HE1               INTEGER,
  HH_PO_HE2               INTEGER,
  HH_PO_HE3               INTEGER,
  HH_PO_DF                INTEGER,
  HH_PO_ANOT              INTEGER,
  HH_HI_ADNO              VARCHAR(     5)  COLLATE ISO8859_1,
  HH_HF_ADNO              VARCHAR(     5)  COLLATE ISO8859_1,
  PO_RED_NOT              INTEGER,
  RED_HNOT                INTEGER,
  HH_PO_PERI              INTEGER,
  HH_PO_INSA              INTEGER
);
CREATE TABLE MAN_HORASHOMENS_ACUMU_CC 
(
  CC_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  MES_ANO                 VARCHAR(     7)  COLLATE ISO8859_1,
  VL_REAL                   FLOAT,
  HRS_TRAB                VARCHAR(    10)  COLLATE ISO8859_1,
  IMP_PERC                  FLOAT,
  VL_CONTABI                FLOAT,
  OS_CODIGO               VARCHAR(    20)  COLLATE ISO8859_1,
  CODIGO                  INTEGER         NOT NULL,
 CONSTRAINT PK_MAN_HORASHOMENS_ACUMU_CC_1 PRIMARY KEY (CODIGO)
);
CREATE TABLE MAN_HORASTRABALHADAS 
(
  OS_CODIGO                  VARCHAR(    15)  COLLATE ISO8859_1,
  HT_DATA                       DATE,
  FUNCI_CODI                 VARCHAR(    10)  COLLATE ISO8859_1,
  HT_HORANOI                   FLOAT,
  HT_HORANOF                   FLOAT,
  FUNCAO_COD                 VARCHAR(    10)  COLLATE ISO8859_1,
  PEND_CODIG                 VARCHAR(    10)  COLLATE ISO8859_1,
  PEND_DESCR                 VARCHAR(    50)  COLLATE ISO8859_1,
  PEND_SOLUC                 VARCHAR(    50)  COLLATE ISO8859_1,
  HT_DESCRIC                 VARCHAR(   160)  COLLATE ISO8859_1,
  HT_PENDENC                 T_YESNO ,
  FUNCI_NOME                 VARCHAR(    50)  COLLATE ISO8859_1,
  VIRTUA_HNI                 VARCHAR(     5)  COLLATE ISO8859_1,
  VIRTUA_HNF                 VARCHAR(     5)  COLLATE ISO8859_1,
  PLANT_DESC                 VARCHAR(    30)  COLLATE ISO8859_1,
  HH_VL_NORM                   FLOAT,
  HH_VL_DF                     FLOAT,
  HH_VL_HE1                    FLOAT,
  HH_VL_HE2                    FLOAT,
  HH_VL_HE3                    FLOAT,
  HH_VL_ADNO                   FLOAT,
  HH_VL_INSA                   FLOAT,
  HH_VL_PERI                   FLOAT,
  HH_VL_REPO                   FLOAT,
  HT_VL_TOTA                   FLOAT,
  VL_TOT_EXT                   FLOAT,
  HT_NORMAL                  VARCHAR(     6)  COLLATE ISO8859_1,
  HT_NORM_M                    FLOAT,
  HT_DF                      VARCHAR(     6)  COLLATE ISO8859_1,
  HT_AD_NOTU                 VARCHAR(     6)  COLLATE ISO8859_1,
  HT_TOTALEX                 VARCHAR(     5)  COLLATE ISO8859_1,
  HT_TOTALNO                 VARCHAR(     5)  COLLATE ISO8859_1,
  HT_TOT_EX2                   FLOAT,
  HT_TOT_NO2                   FLOAT,
  FUNCI_PEND                    CHAR(     1)  COLLATE ISO8859_1,
  COD_HORASTRAB              VARCHAR(    20)  COLLATE ISO8859_1,
  AREA_CODIG                 VARCHAR(    10)  COLLATE ISO8859_1,
  CAU_CODIGO                 VARCHAR(    10)  COLLATE ISO8859_1,
  DEF_CODIGO                 VARCHAR(    10)  COLLATE ISO8859_1,
  SINT_CODIG                 VARCHAR(    10)  COLLATE ISO8859_1,
  SOL_CODIGO                 VARCHAR(    10)  COLLATE ISO8859_1,
  HT_TIP_LAN                    CHAR(     1)  COLLATE ISO8859_1,
  HT_CODIGO                  INTEGER,
  HT_VL_FIXO                   FLOAT
);
CREATE TABLE MAN_HORASTRABDIA 
(
  DIA                    SMALLINT,
  MES                    SMALLINT,
  ANO                    SMALLINT,
  HT_DATA                    DATE,
  FUNCI_CODI              VARCHAR(    10)  COLLATE ISO8859_1,
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  HT_TOTALEX                FLOAT,
  HT_TOTALNO                FLOAT,
  HT_HTEX                   FLOAT,
  HT_HTNO                   FLOAT
);
CREATE TABLE MAN_INDICADORES 
(
  INDICADOR               VARCHAR(    10)  COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(    57)  COLLATE ISO8859_1,
  TIPO_PARAM              INTEGER,
  UNID_SAIDA              VARCHAR(    25)  COLLATE ISO8859_1,
  CALCULA_IN              VARCHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE MAN_INSPECAO 
(
  COD_INSPECAO                           INTEGER         NOT NULL,
  CODIGO_INSPECAO                        VARCHAR(    20)  COLLATE ISO8859_1,
  DESCRICAO                              VARCHAR(   150)  COLLATE ISO8859_1,
  GRP_CODIGO                             VARCHAR(    15)  COLLATE ISO8859_1,
  VINCULAR_FAMILIA_TAG_EQUI                 CHAR(     1)  COLLATE ISO8859_1,
  TIPO                                      CHAR(     1)  COLLATE ISO8859_1,
  EXIBIR_MALHA                              CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  EXIBIR_SISTEMA                            CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_INSPECAO_1 PRIMARY KEY (COD_INSPECAO)
);
CREATE TABLE MAN_INSPECAO_ITENS 
(
  COD_INSPECAO_ITENS              INTEGER         NOT NULL,
  COD_INSPECAO                    INTEGER,
  GRP_CODIGO                      VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_CODIG                      VARCHAR(    15)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_INSPECAO_ITENS_1 PRIMARY KEY (COD_INSPECAO_ITENS)
);
CREATE TABLE MAN_INSPECAO_N 
(
  PK_INSPECAO                            INTEGER         NOT NULL,
  DESCRICAO                              VARCHAR(   150)  COLLATE ISO8859_1,
  FK_FAMILIA                            SMALLINT,
  VINCULAR_FAMILIA_TAG_EQUI                 CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  TIPO                                      CHAR(     1) DEFAULT 'T' COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_INSPECAO_N_1 PRIMARY KEY (PK_INSPECAO)
);
CREATE TABLE MAN_INSPECAO_RETORNO 
(
  COD_RET_INSPECAO               INTEGER         NOT NULL,
  COD_INSPECAO                   INTEGER,
  COD_PROG_INSPECAO              INTEGER,
  TAG_CODIGO                     VARCHAR(    30)  COLLATE ISO8859_1,
  EQUI_CODIG                     VARCHAR(    30)  COLLATE ISO8859_1,
  FUNCI_CODI                     VARCHAR(    25)  COLLATE ISO8859_1,
  OBSERVACAO                        BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  RET_DATA                          DATE,
  LEITURA                        NUMERIC( 10, 8),
 CONSTRAINT PK_MAN_INSPECAO_RETORNO_1 PRIMARY KEY (COD_RET_INSPECAO)
);
CREATE TABLE MAN_INSPECAO_TAG_EQUIPAM 
(
  COD_INSPECAO_TAG_EQUI              INTEGER         NOT NULL,
  COD_INSPECAO                       INTEGER,
  TAG_CODIGO                         VARCHAR(    25)  COLLATE ISO8859_1,
  EQUI_CODIG                         VARCHAR(    25)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_INSPECAO_TAG_EQUIPAM_1 PRIMARY KEY (COD_INSPECAO_TAG_EQUI)
);
CREATE TABLE MAN_INTERVENCAO 
(
  INT_CODIGO              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  INT_DESCRI              VARCHAR(    50)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_INTERVENCAO_1 PRIMARY KEY (INT_CODIGO)
);
CREATE TABLE MAN_INTERVENCAO_N 
(
  PK_INTERVENCAO             SMALLINT         NOT NULL,
  FK_SINTOMAS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEFEITOS                SMALLINT,
  FK_CAUSAS                  SMALLINT,
  FK_SOLUCAO                 SMALLINT,
  DESCRICAO                   VARCHAR(   501)  COLLATE ISO8859_1,
 PRIMARY KEY (PK_INTERVENCAO)
);
CREATE TABLE MAN_INTERV_CARACT 
(
  INT_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  SINT_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  CONTROLE               SMALLINT,
  ORDEM                  SMALLINT,
  DESCRICAO               VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE MAN_LUBRIFICACAO 
(
  COD_PROGRA                  FLOAT         NOT NULL,
  TAG_CODIGO                VARCHAR(    25)  COLLATE ISO8859_1,
  PC_CODIGO                 VARCHAR(    16)  COLLATE ISO8859_1,
  SERV_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  PROG_PER_D                  FLOAT,
  PROG_PER_S                  FLOAT,
  PROG_ETAPA                  FLOAT,
  PROG_DESCR                VARCHAR(   255)  COLLATE ISO8859_1,
  PNTS_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  PROG_QTS                    FLOAT,
  LUB_CODIGO                VARCHAR(    10)  COLLATE ISO8859_1,
  LUB_NOME                  VARCHAR(    30)  COLLATE ISO8859_1,
  APLC_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  PROG_OBS                  VARCHAR(    40)  COLLATE ISO8859_1,
  PROG_ULTIM                   DATE,
  PROG_PROXI                   DATE,
  PROG_DIA                  VARCHAR(    20)  COLLATE ISO8859_1,
  PROG_TEMPO                VARCHAR(     5)  COLLATE ISO8859_1,
  PROG_TOLER                  FLOAT,
  PROG_CONDI                VARCHAR(   100)  COLLATE ISO8859_1,
  PROG_MU                      DATE,
  PROG_MP                      DATE,
  EQUI_CODIG                VARCHAR(    15)  COLLATE ISO8859_1,
  MAQ_CODIGO                VARCHAR(    15)  COLLATE ISO8859_1,
  TIPO                      VARCHAR(    10)  COLLATE ISO8859_1,
  TOLER                       FLOAT,
  MAXIMO                      FLOAT,
  DISP_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  ACUMULADO                   FLOAT,
  PROGLU_IMA                VARCHAR(   254)  COLLATE ISO8859_1,
  PROGLU_ANE                VARCHAR(   254)  COLLATE ISO8859_1,
  OS_CODIGO                 VARCHAR(    15)  COLLATE ISO8859_1,
  PEND                         CHAR(     1)  COLLATE ISO8859_1,
  PEND_MOTIV                VARCHAR(   100)  COLLATE ISO8859_1,
  IMPR_IMAGE                   CHAR(     1)  COLLATE ISO8859_1,
  PROG_PARAD                   CHAR(     1)  COLLATE ISO8859_1,
  NEGOCIO                      CHAR(     5)  COLLATE ISO8859_1,
  PERCENT_DISP                FLOAT,
  AREA_CODIG                VARCHAR(    20)  COLLATE ISO8859_1,
  PRI_CODIGO                VARCHAR(    10)  COLLATE ISO8859_1,
  PROC_CODIG                VARCHAR(    30)  COLLATE ISO8859_1,
  SET_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
  FUNCI_CODI                VARCHAR(    30)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_LUBRIFICACAO_1 PRIMARY KEY (COD_PROGRA)
);
CREATE TABLE MAN_LUBRIF_PONTOS 
(
  PNTS_CODIG              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  PNTS_DESCR              VARCHAR(    50)  COLLATE ISO8859_1,
  QUANTIDADE              VARCHAR(    25)  COLLATE ISO8859_1,
  LUB_CODIGO              VARCHAR(    25)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_LUBRIF_PONTOS_1 PRIMARY KEY (PNTS_CODIG)
);
CREATE TABLE MAN_MALHAS 
(
  MAL_CODIGO              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  MAL_DESCRI              VARCHAR(    60)  COLLATE ISO8859_1,
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  MAL_IMAGEM              VARCHAR(   254)  COLLATE ISO8859_1,
  MAL_CODIGP              VARCHAR(    10)  COLLATE ISO8859_1,
  MAL_CONFIR              T_YESNO ,
  MAL_FUNCAO              VARCHAR(    50)  COLLATE ISO8859_1,
  MAL_ANEXO               VARCHAR(   254)  COLLATE ISO8859_1,
  INCER_PROC                FLOAT,
  INCERT_MAL                FLOAT,
  NEGOCIO                    CHAR(     5)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_MALHAS_1 PRIMARY KEY (MAL_CODIGO)
);
CREATE TABLE MAN_MALHAS_EQUIPAM 
(
  MAL_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  EQUI_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  INCERTEZA               NUMERIC( 10, 6),
  PONTO_CONE              VARCHAR(    25)  COLLATE ISO8859_1,
  DATA_PROC                  DATE,
  INCER_PROC                FLOAT,
  INCERT_MAL                FLOAT,
  RESULTADO               VARCHAR(    15)  COLLATE ISO8859_1,
  SALVAR                     CHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE MAN_MALHAS_TAG 
(
  MAL_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  TAG_CODIGO              VARCHAR(    25)  COLLATE ISO8859_1,
  PONTO_CONE              VARCHAR(    25)  COLLATE ISO8859_1
);
CREATE TABLE MAN_MENSAGENS 
(
  CD_MENSAGE              INTEGER         NOT NULL,
  INDICE                 SMALLINT,
  DS_MENSAGE              VARCHAR(   254)  COLLATE ISO8859_1,
  TITULO                  VARCHAR(    30)  COLLATE ISO8859_1,
  ARQ_AUDIO               VARCHAR(   255)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_MENSAGENS_1 PRIMARY KEY (CD_MENSAGE)
);
CREATE TABLE MAN_MTBF_REPET 
(
  DATA                      DATE,
  TIPO_OS                VARCHAR(    50)  COLLATE ISO8859_1,
  ANO                   SMALLINT,
  MES                   SMALLINT,
  TOT_REPET                FLOAT,
  TOT_OS                   FLOAT,
  MTBF                     FLOAT,
  INDISPON               INTEGER,
  DISPONI                INTEGER
);
CREATE TABLE MAN_MTBF_TRA 
(
  DATA                    DATE,
  TIPO_OS              VARCHAR(    50)  COLLATE ISO8859_1,
  ANO                 SMALLINT,
  MES                 SMALLINT,
  TOT_TRA                FLOAT,
  TOT_OS                 FLOAT
);
CREATE TABLE MAN_MTBF_TRC 
(
  DATA                    DATE,
  TIPO_OS              VARCHAR(    50)  COLLATE ISO8859_1,
  ANO                 SMALLINT,
  MES                 SMALLINT,
  TOT_TRC                FLOAT,
  TOT_OS                 FLOAT
);
CREATE TABLE MAN_MTBF_TRI 
(
  DATA                    DATE,
  TIPO_OS              VARCHAR(    50)  COLLATE ISO8859_1,
  ANO                 SMALLINT,
  MES                 SMALLINT,
  TOT_TRI                FLOAT,
  TOT_OS                 FLOAT
);
CREATE TABLE MAN_MTTR 
(
  DATA                    DATE,
  TIPO_OS              VARCHAR(    50)  COLLATE ISO8859_1,
  ANO                 SMALLINT,
  MES                 SMALLINT,
  TOT_HH                 FLOAT,
  TOT_OS                 FLOAT
);
CREATE TABLE MAN_NORMAS 
(
  PK_NORMAS                    SMALLINT         NOT NULL,
  NORMAS_DESCRICAO              VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_NORMAS)
);
CREATE TABLE MAN_ORIGEM_NEW 
(
  PK_ORIGEM                    SMALLINT         NOT NULL,
  ORIGEM_DESCRICAO              VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_ORIGEM)
);
CREATE TABLE MAN_OS 
(
  AFETAPRODUCAO                         CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  APROVACAO_DATA                   TIMESTAMP,
  APROVADO                              CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  ATENDIDO                              CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  ATENDIDO_DATA                    TIMESTAMP,
  AVALIACAO                         SMALLINT,
  AVALIADO                              CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  COBRANCA_DATA                    TIMESTAMP,
  CONCLUIDA                             CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  CONTROLE_IMPRESSAO                SMALLINT,
  DATAABERTURA                     TIMESTAMP,
  DATACONCLUSAO                    TIMESTAMP,
  DATADIGITACAO                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATAEMISSAO                      TIMESTAMP,
  DATAIMPRESSAO                    TIMESTAMP,
  DATAINICIOREAL                   TIMESTAMP,
  DATATERMINO                      TIMESTAMP,
  DATATERMINODESEJADO              TIMESTAMP,
  DESCRICAO                          VARCHAR(   500)  COLLATE ISO8859_1,
  EQUIPAMENTO_DATALIB              TIMESTAMP,
  FK_ANEXOS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_APROVADOR                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_AREAEXEC                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_AVALIADOR                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_CALIBRRACAO                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CAUSAS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_CENTROCUSTO                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CHECKLIST                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_CHECKLIST_ITEM                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEFEITOS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_DESENHO_CONCLUSAO               INTEGER,
  FK_EQUIPAMENTOS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_EQUIPES                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FAMILIAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_IMAGEM                          INTEGER,
  FK_IMAGEM_CONCLUSAO                INTEGER,
  FK_MAQUINAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_OSR                            SMALLINT         DEFAULT 1 NOT NULL,
  FK_PATRIMONIO                      INTEGER,
  FK_PENDENCIAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_PREDITIVAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_PREVENTIVA                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_PRIORIDADES                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_PRODUTOS                        INTEGER         DEFAULT 1 NOT NULL,
  FK_PROG_REPROGRAMA                 INTEGER,
  FK_PROGRAMACAO                     INTEGER,
  FK_SERVICOPADRAO                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_SERVICOS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_SINTOMAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_SITUACAO_OS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_SOLICITANTE                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_SOLUCAO                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_SS                              INTEGER,
  FK_TAG                            SMALLINT         DEFAULT 1 NOT NULL,
  FK_TIPO_OS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_TIPOATENDIMENTO                SMALLINT         DEFAULT 1 NOT NULL,
  FK_TIPOFALHAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_USUARIO                        SMALLINT         DEFAULT 1 NOT NULL,
  MAQUINAPARADA                         CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  OBSERVACAO                         VARCHAR(   140)  COLLATE ISO8859_1,
  PK_OS                              INTEGER         NOT NULL,
  PRAZOENTREGA                     TIMESTAMP,
  PROGRAMACAO_DATABASE             TIMESTAMP,
  PROGRAMACAO_EXECUTADA            TIMESTAMP,
  RECEBIDO                              CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  RECEBIDO_DATA                    TIMESTAMP,
  RESUMO_ABERTURA                    VARCHAR(    30)  COLLATE ISO8859_1,
  RESUMO_CONCLUSAO                   VARCHAR(    30)  COLLATE ISO8859_1,
  RETRABALHO                            CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  STATUS_SERVICO                        CHAR(     1)  COLLATE ISO8859_1,
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         NOT NULL,
 PRIMARY KEY (PK_OS)
);
CREATE TABLE MAN_OSR 
(
  OSR_CODI              VARCHAR(    10)  COLLATE ISO8859_1,
  OSR_DESC              VARCHAR(    50)  COLLATE ISO8859_1
);
CREATE TABLE MAN_OS_CLASSE_SERVICO 
(
  CLAS_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  OS_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE MAN_OS_CONCLUSAO 
(
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  CONC_DESCR              VARCHAR(   150)  COLLATE ISO8859_1,
  CONC_LINHA             SMALLINT
);
CREATE TABLE MAN_OS_EMAILS 
(
  EMAIL              VARCHAR(   100)  COLLATE ISO8859_1
);
CREATE TABLE MAN_OS_FERRAMENTAS 
(
  COD_FERRAM              VARCHAR(    15)  COLLATE ISO8859_1,
  OS_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE MAN_OS_FUNCOES 
(
  FUNCAO_COD              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  OS_CODIGO               VARCHAR(    15) NOT NULL COLLATE ISO8859_1
);
CREATE TABLE MAN_OS_MAQ_PARADA 
(
  OS_CODIGO               VARCHAR(    25)  COLLATE ISO8859_1,
  MAQ_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  HORA_ABE                INTEGER,
  HORA_FIM                INTEGER,
  HT_MAQDISP              INTEGER
);
CREATE TABLE MAN_OS_NORMA 
(
  NORMA_CODI              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  OS_CODIGO               VARCHAR(    15) NOT NULL COLLATE ISO8859_1
);
CREATE TABLE MAN_OS_PECAS 
(
  PC_CODIGO              VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  QTDE                     FLOAT,
  OS_CODIGO              VARCHAR(    15) NOT NULL COLLATE ISO8859_1
);
CREATE TABLE MAN_OS_PENDENCIAS 
(
  OS_CODIGO                 FLOAT,
  PEND_AUTOI                FLOAT,
  PEND_DATA                  DATE,
  FUNC_ABREV              VARCHAR(    10)  COLLATE ISO8859_1,
  PEND_DESCR              VARCHAR(    50)  COLLATE ISO8859_1,
  PEND_HISTO              T_YESNO 
);
CREATE TABLE MAN_OS_PILHA 
(
  OS_CODIGO              VARCHAR(    15) NOT NULL COLLATE ISO8859_1
);
CREATE TABLE MAN_OS_SERVICOS 
(
  SERV_CODIG                 VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  SERV_DESCR                 VARCHAR(   500)  COLLATE ISO8859_1,
  VALOR_SERV                   FLOAT,
  FUNCAO_COD                 VARCHAR(    15)  COLLATE ISO8859_1,
  TOT_HORAS                  VARCHAR(     8)  COLLATE ISO8859_1,
  CUST_MED_H                   FLOAT,
  TIP_SERV_CUST                 CHAR(     1)  COLLATE ISO8859_1,
  QTD_MANT                   INTEGER,
 CONSTRAINT PK_MAN_OS_SERVICOS_1 PRIMARY KEY (SERV_CODIG)
);
CREATE TABLE MAN_PARADAPROGRAMADA_MAQUINA 
(
  CODIGO                            VARCHAR(    25)  COLLATE ISO8859_1,
  DESCRICAO                         VARCHAR(   100)  COLLATE ISO8859_1,
  TEMPO_PARADA                         TIME,
  PLANT_DESC                        VARCHAR(    25)  COLLATE ISO8859_1,
  TEMPO_PARADA_MINUTOS              INTEGER
);
CREATE TABLE MAN_PARADAS_RETORNO 
(
  RET_CODIGO               INTEGER         NOT NULL,
  FUNCI_CODI               VARCHAR(    10)  COLLATE ISO8859_1,
  MAQ_CODIGO               VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  PROG_CODIG               INTEGER         NOT NULL,
  DATA_RET                  T_DATA NOT NULL,
  HORA_RET                  T_HORA NOT NULL,
  TIPO_CAMPO               VARCHAR(    25)  COLLATE ISO8859_1,
  VALOR_TIPO               VARCHAR(    25)  COLLATE ISO8859_1,
  TIPO_LINHA               VARCHAR(    25)  COLLATE ISO8859_1,
  VALOR_LINHA              VARCHAR(    25)  COLLATE ISO8859_1,
  TIPO_PARADA                 CHAR(     1)  COLLATE ISO8859_1,
  DEP_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1,
  SET_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1,
  PROC_CODIG               VARCHAR(    30)  COLLATE ISO8859_1,
  CC_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PARADA_FUNCI 
(
  FUNCI_CODI                 VARCHAR(    10)  COLLATE ISO8859_1,
  OS_CODIGO                  VARCHAR(    15)  COLLATE ISO8859_1,
  DESCRIC                    VARCHAR(   140)  COLLATE ISO8859_1,
  HORA_INI                   VARCHAR(     5)  COLLATE ISO8859_1,
  HORA_FIM                   VARCHAR(     5)  COLLATE ISO8859_1,
  PARADA_CODIGO              INTEGER,
  DATA                          DATE,
  TOTAL_PARADO               INTEGER
);
CREATE TABLE MAN_PARADA_LANCTO 
(
  PROG_CODIG                   INTEGER         NOT NULL,
  FUNCI_CODI                   VARCHAR(    10)  COLLATE ISO8859_1,
  MAQ_CODIGO                   VARCHAR(    15)  COLLATE ISO8859_1,
  DATA_PROG                     T_DATA NOT NULL,
  HORA_PROG                    VARCHAR(    10)  COLLATE ISO8859_1,
  MAQ_PARADA                  T_PARADA NOT NULL,
  RET_CODIGO                   INTEGER,
  VISUALIZA                       CHAR(     1)  COLLATE ISO8859_1,
  QTD_DIAS                     INTEGER,
  TDS_MAQUINA                     CHAR(     1)  COLLATE ISO8859_1,
  TDS_TAG                         CHAR(     1)  COLLATE ISO8859_1,
  TDS_EQUI                        CHAR(     1)  COLLATE ISO8859_1,
  TIPO_PARADA                     CHAR(     1)  COLLATE ISO8859_1,
  TIP_OS_COD                   VARCHAR(    10)  COLLATE ISO8859_1,
  TIPO_CAMPO                   VARCHAR(    25)  COLLATE ISO8859_1,
  VALOR_TIPO                   VARCHAR(    25)  COLLATE ISO8859_1,
  TIPO_LINHA                   VARCHAR(    25)  COLLATE ISO8859_1,
  VALOR_LINHA                  VARCHAR(    25)  COLLATE ISO8859_1,
  SINT_CODIG                   VARCHAR(    15)  COLLATE ISO8859_1,
  TIPO_LANCAMENTO                 CHAR(     1)  COLLATE ISO8859_1,
  HORA_FIM                     VARCHAR(    10)  COLLATE ISO8859_1,
  DEP_CODIGO                   VARCHAR(    30)  COLLATE ISO8859_1,
  SET_CODIGO                   VARCHAR(    30)  COLLATE ISO8859_1,
  PROC_CODIG                   VARCHAR(    30)  COLLATE ISO8859_1,
  CC_CODIGO                    VARCHAR(    30)  COLLATE ISO8859_1,
  COD_MOTIVO                   VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE MAN_PARAMHELP 
(
  CD_CAMPO              VARCHAR(    50)  COLLATE ISO8859_1,
  INDICE                  FLOAT,
  DS_HELP                  BLOB SUB_TYPE 0 SEGMENT SIZE 80
);
CREATE TABLE MAN_PCCONSUMIDAS 
(
  PC_CODIGO               VARCHAR(    16)  COLLATE ISO8859_1,
  DATA_REQUI                 DATE,
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  EQUI_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  FUNCI_CODI              VARCHAR(    10)  COLLATE ISO8859_1,
  PC_QUANTID                FLOAT,
  PC_UNITARI                FLOAT,
  DATA_CHEGA                 DATE,
  PC_ORIGEM                  CHAR(     1)  COLLATE ISO8859_1,
  TAG_CODIGO              VARCHAR(    25)  COLLATE ISO8859_1,
  TAG_COMPLE              VARCHAR(    30)  COLLATE ISO8859_1,
  PC_CHEGADA                FLOAT,
  PC_DESCRIC              VARCHAR(    50)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PECASAIDADIA 
(
  DIA                    SMALLINT,
  MES                    SMALLINT,
  ANO                    SMALLINT,
  DATA_SAIDA                 DATE,
  PC_CODIGO               VARCHAR(    10)  COLLATE ISO8859_1,
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  QTS                       FLOAT,
  PC_ORIGEM                  CHAR(     1)  COLLATE ISO8859_1,
  CUS_UNIT                  FLOAT,
  VL_CUS_TOT                FLOAT
);
CREATE TABLE MAN_PECA_ALMOXARIFADO 
(
  PC_CODIGO                VARCHAR(    30) CHARACTER SET NONE NOT NULL COLLATE NONE,
  DEP_CODIGO               VARCHAR(    30) CHARACTER SET NONE NOT NULL COLLATE NONE,
  PC_ESTOATU               NUMERIC( 15, 3),
  PC_ESTOMAX               NUMERIC( 15, 3),
  PC_ESTOMIN               NUMERIC( 15, 3),
  PC_ESTODISP              NUMERIC( 15, 3),
  PRATELEIRA               VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  LOCAL_2                  VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  CORREDOR                 VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  CUS_UNIT                 NUMERIC( 15, 3),
 CONSTRAINT PK_MAN_PECA_ALMOXARIFADO_1 PRIMARY KEY (PC_CODIGO, DEP_CODIGO)
);
CREATE TABLE MAN_PECA_COTA 
(
  PC_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1,
  DATA                       DATE,
  FOR_CODIGO              VARCHAR(    20)  COLLATE ISO8859_1,
  QTS                       FLOAT,
  VALOR                     FLOAT,
  OBS                     VARCHAR(    60)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PECA_DEVOLUCAO 
(
  PC_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1,
  DATA                       DATE,
  FUNC_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  SOLICITANT              VARCHAR(    30)  COLLATE ISO8859_1,
  DOCUMENTO               VARCHAR(    20)  COLLATE ISO8859_1,
  MOTIVO                  VARCHAR(    40)  COLLATE ISO8859_1,
  OBS                     VARCHAR(   150)  COLLATE ISO8859_1,
  OS_CODIGO               VARCHAR(    25)  COLLATE ISO8859_1,
  QTS                     NUMERIC( 10, 4),
  COD_DEVO                INTEGER,
  COD_SAIDA               INTEGER,
  DEP_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PECA_ENTRADAS 
(
  PC_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
  DATA                        DATE,
  FUNC_CODIG               VARCHAR(    10)  COLLATE ISO8859_1,
  FOR_CODIGO               VARCHAR(    20)  COLLATE ISO8859_1,
  MOTIVO                   VARCHAR(    30)  COLLATE ISO8859_1,
  SOLICITANT               VARCHAR(    30)  COLLATE ISO8859_1,
  DOCUMENTO                VARCHAR(    30)  COLLATE ISO8859_1,
  QTS                      NUMERIC( 10, 4),
  VL_UNIT                  NUMERIC( 10, 3),
  VL_BRUTO                 NUMERIC( 10, 3),
  VL_LIQUIDO               NUMERIC( 10, 3),
  VL_DESCONT               NUMERIC( 10, 3),
  PERC_DESCT               NUMERIC( 10, 3),
  OBS                      VARCHAR(   150)  COLLATE ISO8859_1,
  COD_ENTRAD               INTEGER,
  COD_COMPRA               INTEGER,
  N_SERIE                  VARCHAR(    10)  COLLATE ISO8859_1,
  LOTE                     VARCHAR(    30)  COLLATE ISO8859_1,
  HORA_ENT                 VARCHAR(    10)  COLLATE ISO8859_1,
  CODIGO_LOTE              INTEGER,
  DEP_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PECA_PEDIDO 
(
  PC_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1,
  DATA                       DATE,
  FUNC_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  SOLICITANT              VARCHAR(    30)  COLLATE ISO8859_1,
  MOTIVO                  VARCHAR(    30)  COLLATE ISO8859_1,
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  PEDIDO                  VARCHAR(    30)  COLLATE ISO8859_1,
  DATA_LIMIT                 DATE,
  DATA_RECEB                 DATE,
  APROVACAO               VARCHAR(    30)  COLLATE ISO8859_1,
  DATA_APROV                 DATE,
  DATA_ENCAM                 DATE,
  OBS                     VARCHAR(    60)  COLLATE ISO8859_1,
  FOR_CODIGO              VARCHAR(    20)  COLLATE ISO8859_1,
  QTS                     NUMERIC( 10, 0)
);
CREATE TABLE MAN_PECA_SAIDA 
(
  COD_SAIDA                 INTEGER         NOT NULL,
  PC_CODIGO                 VARCHAR(    30)  COLLATE ISO8859_1,
  DATA                         DATE,
  FUNC_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  OS_CODIGO                 VARCHAR(    15)  COLLATE ISO8859_1,
  DOCUMENTO                 VARCHAR(    50)  COLLATE ISO8859_1,
  QTS                       NUMERIC( 10, 4),
  CUS_UNIT                  NUMERIC( 10, 4),
  MOTIVO                    VARCHAR(    30)  COLLATE ISO8859_1,
  SOLICITANT                VARCHAR(    30)  COLLATE ISO8859_1,
  APROVACAO                 VARCHAR(    30)  COLLATE ISO8859_1,
  OBS                       VARCHAR(   150)  COLLATE ISO8859_1,
  PC_ORIGEM                    CHAR(     1)  COLLATE ISO8859_1,
  COD_DEVO                  INTEGER,
  HORA_SAIDA                VARCHAR(    10)  COLLATE ISO8859_1,
  PC_INTEGRADO                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  COD_MSIGA                 VARCHAR(    30)  COLLATE ISO8859_1,
  STATUS_MSIGA                 CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  CODIGO_LOTE               INTEGER,
  DEP_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_PECA_SAIDA_1 PRIMARY KEY (COD_SAIDA)
);
CREATE TABLE MAN_PECA_SAIDA_N_PROC 
(
  PC_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1,
  PC_DESCRIC              VARCHAR(    50)  COLLATE ISO8859_1,
  DATA                       DATE,
  FUNC_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  OS_CODIGO               NUMERIC( 11, 0),
  DOCUMENTO               VARCHAR(    50)  COLLATE ISO8859_1,
  QTS                     NUMERIC( 10, 0),
  CUS_UNIT                NUMERIC( 10, 0),
  MOTIVO                  VARCHAR(    30)  COLLATE ISO8859_1,
  SOLICITANT              VARCHAR(    30)  COLLATE ISO8859_1,
  APROVACAO               VARCHAR(    30)  COLLATE ISO8859_1,
  OBS                     VARCHAR(    70)  COLLATE ISO8859_1,
  PC_ORIGEM                  CHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PECA_TRANSF 
(
  ID                        INTEGER         NOT NULL,
  PC_CODIGO                 VARCHAR(    30) CHARACTER SET NONE NOT NULL COLLATE NONE,
  DEP_SOLICIT               VARCHAR(    30) CHARACTER SET NONE NOT NULL COLLATE NONE,
  DEP_CEDENTE               VARCHAR(    30) CHARACTER SET NONE NOT NULL COLLATE NONE,
  PC_QTD                    NUMERIC( 12, 2) NOT NULL,
  STATUS                    INTEGER         NOT NULL,
  DATA_SOLICIT                 DATE         NOT NULL,
  DATA_AVALIA                  DATE,
  DATA_ENVIO                   DATE,
  DATA_RECEB                   DATE,
  USU_SOLICIT               VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  USU_AVALIA                VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  USU_ENVIO                 VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  USU_RECEB                 VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  MOTIVO                    VARCHAR(   255) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_MAN_PECA_TRANSF_1 PRIMARY KEY (ID)
);
CREATE TABLE MAN_PENDENCIAS 
(
  PEND_CODIG                  VARCHAR(    10)  COLLATE ISO8859_1,
  PEND_DESCR                  VARCHAR(    50)  COLLATE ISO8859_1,
  PEND_SOLUC                  VARCHAR(    50)  COLLATE ISO8859_1,
  IMPEDE_SERVICO                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1
);
CREATE TABLE MAN_PERMISSOES_CUSTO 
(
  USUARIO                 VARCHAR(    15)  COLLATE ISO8859_1,
  SENHA                   VARCHAR(    12)  COLLATE ISO8859_1,
  BCUS_HH                 T_YESNO ,
  BCUS_RELCU              T_YESNO ,
  BCUS_GRAFC              T_YESNO ,
  BCUS_FECHE              T_YESNO ,
  BCUS_PROCI              T_YESNO ,
  BCUS_PERMI              T_YESNO ,
  BCUS_FUNC               T_YESNO 
);
CREATE TABLE MAN_PESOS 
(
  BRANCO_INI             SMALLINT,
  BRANCO_FIM             SMALLINT,
  BRANCO_DES              VARCHAR(   100)  COLLATE ISO8859_1,
  AMAREL_INI             SMALLINT,
  AMAREL_FIM             SMALLINT,
  AMAREL_DES              VARCHAR(   100)  COLLATE ISO8859_1,
  VERDE_INI              SMALLINT,
  VERDE_FIM              SMALLINT,
  VERDE_DES               VARCHAR(   100)  COLLATE ISO8859_1,
  AZUL_INI               SMALLINT,
  AZUL_FIM               SMALLINT,
  AZUL_DES                VARCHAR(   100)  COLLATE ISO8859_1,
  ROXO_INI               SMALLINT,
  ROXO_FIM               SMALLINT,
  ROXO_DES                VARCHAR(   100)  COLLATE ISO8859_1,
  VERM_INI               SMALLINT,
  VERM_FIM               SMALLINT,
  VERM_DES                VARCHAR(   100)  COLLATE ISO8859_1,
  PRETO_INI              SMALLINT,
  PRETO_FIM              SMALLINT,
  PRETO_DES               VARCHAR(   100)  COLLATE ISO8859_1,
  BRANCO_AFP                 CHAR(     1)  COLLATE ISO8859_1,
  AMAREL_AFP                 CHAR(     1)  COLLATE ISO8859_1,
  VERDE_AFP                  CHAR(     1)  COLLATE ISO8859_1,
  AZUL_AFP                   CHAR(     1)  COLLATE ISO8859_1,
  ROXO_AFP                   CHAR(     1)  COLLATE ISO8859_1,
  VERM_AFP                   CHAR(     1)  COLLATE ISO8859_1,
  PRETO_AFP                  CHAR(     1)  COLLATE ISO8859_1,
  MARROM_INI             SMALLINT,
  MARROM_FIM             SMALLINT,
  MARROM_AFP                 CHAR(     1)  COLLATE ISO8859_1,
  MARROM_DES              VARCHAR(   100)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PLANTAO 
(
  FUNCI_CODI              VARCHAR(    10)  COLLATE ISO8859_1,
  PLAN_DATAI                 DATE,
  PLAN_DATAF                 DATE,
  PLAN_HI1                VARCHAR(     5)  COLLATE ISO8859_1,
  PLAN_HF1                VARCHAR(     5)  COLLATE ISO8859_1,
  PLAN_HI2                VARCHAR(     5)  COLLATE ISO8859_1,
  PLAN_HF2                VARCHAR(     5)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PLANTAOHH 
(
  PLANT_COD                       INTEGER,
  PLANT_DESC                      VARCHAR(    30)  COLLATE ISO8859_1,
  PLANT_DIA                       VARCHAR(    10)  COLLATE ISO8859_1,
  PLANT_MANE                      VARCHAR(     5)  COLLATE ISO8859_1,
  PLANT_MANS                      VARCHAR(     5)  COLLATE ISO8859_1,
  PLANT_TARE                      VARCHAR(     5)  COLLATE ISO8859_1,
  PLANT_TARS                      VARCHAR(     5)  COLLATE ISO8859_1,
  PLANT_AN                           CHAR(     1)  COLLATE ISO8859_1,
  PLANT_POAN                     SMALLINT,
  PLANT_PERI                         CHAR(     1)  COLLATE ISO8859_1,
  PLANT_POPE                     SMALLINT,
  DESCONTA_INTERVALO                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  PLANT_HORADIA                   INTEGER
);
CREATE TABLE MAN_PONTOS_LUB 
(
  PNT_CODIGO                VARCHAR(    15)  COLLATE ISO8859_1,
  TIPO_CAMPO                VARCHAR(    15)  COLLATE ISO8859_1,
  VALOR_TIPO                VARCHAR(    25)  COLLATE ISO8859_1,
  PERIODO                   INTEGER,
  QUANTIDADE                VARCHAR(    25)  COLLATE ISO8859_1,
  LUBRIFICANTE              VARCHAR(    50)  COLLATE ISO8859_1,
  PROG_PER_S                VARCHAR(    25)  COLLATE ISO8859_1,
  PROG_PER_D                VARCHAR(    25)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PONTOS_RETORNO 
(
  COD_PROGRA                FLOAT,
  PNTS_CODIG              VARCHAR(    30)  COLLATE ISO8859_1,
  STATUS                     CHAR(     2)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PREDITIVA 
(
  PRED_CODIG                VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  PRED_DESCR                VARCHAR(    70)  COLLATE ISO8859_1,
  PRED_CLASS                VARCHAR(    40)  COLLATE ISO8859_1,
  AREA_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  PROG_PER_D                  FLOAT,
  PROG_TOLER                  FLOAT,
  TIPO                      VARCHAR(    10)  COLLATE ISO8859_1,
  DISP_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  MAXIMO                      FLOAT,
  PROG_PER_S                  FLOAT,
  PRED_IMAGE                VARCHAR(   254)  COLLATE ISO8859_1,
  PRED_ANEXO                VARCHAR(   254)  COLLATE ISO8859_1,
  PROG_ANTE                   FLOAT,
  PERCENT_DISP                FLOAT,
 CONSTRAINT PK_MAN_PREDITIVA_1 PRIMARY KEY (PRED_CODIG)
);
CREATE TABLE MAN_PREVENTIVA 
(
  PREV_CODIG                VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  PREV_DESCR                VARCHAR(   250)  COLLATE ISO8859_1,
  AREA_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  PROG_PER_D                  FLOAT,
  PROG_TOLER                  FLOAT,
  TIPO                      VARCHAR(    10)  COLLATE ISO8859_1,
  DISP_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  MAXIMO                      FLOAT,
  PROG_PER_S                  FLOAT,
  PREV_IMAGE                VARCHAR(   254)  COLLATE ISO8859_1,
  PREV_ANEXO                VARCHAR(   254)  COLLATE ISO8859_1,
  GER_TIP_OS                   CHAR(     1)  COLLATE ISO8859_1,
  GRP_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
  PROG_DATAB                   DATE,
  PROG_EXECU                   DATE,
  SER_P_CODI                VARCHAR(    25)  COLLATE ISO8859_1,
  PROG_ANTE                   FLOAT,
  PERCENT_DISP                FLOAT,
  PREV_AFETAPR                FLOAT,
 CONSTRAINT PK_MAN_PREVENTIVA_1 PRIMARY KEY (PREV_CODIG)
);
CREATE TABLE MAN_PREVENTIVAS_ETAPAS 
(
  PREV_CODIG                  VARCHAR(    30)  COLLATE ISO8859_1,
  DATA_STATUS_OK                 DATE,
  MPREV_DESC                  VARCHAR(   500)  COLLATE ISO8859_1,
  MPREV_ORDE                  VARCHAR(    20)  COLLATE ISO8859_1,
  PROG_CODIG                    FLOAT,
  STATUS                         CHAR(     1)  COLLATE ISO8859_1,
  USUARIO                     VARCHAR(    50)  COLLATE ISO8859_1,
  OS_CODIGO                   VARCHAR(    30)  COLLATE ISO8859_1,
  OS_CODIGO_NEW               VARCHAR(    30)  COLLATE ISO8859_1,
  OS_CODIGO_OLD               VARCHAR(    30)  COLLATE ISO8859_1,
  SERV_CODIGO                 VARCHAR(    15)  COLLATE ISO8859_1,
  CUST_MED_H                    FLOAT,
  FUNCAO_COD                  VARCHAR(    10)  COLLATE ISO8859_1,
  MPREV_COND                  VARCHAR(    20)  COLLATE ISO8859_1,
  MPREV_INDI                    FLOAT,
  MPREV_TEMP                  VARCHAR(    20)  COLLATE ISO8859_1,
  QTDE_H                      VARCHAR(     6)  COLLATE ISO8859_1,
  SERV_CODIG                  VARCHAR(    15)  COLLATE ISO8859_1,
  VL_TOTAL                      FLOAT,
  MPREV_METODO                VARCHAR(   200) CHARACTER SET NONE  COLLATE NONE,
  MPREV_CRITERIO              VARCHAR(   200) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE MAN_PRIORIDADE 
(
  PRI_CODIGO                    VARCHAR(    10)  COLLATE ISO8859_1,
  PRI_DESCRICAO                 VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  PESO                          INTEGER         DEFAULT 1 NOT NULL,
  TIPO_ATENDIMENTO              VARCHAR(    30)  COLLATE ISO8859_1,
  PK_PRIORIDADE                SMALLINT
);
CREATE TABLE MAN_PRIORIDADE_N 
(
  PK_PRIORIDADE             SMALLINT         NOT NULL,
  DESCRICAO                  VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  PESO                      SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_MAN_PRIORIDADE_N PRIMARY KEY (PK_PRIORIDADE)
);
CREATE TABLE MAN_PROCESSOS 
(
  PROC_CODIG                 VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  PROC_DESCR                 VARCHAR(   100)  COLLATE ISO8859_1,
  PROC_IMAGE                 VARCHAR(   254)  COLLATE ISO8859_1,
  PROC_ANEXO                 VARCHAR(   254)  COLLATE ISO8859_1,
  PESO                      SMALLINT,
  SET_CODIGO                 VARCHAR(    15)  COLLATE ISO8859_1,
  PO_CUS_MAN                   FLOAT,
  PO_FATURAM                   FLOAT,
  PO_MAQ_PAR                   FLOAT,
  TOT_MAQPAR                 VARCHAR(    15)  COLLATE ISO8859_1,
  TOT_CUSMAN                   FLOAT,
  TOT_FATURA                   FLOAT,
  SANZONALIDADE              INTEGER,
  PRI_PRODUCAO               INTEGER,
  CEL_CODIGO                 VARCHAR(    25)  COLLATE ISO8859_1,
  EMPRESA                   SMALLINT         DEFAULT 1,
  FILIAL                    SMALLINT         DEFAULT 1,
  CODDEPTO                   VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  RESPONSAVEL                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  SEQUENCIAL                 INTEGER,
 CONSTRAINT PK_MAN_PROCESSOS_1 PRIMARY KEY (PROC_CODIG)
);
CREATE TABLE MAN_PROCESSOS_CODIGOS 
(
  PK_PROCESSOS             SMALLINT         NOT NULL,
  CODIGOANTIGO              VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_PROCESSOS_CODIGOS PRIMARY KEY (PK_PROCESSOS)
);
CREATE TABLE MAN_PRODUTIVA 
(
  PROD_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  PROD_DESCR              VARCHAR(   100)  COLLATE ISO8859_1,
  AREA_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  DISP_CODIG              VARCHAR(    10)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PRODUTOS 
(
  PROD_CODIGO                   VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  PROD_DESCRI                   VARCHAR(   100)  COLLATE ISO8859_1,
  VALOR_BRUTO                   NUMERIC( 15, 2),
  CUSTO_UNITARIO                NUMERIC( 15, 2),
  QTDE_PROD_MINUTO              NUMERIC( 15, 2),
  PESO                          NUMERIC( 15, 2),
  MATERIA_CODIGO                VARCHAR(    25)  COLLATE ISO8859_1,
  QUANTIDADE                    NUMERIC( 15, 2),
  GRP_CODIGO                    VARCHAR(    25)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_PRODUTOS_1 PRIMARY KEY (PROD_CODIGO)
);
CREATE TABLE MAN_PROGDIARIA 
(
  DATA_INI                    DATE,
  HORA_INI                 VARCHAR(     5)  COLLATE ISO8859_1,
  HORA_FIM                 VARCHAR(     5)  COLLATE ISO8859_1,
  OS_CODIGO                VARCHAR(    15)  COLLATE ISO8859_1,
  TAG_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1,
  MAQ_CODIGO               VARCHAR(    30)  COLLATE ISO8859_1,
  EQUI_CODIG               VARCHAR(    30)  COLLATE ISO8859_1,
  EQUIPE_COD               VARCHAR(    10)  COLLATE ISO8859_1,
  OS_DESCRIC               VARCHAR(   500)  COLLATE ISO8859_1,
  OS_TEMPOES                 FLOAT,
  EXECUTADO                T_YESNO ,
  TEMPOES_OS               VARCHAR(     9)  COLLATE ISO8859_1,
  TEMPORE_OS               VARCHAR(     9)  COLLATE ISO8859_1,
  FUNCI_CODI               VARCHAR(    10)  COLLATE ISO8859_1,
  AREA_CODIG               VARCHAR(    25)  COLLATE ISO8859_1,
  TIPO_TAREFA                 CHAR(     5)  COLLATE ISO8859_1,
  TAREFA                   VARCHAR(    30)  COLLATE ISO8859_1,
  PD_CODIGO                INTEGER
);
CREATE TABLE MAN_PROGPERIO 
(
  SET_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  TAG_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  EQUI_CODIG              VARCHAR(    30)  COLLATE ISO8859_1,
  SERV_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  SERV_DESCR              VARCHAR(   100)  COLLATE ISO8859_1,
  PROG_EXECU                 DATE,
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  PROG_PER_D                FLOAT,
  PROG_PER_S                FLOAT,
  PROG_TOLER                FLOAT,
  PROG_DATAB                 DATE,
  PROG_PARAD                 CHAR(     1)  COLLATE ISO8859_1,
  PROG_SITUA                 CHAR(     1)  COLLATE ISO8859_1,
  PROG_MARCA              T_YESNO ,
  AREA_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  PROG_OS_DE              VARCHAR(    50)  COLLATE ISO8859_1,
  PROG_TIPOE              VARCHAR(    50)  COLLATE ISO8859_1,
  PROG_RECOM              VARCHAR(    50)  COLLATE ISO8859_1,
  PROG_PRECI              VARCHAR(    30)  COLLATE ISO8859_1,
  PROG_ACAON              VARCHAR(    50)  COLLATE ISO8859_1,
  PROG_IE                    CHAR(     1)  COLLATE ISO8859_1,
  PROG_OREXE              VARCHAR(    50)  COLLATE ISO8859_1,
  FOR_CODIGO              VARCHAR(    20)  COLLATE ISO8859_1,
  RESPONSAVE              VARCHAR(    20)  COLLATE ISO8859_1,
  PROG_CODIG             SMALLINT,
  IMPR_IMAGE                 CHAR(     1)  COLLATE ISO8859_1,
  PROG_IMAGE              VARCHAR(   254)  COLLATE ISO8859_1,
  PROG_ANEXO              VARCHAR(   254)  COLLATE ISO8859_1,
  NEGOCIO                 VARCHAR(     5)  COLLATE ISO8859_1,
  PROC_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  NORMA_CODI              VARCHAR(    25)  COLLATE ISO8859_1,
  PRI_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PROGPRED 
(
  PROG_CODIG                  FLOAT         NOT NULL,
  MAQ_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
  SET_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
  TAG_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
  EQUI_CODIG                VARCHAR(    30)  COLLATE ISO8859_1,
  PRED_CODIG                VARCHAR(    15)  COLLATE ISO8859_1,
  PROG_EXECU                   DATE,
  OS_CODIGO                 VARCHAR(    15)  COLLATE ISO8859_1,
  PROG_PER_S                  FLOAT,
  PROG_PER_D                  FLOAT,
  PROG_TOLER                  FLOAT,
  PROG_DATAB                   DATE,
  PROG_PARAD                   CHAR(     1)  COLLATE ISO8859_1,
  PROG_SITUA                   CHAR(     1)  COLLATE ISO8859_1,
  PROG_MARCA                T_YESNO ,
  PROG_OS_DE                VARCHAR(    50)  COLLATE ISO8859_1,
  PRED_DESCR                VARCHAR(    70)  COLLATE ISO8859_1,
  AREA_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  EQUIPE_COD                VARCHAR(    10)  COLLATE ISO8859_1,
  TIPO                      VARCHAR(    10)  COLLATE ISO8859_1,
  DISP_CODIG                VARCHAR(    15)  COLLATE ISO8859_1,
  MAXIMO                      FLOAT,
  TOLER                       FLOAT,
  ACUMULADO                   FLOAT,
  PRGPRD_IMA                VARCHAR(   254)  COLLATE ISO8859_1,
  PRGPRD_ANE                VARCHAR(   254)  COLLATE ISO8859_1,
  IMPR_IMAGE                   CHAR(     1)  COLLATE ISO8859_1,
  NEGOCIO                      CHAR(     5)  COLLATE ISO8859_1,
  PROG_ANTE                   FLOAT,
  MTTR                      INTEGER,
  PERCENT_DISP                FLOAT,
  PRI_CODIGO                VARCHAR(    10)  COLLATE ISO8859_1,
  FUNCI_CODI                VARCHAR(    30)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_PROGPRED_1 PRIMARY KEY (PROG_CODIG)
);
CREATE TABLE MAN_PROGRAMACAO 
(
  PROG_CODIG                  FLOAT         NOT NULL,
  MAQ_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
  SET_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
  TAG_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
  EQUI_CODIG                VARCHAR(    30)  COLLATE ISO8859_1,
  PREV_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  PROG_EXECU                   DATE,
  OS_CODIGO                 VARCHAR(    15)  COLLATE ISO8859_1,
  PREV_DESCR                VARCHAR(   250)  COLLATE ISO8859_1,
  PROG_PER_S                  FLOAT,
  PROG_PER_D                  FLOAT,
  PROG_TOLER                  FLOAT,
  PROG_DATAB                   DATE,
  PROG_PARAD                   CHAR(     1)  COLLATE ISO8859_1,
  PROG_SITUA                   CHAR(     1)  COLLATE ISO8859_1,
  PROG_MARCA                T_YESNO ,
  AREA_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  PROG_OS_DE                VARCHAR(    50)  COLLATE ISO8859_1,
  EQUIPE_COD                VARCHAR(    10)  COLLATE ISO8859_1,
  PROG_TIPO                 VARCHAR(    10)  COLLATE ISO8859_1,
  DISP_CODIG                VARCHAR(    10)  COLLATE ISO8859_1,
  DISP_MAX                    FLOAT,
  DISP_TOLER                  FLOAT,
  DISP_ACUMU                  FLOAT,
  PRGPRV_IMA                VARCHAR(   254)  COLLATE ISO8859_1,
  PRGPRV_ANE                VARCHAR(   254)  COLLATE ISO8859_1,
  IMP_IMAGEM                   CHAR(     1)  COLLATE ISO8859_1,
  PROG_TEMP                    CHAR(     1)  COLLATE ISO8859_1,
  PRG_REPROG                   CHAR(     1)  COLLATE ISO8859_1,
  GRP_CODIGO                VARCHAR(    30)  COLLATE ISO8859_1,
  NEGOCIO                      CHAR(     5)  COLLATE ISO8859_1,
  PROG_ANTE                   FLOAT,
  MTTR                      INTEGER,
  PERCENT_DISP                FLOAT,
  PRI_CODIGO                VARCHAR(    10)  COLLATE ISO8859_1,
  PROG_INI                     DATE,
  FUNCI_CODI                VARCHAR(    30)  COLLATE ISO8859_1,
  PROG_AFETAPR                FLOAT,
 CONSTRAINT PK_MAN_PROGRAMACAO_1 PRIMARY KEY (PROG_CODIG)
);
CREATE TABLE MAN_PROGRAMALANCHT 
(
  OS_CODIGO               VARCHAR(    25)  COLLATE ISO8859_1,
  FUNCI_CODI              VARCHAR(    25)  COLLATE ISO8859_1,
  DATA_INI                   DATE,
  DATA_FIM                   DATE,
  HORA_INI                VARCHAR(    10)  COLLATE ISO8859_1,
  HORA_FIM                VARCHAR(    10)  COLLATE ISO8859_1,
  CONCLUIDO                  CHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE MAN_PROG_INSPECAO 
(
  COD_PROG_INSPECAO              INTEGER         NOT NULL,
  COD_INSPECAO                   INTEGER,
  PRINSP_DTB                        DATE,
  PRINSP_EXE                        DATE,
  PRINSP_TOL                     INTEGER,
  PRINSP_PER                     INTEGER,
  PRINSP_SIT                        CHAR(     1)  COLLATE ISO8859_1,
  PRINSP_ID                      INTEGER,
 CONSTRAINT PK_MAN_PROG_INSPECAO_1 PRIMARY KEY (COD_PROG_INSPECAO)
);
CREATE TABLE MAN_PROG_PARADAS 
(
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  DATA                       DATE,
  MAQ_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  TAG_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  EQUI_CODIG              VARCHAR(    30)  COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(    40)  COLLATE ISO8859_1,
  COR                       FLOAT
);
CREATE TABLE MAN_RESUMOS_OS 
(
  RES_DESCRI               VARCHAR(    30)  COLLATE ISO8859_1,
  CODRESUMO                VARCHAR(    20)  COLLATE ISO8859_1,
  RESUMO_TIPO              INTEGER
);
CREATE TABLE MAN_SECAO 
(
  EMPRESA                  SMALLINT         DEFAULT 1 NOT NULL,
  FILIAL                   SMALLINT         NOT NULL,
  CODDEPTO                  VARCHAR(    10) CHARACTER SET NONE NOT NULL COLLATE NONE,
  CODSETOR                  VARCHAR(    10) CHARACTER SET NONE NOT NULL COLLATE NONE,
  CODSECAO                  VARCHAR(    10) CHARACTER SET NONE NOT NULL COLLATE NONE,
  SEQUENCIAL                INTEGER         NOT NULL,
  DESCRICAO                 VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  RESPONSAVEL               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  DATACADASTRO            TIMESTAMP,
 CONSTRAINT PK_MAN_SECAO_1 PRIMARY KEY (EMPRESA, FILIAL, CODDEPTO, CODSETOR, CODSECAO)
);
CREATE TABLE MAN_SERVICOS 
(
  SERV_CODIG              VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  SERV_DESCR              VARCHAR(   500)  COLLATE ISO8859_1,
  VALOR_SERV                FLOAT,
  FUNCAO_COD              VARCHAR(    15)  COLLATE ISO8859_1,
  TOT_HORAS               VARCHAR(     8)  COLLATE ISO8859_1,
  CUST_MED_H                FLOAT,
  ORDEM                   VARCHAR(     5)  COLLATE ISO8859_1,
  SER_PA_COD              VARCHAR(    30)  COLLATE ISO8859_1,
  DEP_ORDEM               VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE MAN_SERVICOS1 
(
  SERV_CODIG              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  SERV_DESCR              VARCHAR(   100)  COLLATE ISO8859_1,
  SERV_CLASS              VARCHAR(    40)  COLLATE ISO8859_1,
  AREA_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  DATA                       DATE,
 CONSTRAINT PK_MAN_SERVICOS1_1 PRIMARY KEY (SERV_CODIG)
);
CREATE TABLE MAN_SERVICOSPADRAO 
(
  PK_SERVICOPADRAO             SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_SERVICOPADRAO)
);
CREATE TABLE MAN_SERVICOS_CLASSE 
(
  CLAS_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  CLAS_DESC                VARCHAR(   150)  COLLATE ISO8859_1
);
CREATE TABLE MAN_SERVICOS_FUNCAO 
(
  FK_SERVICOS                   SMALLINT         NOT NULL,
  PK_SERVICO_FUNCAO             SMALLINT         NOT NULL,
  FK_FUNCAO                     SMALLINT,
  DESCRICAO                      VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  VALORPORHORA                   DECIMAL( 12, 2),
  QUANTMANTENEDOR             SMALL_DATE DEFAULT '1' NOT NULL,
 PRIMARY KEY (FK_SERVICOS, PK_SERVICO_FUNCAO)
);
CREATE TABLE MAN_SERVICOS_N 
(
  FK_SERVICOSPADRAO             SMALLINT         DEFAULT 1 NOT NULL,
  PK_SERVICOS                   SMALLINT         NOT NULL,
  ORDEM                          INTEGER,
  DESCRICAO                      VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  TEMPOTOTAL                        TIME,
  CUSTOTOTAL                     DECIMAL( 12, 2),
 PRIMARY KEY (PK_SERVICOS)
);
CREATE TABLE MAN_SETORES 
(
  SET_CODIGO               VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  SET_DESCRI               VARCHAR(    50)  COLLATE ISO8859_1,
  SET_IMAGEM               VARCHAR(   254)  COLLATE ISO8859_1,
  SET_ANEXO                VARCHAR(   254)  COLLATE ISO8859_1,
  PESO                    SMALLINT,
  DEP_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  PO_MAQ_PAR                 FLOAT,
  PO_CUS_MAN                 FLOAT,
  PO_FATURAM                 FLOAT,
  TOT_MAQPAR               VARCHAR(     5)  COLLATE ISO8859_1,
  TOT_CUSMAN                 FLOAT,
  TOT_FATURA                 FLOAT,
  DATA                        DATE,
  RESPONSAVEL              VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  EMPRESA                 SMALLINT         DEFAULT 1,
  FILIAL                  SMALLINT         DEFAULT 1,
  SEQUENCIAL               INTEGER,
  FOTOSETOR                   BLOB SUB_TYPE 1 SEGMENT SIZE 8192 CHARACTER SET NONE,
 CONSTRAINT PK_MAN_SETORES_1 PRIMARY KEY (SET_CODIGO)
);
CREATE TABLE MAN_SETOR_FUNC 
(
  SET_CODIGO              VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  FUNCI_CODI              VARCHAR(    10)  COLLATE ISO8859_1
);
CREATE TABLE MAN_SINTOMAS_CARACT 
(
  FK_SINTOMAS                 SMALLINT         NOT NULL,
  PK_SINTOMA_CARC             SMALLINT         NOT NULL,
  CONTROLE                    SMALLINT,
  ORDEM                       SMALLINT,
  DESCRICAO                    VARCHAR(    70)  COLLATE ISO8859_1,
 CONSTRAINT SINTOMAS_CARACT_IDX1 PRIMARY KEY (FK_SINTOMAS, PK_SINTOMA_CARC)
);
CREATE TABLE MAN_SINTOMAS_FERR 
(
  FK_SINTOMAS                  SMALLINT         NOT NULL,
  FK_FERRAMENTAS                INTEGER         NOT NULL,
  FK_SINTOMAS_FERR              INTEGER         NOT NULL,
  QUANTIDADE                    INTEGER         DEFAULT 1 NOT NULL,
 CONSTRAINT MAN_SINTOMAS_FERR_INDEX01 PRIMARY KEY (FK_SINTOMAS, FK_FERRAMENTAS, FK_SINTOMAS_FERR)
);
CREATE TABLE MAN_SINTOMAS_FUNCAO 
(
  PK_SINTOMAS_FUNCAO             SMALLINT         NOT NULL,
  FK_SINTOMAS                    SMALLINT         NOT NULL,
  FK_FUNCAO                      SMALLINT,
 CONSTRAINT PK_MAN_SINTOMAS_FUNCAO PRIMARY KEY (FK_SINTOMAS, PK_SINTOMAS_FUNCAO)
);
CREATE TABLE MAN_SINTOMAS_INTERV 
(
  PK_SINTOMA_INTERV              INTEGER         NOT NULL,
  FK_SINTOMAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_INTERVENCAO                 INTEGER         DEFAULT 1 NOT NULL,
 PRIMARY KEY (PK_SINTOMA_INTERV)
);
CREATE TABLE MAN_SINTOMAS_MATERIAL 
(
  PK_SINTOMA_MATERIAL              INTEGER         NOT NULL,
  FK_SINTOMAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_EMBALAGEM                     INTEGER,
  FK_UNIDADES                     SMALLINT         DEFAULT 6,
  FK_FAMILIAS                     SMALLINT         DEFAULT 1,
  QUANTIDADE                       INTEGER,
  FK_MATERIAL                     SMALLINT,
 PRIMARY KEY (PK_SINTOMA_MATERIAL)
);
CREATE TABLE MAN_SINTOMAS_N 
(
  PK_SINTOMAS             SMALLINT         NOT NULL,
  DESCRICAO                VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  PESO                    SMALLINT         DEFAULT 1,
  IMPRIME_OS                  CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  AFETA_PROD                  CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  TEMPO_SOLU                  TIME,
  FK_AREAEXEC             SMALLINT         DEFAULT 1,
  MSG_OS                   VARCHAR(   100)  COLLATE ISO8859_1,
  RESPONSAVEL              VARCHAR(    10)  COLLATE ISO8859_1,
  FK_TIPO_OS              SMALLINT         DEFAULT 1,
  FK_EQUIPES              SMALLINT,
 CONSTRAINT PK_MAN_SINTOMAS_N_1 PRIMARY KEY (PK_SINTOMAS)
);
update rdb$relation_fields set rdb$description = 'TEMPO MEDIO DE RESOLUÇÃO DO PROBLEMA' where rdb$relation_name = 'MAN_SINTOMAS_N' and rdb$field_name = 'TEMPO_SOLU';
update rdb$relation_fields set rdb$description = 'AREA EXECUTANTE RESPONSAVEL PARA SANAR O SINTOMA
' where rdb$relation_name = 'MAN_SINTOMAS_N' and rdb$field_name = 'FK_AREAEXEC';
update rdb$relation_fields set rdb$description = 'EQUIPE SUGERIDA PARA SANAR O PROBLEMA
' where rdb$relation_name = 'MAN_SINTOMAS_N' and rdb$field_name = 'FK_EQUIPES';
CREATE TABLE MAN_SINTOMAS_NORMAS 
(
  FK_SINT_NORMAS             SMALLINT         NOT NULL,
  FK_SINTOMAS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_NORMAS                  SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_MAN_SINTOMAS_NORMAS PRIMARY KEY (FK_SINT_NORMAS)
);
CREATE TABLE MAN_SINTOMAS_PECAS 
(
  PK_SINTOMA_PECAS              INTEGER         NOT NULL,
  FK_SINTOMAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_EMBALAGEM                  INTEGER,
  FK_UNIDADES                  SMALLINT         DEFAULT 6,
  FK_FAMILIAS                  SMALLINT         DEFAULT 1,
  QUANTIDADE                    INTEGER,
  FK_PECAS                     SMALLINT,
 PRIMARY KEY (PK_SINTOMA_PECAS)
);
CREATE TABLE MAN_SINTOMA_DETALHAMENTO 
(
  FK_SINTOMAS             SMALLINT         DEFAULT 1 NOT NULL,
  INDICE                   INTEGER         NOT NULL,
  ORDEM                    INTEGER,
  DESCRICAO                VARCHAR(   100)  COLLATE ISO8859_1,
  TEMPO                       TIME,
  TEMPOREAL                   TIME,
  FK_AREAEXEC             SMALLINT,
 CONSTRAINT PK_MAN_SINTOMA_DETALHAMENTO PRIMARY KEY (FK_SINTOMAS, INDICE)
);
CREATE TABLE MAN_SITUACAO 
(
  PK_SITUACAO             SMALLINT         NOT NULL,
  DESCRICAO                VARCHAR(    20) NOT NULL COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_SITUACAO PRIMARY KEY (PK_SITUACAO)
);
CREATE TABLE MAN_SOLICIT_SERVICO 
(
  OS_CODIGO                 FLOAT,
  OS_DESCRIC              VARCHAR(   140)  COLLATE ISO8859_1,
  OS_SOLICIT              VARCHAR(    50)  COLLATE ISO8859_1,
  OS_DATAEMI                 DATE,
  OS_HORAEMI              VARCHAR(     5)  COLLATE ISO8859_1,
  OS_DATAABE                 DATE,
  OS_HORAABE              VARCHAR(     5)  COLLATE ISO8859_1,
  OS_DATATER                 DATE,
  OS_HORATER              VARCHAR(     5)  COLLATE ISO8859_1,
  OS_DATAEQU                 DATE,
  OS_HORAEQU              VARCHAR(     5)  COLLATE ISO8859_1,
  OS_AFETAPR                FLOAT,
  OS_OBSERVA              VARCHAR(   140)  COLLATE ISO8859_1,
  OS_TEMPOES                FLOAT,
  OS_DATACON                 DATE,
  OS_DATADIG                 DATE,
  OS_INIREAL                 DATE,
  EQUI_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  ESTRUT_OVE                FLOAT,
  ESTRUT_COD              VARCHAR(    10)  COLLATE ISO8859_1,
  CC_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  DEP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  SET_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  PROC_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  GRP_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  PRI_CODIGO             SMALLINT,
  SINT_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  DEF_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  CAU_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  SOL_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  AREA_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  TIP_OS_COD              VARCHAR(    10)  COLLATE ISO8859_1,
  SIT_OS_COD              VARCHAR(    10)  COLLATE ISO8859_1,
  OSR_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  OS_CON_LIB              VARCHAR(    40)  COLLATE ISO8859_1,
  OS_CONCLUI                 CHAR(     1)  COLLATE ISO8859_1,
  OS_TEMPORE                FLOAT,
  OS_HORASFA              VARCHAR(    50)  COLLATE ISO8859_1,
  TAG_CODIGO              VARCHAR(    25)  COLLATE ISO8859_1,
  PREV_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  MAQ_CODIGO              VARCHAR(    15)  COLLATE ISO8859_1,
  RES_ABERTU              VARCHAR(    30)  COLLATE ISO8859_1,
  RES_CONCLU              VARCHAR(    30)  COLLATE ISO8859_1,
  OS_DATAIMP                 DATE,
  OS_HORAIMP              VARCHAR(     8)  COLLATE ISO8859_1,
  PRED_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  SERV_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  MAL_CODIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  CALE_CERTI              VARCHAR(    20)  COLLATE ISO8859_1,
  PROD_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  EQUI_PATRI              VARCHAR(    20)  COLLATE ISO8859_1,
  EQUIPE_COD              VARCHAR(    10)  COLLATE ISO8859_1,
  IMAGEM                  VARCHAR(   254)  COLLATE ISO8859_1,
  IMAGEM_CON              VARCHAR(   254)  COLLATE ISO8859_1,
  OS_ANEXO                VARCHAR(   254)  COLLATE ISO8859_1,
  OS_MAQPARA                FLOAT,
  OS_AVALIAC             SMALLINT
);
CREATE TABLE MAN_SOLUCAO 
(
  PK_SOLUCAO             SMALLINT         NOT NULL,
  DESCRICAO               VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_SOLUCAO)
);
CREATE TABLE MAN_SS 
(
  PK_MAN_SS                         INTEGER         NOT NULL,
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAGS                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_EQUIPAMENTOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_SINTOMAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_OS                             INTEGER,
  OBSERVACAO                        VARCHAR(   500)  COLLATE ISO8859_1,
  DATAEMISSAO                     TIMESTAMP,
  FK_SOLICITANTE                   SMALLINT         DEFAULT 1 NOT NULL,
  APROVADO                             CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FK_SERVICOS                      SMALLINT         DEFAULT 1 NOT NULL,
  AFETA_PROD                           CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  FK_TIPO_OS                       SMALLINT         DEFAULT 1 NOT NULL,
  MOTIVO                            VARCHAR(   350)  COLLATE ISO8859_1,
  FK_AREAEXEC                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_PENDENCIAS                    SMALLINT         DEFAULT 1 NOT NULL,
  ATUALIZADO                           CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  DATA_EQU_DISP                   TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  VISUALIZADO_ALERTA                   CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  PRI_APROVACAO                    SMALLINT         DEFAULT 1,
  FK_PRIORIDADES                   SMALLINT         DEFAULT 1,
  DESCRICAO                         VARCHAR(   100)  COLLATE ISO8859_1,
  RETRABALHO                           CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  USER_INC                          VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  USER_ALT                          VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  COMPUTADOR_INC                    VARCHAR(    20)  COLLATE ISO8859_1,
  COMPUTADOR_ALT                    VARCHAR(    20)  COLLATE ISO8859_1,
  FK_APROVADOR                      VARCHAR(    10)  COLLATE ISO8859_1,
  DATA_APROVACAO                  TIMESTAMP,
  COMPUTADOR_APROVADOR              VARCHAR(    20)  COLLATE ISO8859_1,
  FK_AVALIADOR                     SMALLINT,
  DATA_AVALIACAO                  TIMESTAMP,
 CONSTRAINT MAN_SS_INDEX01 PRIMARY KEY (PK_MAN_SS)
);
CREATE TABLE MAN_SS_IMAGEM 
(
  DATA_ABERTURA                 DATE         NOT NULL,
  HORA_ABERTURA                 TIME         NOT NULL,
  VISUALIZADA                   CHAR(     1) NOT NULL COLLATE ISO8859_1,
  SITUACAO                      CHAR(     1) NOT NULL COLLATE ISO8859_1,
  CAMINHO                    VARCHAR(   250) NOT NULL COLLATE ISO8859_1
);
update rdb$relation_fields set rdb$description = '"S" ou "N"' where rdb$relation_name = 'MAN_SS_IMAGEM' and rdb$field_name = 'VISUALIZADA';
update rdb$relation_fields set rdb$description = '"P" = Pendente
"C" = Concluida
"L" = Cancelada' where rdb$relation_name = 'MAN_SS_IMAGEM' and rdb$field_name = 'SITUACAO';
CREATE TABLE MAN_SS_ITENS 
(
  ITEM_CODIG                VARCHAR(    15)  COLLATE ISO8859_1,
  GRP_CODIGO                VARCHAR(    25)  COLLATE ISO8859_1,
  DESCRICAO                 VARCHAR(    50)  COLLATE ISO8859_1,
  CAMPO                     VARCHAR(    50)  COLLATE ISO8859_1,
  MINIMO                      FLOAT,
  MAXIMO                      FLOAT,
  PADRAO                      FLOAT,
  ANTECEDENCIA                FLOAT
);
CREATE TABLE MAN_SS_MEDICAO_ITENS 
(
  CODIGO                          INTEGER,
  CODIGO_FICHA_ITENS              INTEGER,
  DATA                               DATE,
  SS_CODIGO                       VARCHAR(    15)  COLLATE ISO8859_1
);
CREATE TABLE MAN_SS_PENDENCIAS 
(
  ID                      INTEGER         NOT NULL,
  SS_CODIGO               NUMERIC( 15, 0),
  PEND_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_SS_PENDENCIAS_1 PRIMARY KEY (ID)
);
CREATE TABLE MAN_SS_PILHA 
(
  SS_CODIGO              NUMERIC( 15, 0)
);
CREATE TABLE MAN_TIPOS_PARADAS_SETOR 
(
  TIPO_PARADA_COD              VARCHAR(    25)  COLLATE ISO8859_1,
  SET_CODIGO                   VARCHAR(    25)  COLLATE ISO8859_1,
  DESCRICAO                    VARCHAR(   100)  COLLATE ISO8859_1
);
CREATE TABLE MAN_TIPO_OS 
(
  TIP_OS_COD               VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  TIP_OS_DES               VARCHAR(    50)  COLLATE ISO8859_1,
  PESO                       FLOAT,
  SISTEMATICA                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_TIPO_OS_1 PRIMARY KEY (TIP_OS_COD)
);
CREATE TABLE MAN_TIPO_PARADA 
(
  ID                     INTEGER         NOT NULL,
  TIPO_COD               VARCHAR(    20)  COLLATE ISO8859_1,
  TIPO_DESC              VARCHAR(   100)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAN_TIPO_PARADA_1 PRIMARY KEY (ID)
);
CREATE TABLE MAN_VERIFICA_ITENS 
(
  ITEM_CODIG                  VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  ITEM_DESCR                  VARCHAR(   240)  COLLATE ISO8859_1,
  ITEM_MIN                      FLOAT,
  ITEM_PADRAO                   FLOAT,
  ITEM_MAX                      FLOAT,
  ITEM_UNID                   VARCHAR(    10)  COLLATE ISO8859_1,
  EXIBIR_VALORES                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  ITEM_MTTR                     FLOAT         DEFAULT 0
);
CREATE TABLE MAQUINAS 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                        SMALLINT         DEFAULT 1 NOT NULL,
  PK_MAQUINAS                       SMALLINT         NOT NULL,
  DESCRICAO                          VARCHAR(   100)  COLLATE ISO8859_1,
  DESCRICAODETALHADA                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FK_FAMILIAS                       SMALLINT         DEFAULT 1,
  SITUACAO                              CHAR(     1)  COLLATE ISO8859_1,
  FK_IMAGENS                        SMALLINT,
  FK_CENTROCUSTOS                    VARCHAR(    10)  COLLATE ISO8859_1,
  PESO                              SMALLINT,
  CUSTOMANUTENCAO                    DECIMAL( 12, 2),
  FATURAMENTO                        DECIMAL( 12, 2),
  TEMPOMAQUINAPARADA                    TIME,
  VALORCRITICIDADE                  SMALLINT,
  TOTALMAQUINAPARADA                    TIME,
  CUSTOTOTALMANUTENCAO               DECIMAL( 12, 2),
  TOTALFATURAMENTO                   DECIMAL( 12, 2),
  DATAHORAMAQDISPONIVEL            TIMESTAMP,
  PESOPRODUCAO                      SMALLINT,
  FK_PRIORIDADE                     SMALLINT         DEFAULT 1 NOT NULL,
  TEMPO_MAXIMO_PARADA                INTEGER,
  MTBF                               INTEGER,
  DATA                             TIMESTAMP,
  FK_PATRIMONIO                     SMALLINT         DEFAULT 1,
  MAQ_ATIVA                     FLAG_SIM_NAO ,
  ACUM_PARA                          INTEGER         DEFAULT 0,
  CODIGOANTIGO                       VARCHAR(    10)  COLLATE ISO8859_1,
  TIPOMAQUINAS                          CHAR(     1)  COLLATE ISO8859_1,
  CRIAREQUIPPREDIAL                     CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAQUINAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, PK_MAQUINAS)
);
update rdb$relation_fields set rdb$description = 'TIPO DE MAQUINAS - SE EH UM EQUIPAMENTO/MAQUINA OU SE UMA LOCALIZAÃ‡AO PREDIAL
I=INDUSTRIAL
P=PREDIAL
O=OUTROS
PADRAO = INDUSTRIAL
' where rdb$relation_name = 'MAQUINAS' and rdb$field_name = 'TIPOMAQUINAS';
update rdb$relation_fields set rdb$description = 'pERGUNTE SE QUER CRIAR OS LANCAMENTOS DE tags PREDIAL
se o campo TIPOMAQUINAS = ''P'' e o este campo estiver = ''S''
entao fazer os lancamentos na tabela de tags
' where rdb$relation_name = 'MAQUINAS' and rdb$field_name = 'CRIAREQUIPPREDIAL';
CREATE TABLE MAQUINAS_ANEXOS 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_MAQUINAS_ANEXOS             SMALLINT         NOT NULL,
  FK_ANEXOS                      SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_MAQUINAS_ANEXOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, PK_MAQUINAS_ANEXOS)
);
CREATE TABLE MAQUINAS_CARACTERISTICAS 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FAMILIAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_INTERVENCAO                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_SINTOMAS                       SMALLINT         DEFAULT 1 NOT NULL,
  CONTROLE                          SMALLINT,
  ORDEM                             SMALLINT,
  DESCRICAO                          VARCHAR(    70)  COLLATE ISO8859_1,
  PK_MAQ_CARACTERISTICA             SMALLINT         NOT NULL,
 CONSTRAINT PK_MAQUINAS_CARACTERISTICAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, PK_MAQ_CARACTERISTICA)
);
CREATE TABLE MAQUINAS_CODIGO 
(
  PK_MAQUINAS              SMALLINT         NOT NULL,
  CODIGOANTIGO              VARCHAR(    10)  COLLATE ISO8859_1,
  DESCRICAO                 VARCHAR(   100)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAQUINAS_CODIGO PRIMARY KEY (PK_MAQUINAS)
);
CREATE TABLE MAQUINAS_FUNCAO 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                  SMALLINT         DEFAULT 1 NOT NULL,
  PK_MAQ_FUNCAO                SMALLINT         NOT NULL,
  FK_FUNCAO                    SMALLINT         DEFAULT 1 NOT NULL
);
CREATE TABLE MAQUINAS_FUNCIONARIOS 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                     SMALLINT         DEFAULT 1 NOT NULL,
  PK_MAQ_FUNCIONARIOS             SMALLINT         NOT NULL,
  FK_FUNCIONARIOS                 SMALLINT         DEFAULT 1 NOT NULL
);
CREATE TABLE MAQUINAS_HITORICOS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                   SMALLINT         DEFAULT 1 NOT NULL,
  MAQ_HISTO                         BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  USER_INC                       VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  USER_ALT                       VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                     TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                     TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  COMPUTADOR_INC                 VARCHAR(    20)  COLLATE ISO8859_1,
  COMPUTADOR_ALT                 VARCHAR(    20)  COLLATE ISO8859_1,
  PK_MAQ_HISTORICOS             SMALLINT         NOT NULL,
 CONSTRAINT PK_MAQUINAS_HITORICOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, PK_MAQ_HISTORICOS)
);
CREATE TABLE MAQUINAS_IMAGENS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                  SMALLINT         DEFAULT 1 NOT NULL,
  PK_MAQ_IMAGENS               SMALLINT         NOT NULL,
  FK_IMAGENS                   SMALLINT         DEFAULT 1 NOT NULL,
  CAMINHOIMAGEM                 VARCHAR(   254)  COLLATE ISO8859_1,
  DESCRICAO                     VARCHAR(   250)  COLLATE ISO8859_1,
 CONSTRAINT PK_MAQUINAS_IMAGENS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_MAQUINAS, PK_MAQ_IMAGENS)
);
CREATE TABLE MAQUINAS_PECAS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                   SMALLINT         DEFAULT 1 NOT NULL,
  PK_MAQUINAS_PECAS              INTEGER         DEFAULT 1 NOT NULL,
  FK_PECAS                      SMALLINT         DEFAULT 1,
  FK_UNIDADES                   SMALLINT         DEFAULT 6,
  QUANTIDADES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                    SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_MAQUINAS_PECAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_MAQUINAS, PK_MAQUINAS_PECAS, FK_CELULAS)
);
CREATE TABLE MAQUINAS_SINTOMAS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                  SMALLINT         DEFAULT 1 NOT NULL,
  PK_MAQ_SINTOMAS              SMALLINT         NOT NULL,
  FK_SINTOMAS                  SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_MAQUINAS_SINTOMAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_MAQUINAS, PK_MAQ_SINTOMAS)
);
CREATE TABLE MATERIALTESTE 
(
  CODIGO                   VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  DESCRICAO                VARCHAR(   100)  COLLATE ISO8859_1,
  FORNECEDOR               VARCHAR(   100)  COLLATE ISO8859_1,
  CUSTOMEDIO               VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  PRECO                    VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  UNIDADE                  VARCHAR(    10)  COLLATE ISO8859_1,
  SALDO                    VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  ULTIMOCUSTO              VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FK_PRODUTOS             SMALLINT,
 CONSTRAINT PK_MATERIALTESTE PRIMARY KEY (CODIGO)
);
CREATE TABLE MAT_CONFIGURACAO 
(
  FK_EMPRESAS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                         SMALLINT         DEFAULT 1 NOT NULL,
  PODETERESTOQUENEGATIVO         FLAG_SIM_NAO DEFAULT 'N'
);
CREATE TABLE MAT_COTACAOCOMPRA 
(
  FK_EMPRESAS                VALORI DEFAULT 1 NOT NULL,
  PK_FILIAL                SMALLINT         DEFAULT 1 NOT NULL,
  PK_COTACOES                VALORI NOT NULL,
  DESCRICAO          DESCRICAO_30RQ NOT NULL,
  DATACOTACAO              DATA_DEF DEFAULT CURRENT_DATE NOT NULL,
  DATAVALIDADE                 DATA NOT NULL,
  USER_INC        NOME_OPERADOR_DEF DEFAULT USER,
  DATA_INC            DATA_HORA_DEF DEFAULT CURRENT_TIMESTAMP,
  USER_ALT            NOME_OPERADOR DEFAULT USER,
  DATA_ALT                DATA_HORA DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_MAT_COTACAOCOMPRA_1 PRIMARY KEY (FK_EMPRESAS, PK_FILIAL, PK_COTACOES)
);
CREATE TABLE MAT_COTACAOCOMPRAFORN 
(
  FK_EMPRESAS                  VALORI NOT NULL,
  FK_COTACOES                  VALORI NOT NULL,
  FK_PRODUTOS                  VALORI NOT NULL,
  FK_FORNECEDOR                VALORI NOT NULL,
  CUSTOTABELA      NUMERO_PEQUENO_4CD ,
  VALORACORDADO    NUMERO_PEQUENO_4CD ,
  CUSTOLIQUIDO     NUMERO_PEQUENO_4CD ,
  FLAG_SELECIONA         FLAG_SIM_NAO DEFAULT 'N',
  USER_INC          NOME_OPERADOR_DEF DEFAULT USER,
  DATA_INC              DATA_HORA_DEF DEFAULT CURRENT_TIMESTAMP,
  USER_ALT              NOME_OPERADOR DEFAULT USER,
  DATA_ALT                  DATA_HORA DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_MAT_COTACAOCOMPRAFORN_1 PRIMARY KEY (FK_EMPRESAS, FK_COTACOES, FK_PRODUTOS, FK_FORNECEDOR)
);
CREATE TABLE MAT_COTACAOCOMPRAPROD 
(
  FK_EMPRESAS                   VALORI DEFAULT 1 NOT NULL,
  FILIAL                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_COTACOES                   VALORI NOT NULL,
  FK_PRODUTOS                   VALORI NOT NULL,
  FK_EMBALAGEM                 INTEGER         NOT NULL,
  QUANTPEDIDO       NUMERO_PEQUENO_4CD NOT NULL,
  USER_INC           NOME_OPERADOR_DEF DEFAULT USER,
  DATA_INC               DATA_HORA_DEF DEFAULT CURRENT_TIMESTAMP,
  USER_ALT               NOME_OPERADOR DEFAULT USER,
  DATA_ALT                   DATA_HORA DEFAULT CURRENT_TIMESTAMP,
  CUSTOMEDIO                  NUMERICO ,
  CUSTOREAL                   NUMERICO ,
  CUSTOFINAL                  NUMERICO ,
  CUSTOIMPOSTOS               NUMERICO ,
  CUSTOFORNECEDOR             NUMERICO ,
 CONSTRAINT PK_MAT_COTACAOCOMPRAPROD_1 PRIMARY KEY (FK_EMPRESAS, FILIAL, FK_COTACOES, FK_PRODUTOS)
);
CREATE TABLE MAT_HIST_MOV_ESTOQUE 
(
  PC_CODIGO                   VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  DATA                           DATE,
  SALDO_ANTERIOR              NUMERIC( 15, 2),
  SALDO_ATUAL                 NUMERIC( 15, 2),
  TIPO                           CHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE MAT_LOTE_CONT 
(
  COD_EMPRES                 CHAR(     2)  COLLATE ISO8859_1,
  NUM_LOTE               SMALLINT,
  COD_SISTEM                 CHAR(     3)  COLLATE ISO8859_1,
  DAT_REFER                  DATE,
  NUM_CONTA               VARCHAR(    23)  COLLATE ISO8859_1,
  IES_TIP_LA                 CHAR(     1)  COLLATE ISO8859_1,
  DAT_MOVTO                  DATE,
  VAL_LANC                  FLOAT,
  COD_RASTEI             SMALLINT,
  COD_HIST               SMALLINT,
  TEXT_COMPL              VARCHAR(    50)  COLLATE ISO8859_1,
  IES_SIT_LA                 CHAR(     1)  COLLATE ISO8859_1,
  COD_LIN_PR             SMALLINT,
  COD_LIN_RE             SMALLINT,
  COD_SEG_ME             SMALLINT,
  COD_CLA_US             SMALLINT
);
CREATE TABLE MAT_LUBRIFICANTES 
(
  LUB_DESCRI              VARCHAR(    50)  COLLATE ISO8859_1,
  LUB_NOME                VARCHAR(    30)  COLLATE ISO8859_1,
  LUB_FABRIC              VARCHAR(    20)  COLLATE ISO8859_1,
  LUB_UNIDAD                 CHAR(     2)  COLLATE ISO8859_1,
  LUB_APLICA              VARCHAR(    10)  COLLATE ISO8859_1,
  LUB_CUSTOU                FLOAT,
  LUB_CLASIS              VARCHAR(    15)  COLLATE ISO8859_1,
  LUB_CLASNL              VARCHAR(    15)  COLLATE ISO8859_1,
  LUB_TIPO                VARCHAR(    15)  COLLATE ISO8859_1,
  LUB_CODIGO              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  LUB_QTDE                  FLOAT,
 CONSTRAINT PK_MAT_LUBRIFICANTES_1 PRIMARY KEY (LUB_CODIGO)
);
CREATE TABLE MAT_VEICITEM 
(
  CODVEICITEM                INTEGER,
  DESCRICAO                  VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  UNIDADEMEDIDA              VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CUSTOUNITARIO              NUMERIC( 15, 2),
  TIPOITEM                   VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  ESTOQUEATUAL               INTEGER,
  ESTDISPONIVEL              INTEGER
);
CREATE TABLE MENSAGENS 
(
  CD_MENSAGE              INTEGER         NOT NULL,
  INDICE                 SMALLINT,
  DS_MENSAGE              VARCHAR(   254)  COLLATE ISO8859_1,
  TITULO                  VARCHAR(    30)  COLLATE ISO8859_1,
  ARQ_AUDIO               VARCHAR(   255)  COLLATE ISO8859_1,
 CONSTRAINT PK_MENSAGENS_1 PRIMARY KEY (CD_MENSAGE)
);
CREATE TABLE MOTORISTAS 
(
  ID                                INTEGER         NOT NULL,
  CODIGO                            INTEGER         NOT NULL,
  EMPRESA                           INTEGER,
  NOME                              VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  COMISSAO                          NUMERIC( 15, 3),
  ENDERECO                          VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  BAIRRO                            VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  CIDADE                            VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  UF                                   CHAR(     2) CHARACTER SET WIN1252  COLLATE WIN1252,
  CEP                               VARCHAR(    10) CHARACTER SET WIN1252  COLLATE WIN1252,
  CPF                               VARCHAR(    11) CHARACTER SET WIN1252  COLLATE WIN1252,
  RG                                VARCHAR(    15) CHARACTER SET WIN1252  COLLATE WIN1252,
  CHN                               VARCHAR(    25) CHARACTER SET WIN1252  COLLATE WIN1252,
  NIVEL                             VARCHAR(     5) CHARACTER SET WIN1252  COLLATE WIN1252,
  INSS                              VARCHAR(    25) CHARACTER SET WIN1252  COLLATE WIN1252,
  FONE1                             VARCHAR(    25) CHARACTER SET WIN1252  COLLATE WIN1252,
  CEL                               VARCHAR(    25) CHARACTER SET WIN1252  COLLATE WIN1252,
  CODFOR                            INTEGER,
  VCTO_CHN                             DATE,
  NASCIMENTO                           DATE,
  REGISTRO_CNH                      VARCHAR(    30) CHARACTER SET WIN1252  COLLATE WIN1252,
  CIDADES_GERAL_ID                  INTEGER,
  UF_RG                                CHAR(     2) CHARACTER SET WIN1252  COLLATE WIN1252,
  EMISSAO_RG                           DATE,
  NOME_PAI                          VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  NOME_MAE                          VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  FONE2                             VARCHAR(    25) CHARACTER SET WIN1252  COLLATE WIN1252,
  CONTATO                           VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  TEL_REF1                          VARCHAR(    25) CHARACTER SET WIN1252  COLLATE WIN1252,
  TEL_REF2                          VARCHAR(    25) CHARACTER SET WIN1252  COLLATE WIN1252,
  CONTATO_REF1                      VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  CONTATO_REF2                      VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  CIDADE_NASCIMENTO                 VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  UF_NASCIMENTO                        CHAR(     2) CHARACTER SET WIN1252  COLLATE WIN1252,
  CIDADE_NASCIMENTO_ID              INTEGER,
  ORGAO_EXPEDIDOR                   VARCHAR(    30) CHARACTER SET WIN1252  COLLATE WIN1252,
  OBS_SEGURO                        VARCHAR(   300) CHARACTER SET WIN1252  COLLATE WIN1252,
  OBS                               VARCHAR(   300) CHARACTER SET WIN1252  COLLATE WIN1252,
  NUM_DEPENDENTES                   INTEGER,
  SITUACAO                             CHAR(     1) CHARACTER SET WIN1252 DEFAULT 'A' COLLATE WIN1252,
  COD_IBGE_NASCIMENTO               INTEGER,
  COD_IBGE                          INTEGER,
  FK_FUNCIONARIOS                  SMALLINT,
  TERCEIRIZADO                 FLAG_SIM_NAO DEFAULT 'N',
  FK_FORN_TERCEIRIZADO             SMALLINT,
 CONSTRAINT PK_MOTORISTAS_1 PRIMARY KEY (ID)
);
update rdb$relation_fields set rdb$description = 'SE O MOTORISA FOR TERCEIRIZADO, INFORMAR AQUI O CODIGO DO FORNECEDOR / TRANSPORTADORA' where rdb$relation_name = 'MOTORISTAS' and rdb$field_name = 'FK_FORN_TERCEIRIZADO';
CREATE TABLE MUNICIPIOS 
(
  COD_DISTRITO_MUN               VARCHAR(     9) NOT NULL COLLATE ISO8859_1,
  NOME_DISTRITO_MUN              VARCHAR(    50)  COLLATE ISO8859_1,
  CODIGO_MUN                     VARCHAR(     7)  COLLATE ISO8859_1,
  NOME_MUN                       VARCHAR(    50)  COLLATE ISO8859_1,
  CODIGO_MESO_NUM                VARCHAR(     4)  COLLATE ISO8859_1,
  NOME_MESO_MUN                  VARCHAR(    50)  COLLATE ISO8859_1,
  CODIGO_MICRO_MUN               VARCHAR(     5)  COLLATE ISO8859_1,
  NOME_MICRO_MUN                 VARCHAR(    50)  COLLATE ISO8859_1,
  CODIGO_UF_MUN                     CHAR(     2)  COLLATE ISO8859_1,
  NOME_UF_MUN                    VARCHAR(    50)  COLLATE ISO8859_1,
  PATH_FOTO_MUN                  VARCHAR(    50)  COLLATE ISO8859_1,
 PRIMARY KEY (COD_DISTRITO_MUN)
);
CREATE TABLE NATUREZAJURIDICA 
(
  CD_NJ              VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  NM_NJ              VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE NC_ETAPASPASSOS 
(
  FK_EMPRESAS              SMALLINT         NOT NULL,
  FK_FILIAIS               SMALLINT         NOT NULL,
  PK_NC_ETAPAS             SMALLINT         NOT NULL,
  DESCRICAO                 VARCHAR(   100)  COLLATE ISO8859_1,
 CONSTRAINT PK_NC_ETAPASPASSOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_NC_ETAPAS)
);
update rdb$relation_fields set rdb$description = '
' where rdb$relation_name = 'NC_ETAPASPASSOS' and rdb$field_name = 'FK_FILIAIS';
update rdb$relation_fields set rdb$description = 'AA - Aprova Avaliacao da Acao
AP - Acao Preventiva
CO - Acao Corretiva
' where rdb$relation_name = 'NC_ETAPASPASSOS' and rdb$field_name = 'PK_NC_ETAPAS';
update rdb$relation_fields set rdb$description = 'DI - Acao de Disposicao
' where rdb$relation_name = 'NC_ETAPASPASSOS' and rdb$field_name = 'DESCRICAO';
CREATE TABLE NC_TABELACAUSAS 
(
  FK_EMPRESAS                 SMALLINT         NOT NULL,
  FK_FILIAIS                  SMALLINT         NOT NULL,
  TIPOTABELA                      CHAR(     1) DEFAULT '1' NOT NULL COLLATE ISO8859_1,
  PK_CODIGOCAUSAS             SMALLINT         NOT NULL,
  DESCRICAO                    VARCHAR(   100)  COLLATE ISO8859_1,
 CONSTRAINT PK_NC_TABELACAUSAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, TIPOTABELA, PK_CODIGOCAUSAS)
);
update rdb$relation_fields set rdb$description = '2 - Efeitos Causados: classifica os efeitos produzidos pela 
nao-conformidade encontrada, como por exemplo: 
nao encaixe do desenho' where rdb$relation_name = 'NC_TABELACAUSAS' and rdb$field_name = 'FK_FILIAIS';
update rdb$relation_fields set rdb$description = '1 - Possiveis Causas: classifica os motivos da nao-conformidade encontrada, como por exemplo: diametro maior que o especificado

' where rdb$relation_name = 'NC_TABELACAUSAS' and rdb$field_name = 'TIPOTABELA';
update rdb$relation_fields set rdb$description = '3 - Origem da Nao-Conformidade: define a origem do problema encontrado, como por exemplo: erro na especificacao do desenho.
' where rdb$relation_name = 'NC_TABELACAUSAS' and rdb$field_name = 'PK_CODIGOCAUSAS';
update rdb$relation_fields set rdb$description = '4 - Categoria do Problema: classifica o tipo do problema; ou seja, a categoria da nao-conformidade, como por exemplo: grave, muito grave ou gravissimo.' where rdb$relation_name = 'NC_TABELACAUSAS' and rdb$field_name = 'DESCRICAO';
CREATE TABLE NORMAS 
(
  NORMA_CODI              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  NORMA_DESC              VARCHAR(    60)  COLLATE ISO8859_1,
 CONSTRAINT PK_NORMAS_1 PRIMARY KEY (NORMA_CODI)
);
CREATE TABLE PAISES 
(
  PK_PAISES                    VALORI NOT NULL,
  NOMEPAIS             DESCRICAO_50RQ NOT NULL,
  OPE_INC           NOME_OPERADOR_DEF ,
  DTHR_INC              DATA_HORA_DEF ,
  OPE_ALT               NOME_OPERADOR ,
  DTHR_ALT                  DATA_HORA ,
  FK_TIPO_MOEDAS               VALORS ,
  NAC_PAIS             DESCRICAO_50RQ ,
  FLAG_ACM               FLAG_SIM_NAO ,
  BANDEIRA                       BLOB SUB_TYPE 1 SEGMENT SIZE 16384 CHARACTER SET NONE,
  ISO                            CHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  ISO3                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  NUMCODE                    SMALLINT,
 CONSTRAINT PK_PAISES_1 PRIMARY KEY (PK_PAISES)
);
CREATE TABLE PATMOVIMENTO 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAL                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_MOVIMENTO                     INTEGER         NOT NULL,
  DATAMOVIMENTO                  TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  EMITIRDOCFISCAL                     CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  FK_EMPRESAORIGEM                SMALLINT,
  FK_FILIALORIGEM                 SMALLINT,
  FK_CCUSTOORIGEM                  INTEGER,
  FK_DEPTOORIGEM                   INTEGER,
  FK_SETORORIGEM                   INTEGER,
  FK_SECAOORIGEM                   INTEGER,
  FK_FORNORIGEM                    INTEGER,
  FK_EMPRESADESTINO               SMALLINT         DEFAULT 1,
  FK_FILIALDESTINO                SMALLINT         DEFAULT 1,
  FK_CCUSTODESTINO                 INTEGER         DEFAULT 1,
  FK_DEPTODESTINO                  INTEGER         DEFAULT 1,
  FK_SETORDESTINO                  INTEGER         DEFAULT 1,
  FK_SECAODESTINO                  INTEGER         DEFAULT 1,
  OBSERVACAO                          BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  USER_CAD                         VARCHAR(    10) CHARACTER SET NONE DEFAULT USER COLLATE NONE,
  USER_ALT                         VARCHAR(    10) CHARACTER SET NONE DEFAULT USER COLLATE NONE,
  DATA_CAD                       TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                       TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  FK_FORNDESTINO                   INTEGER         DEFAULT 1 NOT NULL,
  FK_PATRIMONIO                    INTEGER         DEFAULT 1 NOT NULL,
  FK_PRODUTOS                      INTEGER         DEFAULT 1 NOT NULL,
  FK_MOTIVOMOVIMENTO              SMALLINT         DEFAULT 1 NOT NULL,
  FK_ESCOPOMOVIMENTO                  CHAR(     1) DEFAULT 'I' COLLATE ISO8859_1,
  FK_SENTIDOMOVIMENTO                 CHAR(     1) DEFAULT 'E' NOT NULL COLLATE ISO8859_1,
  FK_TIPO_DOCUMENTO               SMALLINT         DEFAULT 1 NOT NULL,
  FK_DOCUMENTO                     VARCHAR(    10)  COLLATE ISO8859_1,
  SAIDA_DATA                     TIMESTAMP,
  ENTRADA_DATA                   TIMESTAMP,
 CONSTRAINT PK_PATMOVIMENTO PRIMARY KEY (PK_MOVIMENTO)
);
update rdb$relation_fields set rdb$description = 'SE A MOVIMENTACAO SERÁ NECESSARIO QUE SE EMITA DOCUMENTO FISCAL
' where rdb$relation_name = 'PATMOVIMENTO' and rdb$field_name = 'EMITIRDOCFISCAL';
update rdb$relation_fields set rdb$description = 'CODIGO DO PRODUTO NA TABELA ''PRODUTOS'' 
' where rdb$relation_name = 'PATMOVIMENTO' and rdb$field_name = 'FK_PRODUTOS';
update rdb$relation_fields set rdb$description = 'DESCREVE O MOTIVO (TIPO DE MOVIMENTO)
PODE SER DE ACORDO COM A TABELA TIPO_MOV_PATRIMONIO
1 = AQUISIÇÃO
2 = ETC...' where rdb$relation_name = 'PATMOVIMENTO' and rdb$field_name = 'FK_MOTIVOMOVIMENTO';
update rdb$relation_fields set rdb$description = 'ESCOPO DO MOVIMENTO
SE EH 
INTERNO 
OU 
EXTERNO
PADRAO = ''I'' INTERNO' where rdb$relation_name = 'PATMOVIMENTO' and rdb$field_name = 'FK_ESCOPOMOVIMENTO';
update rdb$relation_fields set rdb$description = 'SENTIDO DO MOVIMENTO
E ENTRADAS
S SAIDAS
A AJUSTES
N NAO APLICAVEL
PADRAO = E = ENTRADAS' where rdb$relation_name = 'PATMOVIMENTO' and rdb$field_name = 'FK_SENTIDOMOVIMENTO';
update rdb$relation_fields set rdb$description = 'CHAVE ESTRAGEIRA DO TIPO DE DOCUMENTO ENVOLVIDO NA MOVIMENTAÇÃO
1 - NOTA FISCAL
2 - DOCUMENTO INTERNA DE MOVIMENTO
ETC...
PADRAO = 1
' where rdb$relation_name = 'PATMOVIMENTO' and rdb$field_name = 'FK_TIPO_DOCUMENTO';
update rdb$relation_fields set rdb$description = 'NUMERO DO DOCUMENTO ENVOLVIDO NA MOVIMENTAÇÃO ( SE FOR UM DOCUMENTO INTERNO, FAZER USO DE CAST( AS VARCHAR(10))
' where rdb$relation_name = 'PATMOVIMENTO' and rdb$field_name = 'FK_DOCUMENTO';
CREATE TABLE PATRIMONIO 
(
  FK_EMPRESA                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAL                         SMALLINT         DEFAULT 1 NOT NULL,
  PK_PATRIMONIO                      INTEGER         NOT NULL,
  FK_GRUPOPATRIMONIO                 INTEGER         DEFAULT 1 NOT NULL,
  FK_SUBGRUPOPATRIMONIO             SMALLINT         DEFAULT 1 NOT NULL,
  DESCRICAO                          VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  FK_DEPARTAMENTO                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                        SMALLINT         DEFAULT 1 NOT NULL,
  AQUISICAO_DATA                        DATE         DEFAULT CURRENT_DATE NOT NULL,
  AQUISICAO_VALOR                    DECIMAL( 12, 2),
  FK_FORN_AQUISICAO                  INTEGER         DEFAULT 1 NOT NULL,
  ESTADOBEM                             CHAR(     1) DEFAULT 'B' NOT NULL COLLATE ISO8859_1,
  SITUACAO                              CHAR(     1) DEFAULT 'U' COLLATE ISO8859_1,
  DATAALOCACAO                     TIMESTAMP,
  FK_MARCAS                          INTEGER,
  FK_MODELOS                         INTEGER,
  VENDA_DATA                            DATE,
  BAIXA_DATA                            DATE,
  DESCRICAORESUMIDA                  VARCHAR(    50)  COLLATE ISO8859_1,
  FK_GARANTIA_TIPO                  SMALLINT         DEFAULT 1 NOT NULL,
  GARANTIA_PERIODO                  SMALLINT         DEFAULT 12 NOT NULL,
  FK_UNID_GARANTIA                  SMALLINT         DEFAULT 26 NOT NULL,
  FK_PRODUTOS                        INTEGER,
  FK_CENTROCUSTO                     VARCHAR(    10)  COLLATE ISO8859_1,
  SITUACAO_DATA                    TIMESTAMP,
  ESTADO_DATA                      TIMESTAMP,
  AQUISICAO_NOTAFISCAL               VARCHAR(    10)  COLLATE ISO8859_1,
  TAXADEPRECIACAO                    DECIMAL(  6, 2) DEFAULT 10,
  TAXAVALORIZACAO                    DECIMAL(  6, 2),
  FK_SUBTIPOPATRIMONIO              SMALLINT,
 PRIMARY KEY (PK_PATRIMONIO)
);
update rdb$relation_fields set rdb$description = 'ESTADO DO BEM
BOM
RUIM
REGULAR
PESSIMO
OUTROS
PADRAO = ''B''' where rdb$relation_name = 'PATRIMONIO' and rdb$field_name = 'ESTADOBEM';
update rdb$relation_fields set rdb$description = 'SITUACAO
EM USO
DISPONIVEL
INATIVO
MANUTENÇAO
TRANSITO
OUTOS
PADRAO = ''U''' where rdb$relation_name = 'PATRIMONIO' and rdb$field_name = 'SITUACAO';
update rdb$relation_fields set rdb$description = 'CODIGO NA TABELA DE PRODUTOS' where rdb$relation_name = 'PATRIMONIO' and rdb$field_name = 'FK_PRODUTOS';
CREATE TABLE PATRIMONIO_GRUPOS 
(
  EMPRESA                     SMALLINT         DEFAULT 1 NOT NULL,
  FILIAL                      SMALLINT         DEFAULT 1 NOT NULL,
  CODGRUPO                     INTEGER         NOT NULL,
  DESCRICAO                    VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
  SIGLA                           CHAR(     2)  COLLATE ISO8859_1,
  FOTO                            BLOB SUB_TYPE 0 SEGMENT SIZE 1,
  CAMINHOFOTO                  VARCHAR(   100)  COLLATE ISO8859_1,
  TAXADEPRECIACAO                FLOAT,
  TAXAVALORIZACAO              NUMERIC( 10, 4),
  IMOBILIZAR                      CHAR(     3) CHARACTER SET NONE DEFAULT 'SIM' COLLATE NONE,
 CONSTRAINT PK_PATRIMONIO_GRUPOS_1 PRIMARY KEY (EMPRESA, FILIAL, CODGRUPO)
);
update rdb$relation_fields set rdb$description = 'IMOBILIZAR ATIVOS DO GRUPOS
SIM
NÃO
ISTO EH, DEPRECIAR O ITEM LANÇADO NESTE GRUPO OU
SIMPLESMENTE LANÇAR EM DESPESAS' where rdb$relation_name = 'PATRIMONIO_GRUPOS' and rdb$field_name = 'IMOBILIZAR';
CREATE TABLE PATRIMONIO_TESTE 
(
  EMPRESA                        SMALLINT         DEFAULT 1 NOT NULL,
  FILIAL                         SMALLINT         DEFAULT 1 NOT NULL,
  SEQUENCIAL                      INTEGER         NOT NULL,
  NUMPATRIMONIO                   VARCHAR(    10)  COLLATE ISO8859_1,
  CODGRUPO                        VARCHAR(    10)  COLLATE ISO8859_1,
  CODSGRUPO                       VARCHAR(    10)  COLLATE ISO8859_1,
  DESCRICAO                       VARCHAR(   100)  COLLATE ISO8859_1,
  RESUMIDO                        VARCHAR(    50)  COLLATE ISO8859_1,
  CODDEPTO                        VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSETOR                        VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSECAO                        VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  DATAAQUISICAO                      DATE,
  VALORCONTABIL                   NUMERIC( 12, 2),
  CODFORNECEDOR                   VARCHAR(    10)  COLLATE ISO8859_1,
  ESTADO                          VARCHAR(    10) DEFAULT 'BOM' COLLATE ISO8859_1,
  STATUS                          VARCHAR(    10) DEFAULT 'EM USO' COLLATE ISO8859_1,
  DATABAIXA                          DATE,
  DATAVENDA                          DATE,
  PERIODOGARANTIA                SMALLINT,
  TIPOGARANTIA                    VARCHAR(    20) DEFAULT 'TOTAL' COLLATE ISO8859_1,
  TIPOPERIODO                     VARCHAR(     7) DEFAULT 'MESES' COLLATE ISO8859_1,
  FOTO                               BLOB SUB_TYPE 0 SEGMENT SIZE 1,
  CAMINHOFOTO                     VARCHAR(   100)  COLLATE ISO8859_1,
  DESCRICAODETALHADA                 BLOB SUB_TYPE 0 SEGMENT SIZE 1,
  DATAALOCACAO                       DATE,
  MARCA                           VARCHAR(    20)  COLLATE ISO8859_1,
  MODELO                          VARCHAR(    20)  COLLATE ISO8859_1,
  MEDIDA                          VARCHAR(    20)  COLLATE ISO8859_1,
  VOLTAGEM                        VARCHAR(    20)  COLLATE ISO8859_1,
  TIPOPATRIMONIO                  VARCHAR(    20)  COLLATE ISO8859_1,
  DATAESTADO                    TIMESTAMP,
  DATASTATUS                    TIMESTAMP,
  USER_CAD                        VARCHAR(    10) DEFAULT user COLLATE ISO8859_1,
  USER_ALT                        VARCHAR(    10) DEFAULT user COLLATE ISO8859_1,
  DATA_CAD                      TIMESTAMP         DEFAULT 'NOW',
  DATA_ALT                      TIMESTAMP         DEFAULT 'NOW',
  ANTIGOPATRIMONIO               SMALLINT,
  CODINDUBRAS                     VARCHAR(    20)  COLLATE ISO8859_1,
  CENTROCUSTO                     VARCHAR(    10)  COLLATE ISO8859_1,
  NOTAFISCAL                      VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  TAXADEPRECIACAO                 NUMERIC( 10, 4) DEFAULT 10,
  LANCARTEMPORARIO                   CHAR(     3) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_PATRIMONIO_TESTE_1 PRIMARY KEY (EMPRESA, FILIAL, SEQUENCIAL)
);
update rdb$relation_fields set rdb$description = 'ESTADO DE CONSERVAÃ‡ÃƒO
B BOM
R RUIM
P PESSIMO
O OUTROS' where rdb$relation_name = 'PATRIMONIO_TESTE' and rdb$field_name = 'ESTADO';
update rdb$relation_fields set rdb$description = 'STATUS DO BEM
A ATIVO
I INATIVO
M MANUTENÃ‡ÃƒO
O OUTROS' where rdb$relation_name = 'PATRIMONIO_TESTE' and rdb$field_name = 'STATUS';
update rdb$relation_fields set rdb$description = 'tipos de garantia
T TOTAL
P PARCIAL
N NAO APLICAVEL
O OUTROS--' where rdb$relation_name = 'PATRIMONIO_TESTE' and rdb$field_name = 'TIPOGARANTIA';
update rdb$relation_fields set rdb$description = 'TIPO DE PERIODO DE GARANTIA
D DIAS
S SEMANAS
M MESES
A ANOS--' where rdb$relation_name = 'PATRIMONIO_TESTE' and rdb$field_name = 'TIPOPERIODO';
update rdb$relation_fields set rdb$description = 'Data de chegada Ã¡ SeÃ§Ã£o' where rdb$relation_name = 'PATRIMONIO_TESTE' and rdb$field_name = 'DATAALOCACAO';
update rdb$relation_fields set rdb$description = 'se deve lançar o registro no arquivo temporario
para geração do arquivo de implantação TOTVS
se estiver em SIM lança o registro
se estiver em NAO Nao lança o registro' where rdb$relation_name = 'PATRIMONIO_TESTE' and rdb$field_name = 'LANCARTEMPORARIO';
CREATE TABLE PAT_MOVIMENTO_TESTE 
(
  EMPRESA                      SMALLINT         DEFAULT 1 NOT NULL,
  FILIAL                       SMALLINT         DEFAULT 1 NOT NULL,
  NUMMOVIMENTO                  INTEGER         NOT NULL,
  DATAMOVIMENTO               TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  TIPOMOVIMENTO                 VARCHAR(    10) CHARACTER SET NONE DEFAULT 'INTERNO' COLLATE NONE,
  SENTIDOMOVIMENTO              VARCHAR(    10) CHARACTER SET NONE DEFAULT 'ENTRADA' COLLATE NONE,
  MOTIVOMOVIMENTO               VARCHAR(    10) CHARACTER SET NONE DEFAULT 'AQUISICAO' COLLATE NONE,
  EMITIRDOCFISCAL                  CHAR(     3) CHARACTER SET NONE DEFAULT 'NAO' COLLATE NONE,
  CCUSTOORIGEM                  VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODDEPTOORIGEM                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSETORORIGEM                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSECAOORIGEM                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODFORNORIGEM                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CCUSTODESTINO                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODDEPTODESTINO               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSETORDESTINO               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSECAODESTINO               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  OBSERVACAO                       BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  USER_CAD                      VARCHAR(    10) CHARACTER SET NONE DEFAULT USER COLLATE NONE,
  USER_ALT                      VARCHAR(    10) CHARACTER SET NONE DEFAULT USER COLLATE NONE,
  DATA_CAD                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  CODFORNDESTINO                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  NUMPATRIMONIO                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  NUMPRODUTO                    VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_PAT_MOVIMENTO_TESTE_1 PRIMARY KEY (EMPRESA, FILIAL, NUMMOVIMENTO)
);
update rdb$relation_fields set rdb$description = 'TIPO DE MOVIMENTO 
INTERNO
EXTERNO
OUTROS' where rdb$relation_name = 'PAT_MOVIMENTO_TESTE' and rdb$field_name = 'TIPOMOVIMENTO';
update rdb$relation_fields set rdb$description = 'SENTIDO DE MOVIMENTO
ENTRADA
SAIDA
OUTROS' where rdb$relation_name = 'PAT_MOVIMENTO_TESTE' and rdb$field_name = 'SENTIDOMOVIMENTO';
update rdb$relation_fields set rdb$description = 'MOTIVO DO MOVIIMENTO
AQUISIÇÃO
VENDA
DOAÇÃO
EMPRESTIMO
MANUTENÇÃO
TRANSFERENCIA
REALOCAÇÃO
OUTROS' where rdb$relation_name = 'PAT_MOVIMENTO_TESTE' and rdb$field_name = 'MOTIVOMOVIMENTO';
CREATE TABLE PAT_OCOR_TESTE 
(
  EMPRESA                    SMALLINT         DEFAULT 1,
  FILIAL                     SMALLINT         DEFAULT 1,
  DATAOCORRENCIA                 DATE         DEFAULT CURRENT_DATE,
  CODOCORRENCIA               INTEGER,
  SEQUENCIAL                  INTEGER         NOT NULL,
  MOTIVO                      VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  OBSERVACAO                     BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  NUMPATRIMONIO               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_PAT_OCOR_TESTE_1 PRIMARY KEY (SEQUENCIAL)
);
CREATE TABLE PAT_TIPOOCOR_TESTE 
(
  CODOCORRENCIA               INTEGER         NOT NULL,
  OCOR_DESCRICAO              VARCHAR(    50) CHARACTER SET NONE NOT NULL COLLATE NONE,
  MANUTENCAO                     CHAR(     3) CHARACTER SET NONE DEFAULT 'NAO' COLLATE NONE,
 CONSTRAINT PK_PAT_TIPOOCOR_TESTE_1 PRIMARY KEY (CODOCORRENCIA)
);
CREATE TABLE PCP_FASES 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PCP_PROCESSOS             SMALLINT         DEFAULT 1 NOT NULL,
  PK_FASES                     SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(   100)  COLLATE ISO8859_1,
  PRODUCAOINTERNA                  CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  USAMAQUINAS                      CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1
);
CREATE TABLE PCP_FASES_EPI 
(
  PK_PCP_PROCESSOS              INTEGER         NOT NULL,
  PK_FASES_EPI                 SMALLINT         NOT NULL,
  FK_EPI                       SMALLINT         NOT NULL,
  QUANTIDADE                   SMALLINT         NOT NULL,
  CUSTOUNITARIO                 DECIMAL( 12, 2),
  PK_FILIAL                     INTEGER         NOT NULL,
  PK_FASES                     SMALLINT         NOT NULL,
  PK_EMPRESA                    INTEGER         NOT NULL
);
CREATE TABLE PCP_FASES_FERRAMENTAS 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_PCP_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FASES                         SMALLINT         DEFAULT 1 NOT NULL,
  PK_FASES_FERRAMENTAS             SMALLINT         NOT NULL,
  FK_FERRAMENTAS                   SMALLINT         DEFAULT 1 NOT NULL,
  QUANTFERRAMENTAS                 SMALLINT         DEFAULT 1,
  CUSTOUNITARIO                     DECIMAL( 12, 2)
);
CREATE TABLE PCP_FASES_FUNCAO 
(
  PK_PCP_PROCESSOS              INTEGER         NOT NULL,
  PK_FASES_FUNCAO              SMALLINT         NOT NULL,
  QUANTFUNCAO                  SMALLINT         DEFAULT 1 NOT NULL,
  CUSTOUNITARIO                 DECIMAL( 12, 2),
  FK_FUNCAO                    SMALLINT         NOT NULL,
  PK_FILIAL                     INTEGER         NOT NULL,
  PK_FASES                     SMALLINT         NOT NULL,
  PK_EMPRESA                    INTEGER         NOT NULL
);
CREATE TABLE PCP_FASES_MAQUINAS 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_PCP_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FASES                         SMALLINT         DEFAULT 1 NOT NULL,
  PK_FASES_MAQUINAS                SMALLINT         NOT NULL,
  FK_EMPRESAS_MAQ                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS_MAQ                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS_MAQ             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES_MAQ                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS_MAQ                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS_MAQ                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                      SMALLINT         DEFAULT 1 NOT NULL,
  TEMPOFASESMAQUINAS                   DATE,
  FK_UNDTEMPOCUSTO                 SMALLINT         NOT NULL,
  PRODUCAO_TEORICO                 SMALLINT         DEFAULT 10,
  QNTD_MAQ_PROD                    SMALLINT,
  PESO_MAQ_PROD                    SMALLINT         DEFAULT 10,
  QTDE_IDEAL_DIA                   SMALLINT
);
CREATE TABLE PCP_FASES_MATERIAIS 
(
  PK_PCP_PROCESSOS                INTEGER         NOT NULL,
  PK_FASES_MATERIAIS             SMALLINT         NOT NULL,
  FK_MATERIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  QUANTIDADE                     SMALLINT         DEFAULT 1 NOT NULL,
  CUSTOUNITARIO                   DECIMAL( 12, 2),
  PK_FILIAL                       INTEGER         NOT NULL,
  PK_FASES                       SMALLINT         NOT NULL,
  PK_EMPRESA                      INTEGER         NOT NULL
);
CREATE TABLE PCP_FASES_MATPRIMA 
(
  PK_PCP_PROCESSOS                INTEGER         NOT NULL,
  QUANTMATERIAPRIMA                 FLOAT,
  CUSTOUNITARIO                   DECIMAL( 12, 2),
  PK_FASES_MATPRIMAS             SMALLINT         NOT NULL,
  FK_UNDMATERIAPRIMA             SMALLINT         NOT NULL,
  PK_FILIAL                       INTEGER         NOT NULL,
  PK_FASES                       SMALLINT         NOT NULL,
  PK_EMPRESA                      INTEGER         NOT NULL
);
CREATE TABLE PCP_FASES_PECAS 
(
  FK_EMPRESAS                  SMALLINT         NOT NULL,
  FK_FILIAIS                   SMALLINT         NOT NULL,
  FK_PCP_PROCESSOS             SMALLINT         NOT NULL,
  FK_FASES                     SMALLINT         NOT NULL,
  PK_FASES_PECAS               SMALLINT         NOT NULL,
  FK_PECAS                     SMALLINT         NOT NULL,
  QUANTIDADE                   SMALLINT         NOT NULL,
  CUSTOUNITARIO                 DECIMAL( 12, 2)
);
CREATE TABLE PCP_FORMULACAO 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                     SMALLINT         DEFAULT 1 NOT NULL,
  PK_FORMULACAO                    SMALLINT         DEFAULT 1 NOT NULL,
  DESCRICAO                         VARCHAR(   150)  COLLATE ISO8859_1,
  QUANTIDADEMINIMA                    FLOAT,
  OBSERVACAO                        VARCHAR(  1000)  COLLATE ISO8859_1,
  TIPOFORMULACAOID                  INTEGER,
  SITUACAOFORMULACAOID              INTEGER,
 CONSTRAINT PCP_FORMULACAO_INDEX01 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, PK_FORMULACAO)
);
CREATE TABLE PCP_FORMULACAO_CUSTOS 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FORMULACAO                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_FORM_CUSTOS                    INTEGER         NOT NULL,
  CUSTOPRODUCAO                     DECIMAL( 12, 2),
  PERCENTUAL                          FLOAT,
  TEMPOREACAO                          TIME,
  OBSERVACAO                        VARCHAR(  1000)  COLLATE ISO8859_1,
  TIPOFORMULACAOID                  INTEGER,
  SITUACAOFORMULACAOID              INTEGER
);
CREATE TABLE PCP_FORMULACAO_PRODUTOS 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FORMULACAO                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_FORM_PRODUTOS                  INTEGER         NOT NULL,
  FK_PRODUTOS                       INTEGER,
  PERCENTUAL                          FLOAT,
  TEMPOREACAO                          TIME,
  OBSERVACAO                        VARCHAR(  1000)  COLLATE ISO8859_1,
  TIPOFORMULACAOID                  INTEGER,
  SITUACAOFORMULACAOID              INTEGER
);
CREATE TABLE PCP_PROCESSOS 
(
  PK_PCP_PROCESSOS              INTEGER         NOT NULL,
  DESCRICAO                     VARCHAR(   100)  COLLATE ISO8859_1,
  FK_PRODUTOS                   INTEGER,
  FK_APRESENTACAO              SMALLINT         DEFAULT 1,
  OBSPROCESSO                   VARCHAR(   255)  COLLATE ISO8859_1,
  QUANTNOLOTE                  SMALLINT,
  FK_UND_QUANTLOTE             SMALLINT,
  VALIDADELOTE                 SMALLINT         DEFAULT 12,
  FK_UNDVALIDLOTE              SMALLINT,
 CONSTRAINT PK_PCP_PROCESSOS_1 PRIMARY KEY (PK_PCP_PROCESSOS)
);
update rdb$relation_fields set rdb$description = 'CODIGO DO PRODUTO' where rdb$relation_name = 'PCP_PROCESSOS' and rdb$field_name = 'FK_PRODUTOS';
update rdb$relation_fields set rdb$description = 'OBSERVAÃ‡AO SOBRE O PROCESSO DE PRODUÃ‡ÃƒO' where rdb$relation_name = 'PCP_PROCESSOS' and rdb$field_name = 'OBSPROCESSO';
update rdb$relation_fields set rdb$description = 'DEFINE A QUANTIDADE DE PRODUTOS NO LOTE' where rdb$relation_name = 'PCP_PROCESSOS' and rdb$field_name = 'QUANTNOLOTE';
update rdb$relation_fields set rdb$description = 'DEFINE A UNIDADE DE MEDIDA NA QUANTIDADE DO LOTE' where rdb$relation_name = 'PCP_PROCESSOS' and rdb$field_name = 'FK_UND_QUANTLOTE';
update rdb$relation_fields set rdb$description = 'TEMPO EM VALIDADE DO LOTE' where rdb$relation_name = 'PCP_PROCESSOS' and rdb$field_name = 'VALIDADELOTE';
update rdb$relation_fields set rdb$description = 'UNIDADE DE MEDIDA NA VALIDADE DO LOTE, NORMALMENTE MESES
' where rdb$relation_name = 'PCP_PROCESSOS' and rdb$field_name = 'FK_UNDVALIDLOTE';
CREATE TABLE PCP_PROD_MAQUINAS 
(
  PK_PROD_MAQUINAS              INTEGER         NOT NULL,
  FK_PRODUTOS                   INTEGER,
  FK_EMBALAGEM                 SMALLINT,
  FK_APRESENTACAO              SMALLINT,
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                  SMALLINT,
  PRODUCAO_TEORICO             SMALLINT         DEFAULT 10,
  QNTD_MAQ_PROD                SMALLINT,
  PESO_MAQ_PROD                SMALLINT         DEFAULT 10,
  QTDE_IDEAL_DIA               SMALLINT,
 CONSTRAINT PK_PCP_PROD_MAQUINAS PRIMARY KEY (PK_PROD_MAQUINAS)
);
CREATE TABLE PCP_PROD_MAQ_FUNCAO 
(
  FK_PROD_MAQUINAS                INTEGER         NOT NULL,
  PK_PROD_MAQ_FUNCAO             SMALLINT         NOT NULL,
  FK_FUNCAO                       INTEGER,
  QUANTIDADE                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                    SMALLINT
);
CREATE TABLE PCP_PROGRAMAPROD 
(
  PROG_CODIG              VARCHAR(     6) NOT NULL COLLATE ISO8859_1,
  SET_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  MAQ_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  TAG_CODIGO              VARCHAR(    30)  COLLATE ISO8859_1,
  EQUI_CODIG              VARCHAR(    30)  COLLATE ISO8859_1,
  PRPD_CODIG              VARCHAR(    15)  COLLATE ISO8859_1,
  PROG_EXECU                 DATE,
  OS_CODIGO               VARCHAR(    15)  COLLATE ISO8859_1,
  PRPD_DESCR              VARCHAR(   100)  COLLATE ISO8859_1,
  PROG_PER_S                FLOAT,
  PRPD_PER_D                FLOAT,
  PRPD_TOLER                FLOAT,
  PRPD_DATAB                 DATE,
  PRPD_PARAD                 CHAR(     1)  COLLATE ISO8859_1,
  PRPD_SITUA                 CHAR(     1)  COLLATE ISO8859_1,
  PRPD_MARCA              T_YESNO ,
  AREA_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  PRPD_OS_DE              VARCHAR(    50)  COLLATE ISO8859_1,
  DISP_CODIG              VARCHAR(    10)  COLLATE ISO8859_1,
  DISP_MAX                  FLOAT,
  DISP_TOLER                FLOAT,
  DISP_ACUMU                FLOAT,
  EQUIPE_COD              VARCHAR(    10)  COLLATE ISO8859_1,
  PRPD_IMAG               VARCHAR(   254)  COLLATE ISO8859_1,
  PRPD_ANEXO              VARCHAR(   254)  COLLATE ISO8859_1,
 CONSTRAINT PK_PCP_PROGRAMAPROD_1 PRIMARY KEY (PROG_CODIG)
);
CREATE TABLE PECAS 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  PK_PECAS                        SMALLINT         NOT NULL,
  DESCRICAO                        VARCHAR(   100)  COLLATE ISO8859_1,
  DESCRICAORESUMIDA                VARCHAR(    50)  COLLATE ISO8859_1,
  DESCRICAODETALHADA                  BLOB SUB_TYPE 1 SEGMENT SIZE 80 CHARACTER SET NONE,
  REFERENCIATECNICA                   BLOB SUB_TYPE 1 SEGMENT SIZE 80 CHARACTER SET NONE,
  PC_FUNCAO                        VARCHAR(    20)  COLLATE ISO8859_1,
  COD_CATEGO                       VARCHAR(    15)  COLLATE ISO8859_1,
  ESTOQUEMINIMO                      FLOAT,
  ESTOQUEMAXIMO                      FLOAT,
  ESTOQUEATUAL                       FLOAT,
  ESTOQUEINICIAL                     FLOAT,
  FK_UNIDCOMPRAS                  SMALLINT         DEFAULT 6,
  FK_UNID_USO                     SMALLINT         DEFAULT 6,
  CUSTOUNITARIO                    DECIMAL( 12, 2),
  ULTIMACOMPRA                   TIMESTAMP,
  ULTIMAENTESTOQUE               TIMESTAMP,
  ULTIMASAIDAESTOQUE             TIMESTAMP,
  FK_FORNPADRAO                   SMALLINT,
  FK_FABRICANTE                   SMALLINT,
  FK_PATRIMONIO                   SMALLINT,
  FK_PRODUTOS                      INTEGER,
  VALORCRITICIDADE                SMALLINT,
  CLASSIFICACAOFISCAL              VARCHAR(    15)  COLLATE ISO8859_1,
  CTACONTABILCREDITO              SMALLINT,
  CTACONTABILDEBITO               SMALLINT,
  CODIGOCONTABIL                   VARCHAR(    25)  COLLATE ISO8859_1,
  VIDAUTIL                        SMALLINT,
  FK_UNDVIDAUTIL                  SMALLINT,
  LUBRIFICANTE                        CHAR(     1)  COLLATE ISO8859_1,
  PC_GARANTIA                         CHAR(     1)  COLLATE ISO8859_1,
  PC_G_PER                        SMALLINT,
  DATALIMITEGARANTIA                  DATE,
  ITEMDEMANUTENCAO                    CHAR(     1)  COLLATE ISO8859_1,
  TIPOARMAZENAMENTO                   CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  TIPOPECAS                           CHAR(     1) DEFAULT 'P' COLLATE ISO8859_1,
 CONSTRAINT PK_PECAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_PECAS)
);
update rdb$relation_fields set rdb$description = 'TIPO DE ARMAZENAMENTO
TIPO DE NECESSIDADE DO DEPOSITO / ALMOXARIFADO
TIPO DE DEPOSITO
S=SECOS
M MOLHADOS
R REFRIGERADOS
C CONGELADOS
O CONFINADOS
U OUTROS
' where rdb$relation_name = 'PECAS' and rdb$field_name = 'TIPOARMAZENAMENTO';
update rdb$relation_fields set rdb$description = 'CADASTRO DO TIPO DE PEÃ‡AS
P = PEÃ‡AS
M = MATERIAL
E = EPI
F = FERRAMENTAS
O = OUTROS
' where rdb$relation_name = 'PECAS' and rdb$field_name = 'TIPOPECAS';
CREATE TABLE PECAS_ANEXOS 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_PECAS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_PECAS_ANEXOS             SMALLINT         NOT NULL,
  FK_ANEXOS                   SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_PECAS_ANEXOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PECAS, PK_PECAS_ANEXOS)
);
CREATE TABLE PECAS_COTACAO 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PECAS                     SMALLINT         DEFAULT 1 NOT NULL,
  PK_PECAS_COTACAO             SMALLINT         NOT NULL,
  FK_FORNECEDOR                SMALLINT         DEFAULT 1 NOT NULL,
  FK_UNIDCOMPRAS               SMALLINT         DEFAULT 6 NOT NULL,
  QUANTIDADE                      FLOAT         DEFAULT 1,
  VALORUNITARIO                 DECIMAL( 12, 2),
  DATACOTACAO                 TIMESTAMP,
  OBSERVACAO                    VARCHAR(   200)  COLLATE ISO8859_1,
  SITUACAO                         CHAR(     1) DEFAULT 'A' COLLATE ISO8859_1,
 CONSTRAINT PK_PECAS_COTACAO PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PECAS, PK_PECAS_COTACAO)
);
update rdb$relation_fields set rdb$description = 'situaÃ§Ã£o da CotaÃ§Ã£o
Aberta
Pendente
Cancelada
Fechada
Outros
Padrao = A = Aberta' where rdb$relation_name = 'PECAS_COTACAO' and rdb$field_name = 'SITUACAO';
CREATE TABLE PECAS_DEVOLUCAO 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPOSITO                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PECAS                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_PECAS_DEVOLUCAO             SMALLINT         NOT NULL,
  DATAMOVIMENTO                 TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  FK_FUNCIONARIO                 SMALLINT         DEFAULT 1 NOT NULL,
  DOCUMENTO                       VARCHAR(    10)  COLLATE ISO8859_1,
  MOTIVO                          VARCHAR(   200)  COLLATE ISO8859_1,
  OBSERVACAO                      VARCHAR(   200)  COLLATE ISO8859_1,
  FK_MAN_OS                      SMALLINT         DEFAULT 1,
  FK_UNIDADES                    SMALLINT         DEFAULT 6 NOT NULL,
  QUANTIDADES                       FLOAT,
  FK_PECAS_SAIDAS                SMALLINT         DEFAULT 1,
 CONSTRAINT PK_PECAS_DEVOLUCAO PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_PECAS_DEVOLUCAO)
);
CREATE TABLE PECAS_ENTRADAS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PECAS                      SMALLINT         DEFAULT 1 NOT NULL,
  PK_PECAS_ENTRADAS             SMALLINT         NOT NULL,
  DATAENTRADA                  TIMESTAMP,
  FK_FUNCIONARIOS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_FORNECEDORES               SMALLINT         DEFAULT 1 NOT NULL,
  MOTIVO                         VARCHAR(   200)  COLLATE ISO8859_1,
  FK_SOLICITANTE                SMALLINT,
  DOCUMENTO                      VARCHAR(    10)  COLLATE ISO8859_1,
  FK_UNIDADES                   SMALLINT         DEFAULT 6,
  QUANTIDADES                      FLOAT,
  VALORUNITARIO                  DECIMAL( 12, 2),
  VALORBRUTO                     DECIMAL( 12, 2),
  VALORLIQUIDO                   DECIMAL( 12, 2),
  VALORDESCONTO                  DECIMAL( 12, 2),
  PERC_DESCONTO                  DECIMAL(  6, 2),
  OBSERVACAO                     VARCHAR(   300)  COLLATE ISO8859_1,
  FK_PECAS_ENTRADAS             SMALLINT,
  FK_COMPRAS                    SMALLINT,
  N_SERIE                        VARCHAR(    10)  COLLATE ISO8859_1,
  LOTE                           VARCHAR(    30)  COLLATE ISO8859_1,
  CODIGO_LOTE                    INTEGER,
  FK_PRODUTOS                   SMALLINT,
 CONSTRAINT PK_PECAS_ENTRADAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PECAS, PK_PECAS_ENTRADAS)
);
CREATE TABLE PECAS_ESTOQUES 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PECAS                     SMALLINT         NOT NULL,
  ESTOQUEINICIAL                  FLOAT,
  ESTOQUEMINIMO                   FLOAT,
  ESTOQUEMAXIMO                   FLOAT,
  ESTOQUESEGURANCA                FLOAT,
  FK_UNIDADES                  SMALLINT         DEFAULT 6,
  ENTRADAS                        FLOAT,
  SAIDAS                          FLOAT,
  ULTIMAENTRADA               TIMESTAMP,
  ULTIMASAIDA                 TIMESTAMP,
  ESTOQUEATUAL         DOUBLE PRECISION         COMPUTED BY ( ESTOQUEINICIAL + ENTRADAS - SAIDAS ),
 CONSTRAINT PK_PECAS_ESTOQUES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PECAS)
);
CREATE TABLE PECAS_IMAGEM 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_PECAS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_PECAS_IMAGEM             SMALLINT         NOT NULL,
  FK_IMAGEM                   SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_PECAS_IMAGEM PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PECAS, PK_PECAS_IMAGEM)
);
CREATE TABLE PECAS_LOTACAO 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_PECAS                        SMALLINT         DEFAULT 1 NOT NULL,
  PK_PECAS_LOTACAO                SMALLINT         NOT NULL,
  FK_EMPRESASLOTACAO              SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAISLOTACAO               SMALLINT         DEFAULT 1 NOT NULL,
  FK_ALMOXARIFADOS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_UNIDADES                     SMALLINT         DEFAULT 6 NOT NULL,
  QUANTIDADES                        FLOAT,
  USER_INC                         VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                       TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  USER_ALT                         VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_ALT                       TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  FK_LOCALESTOQUE                 SMALLINT         DEFAULT 1,
  FK_LOCALESTENDERECO             SMALLINT         DEFAULT 1,
 CONSTRAINT PK_PECAS_LOTACAO PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PECAS, PK_PECAS_LOTACAO)
);
update rdb$relation_fields set rdb$description = 'CODIGO DO ALMOXARIFADO OU DEPOSITO 
QUE ESTA LOTADA O PRODUTO
' where rdb$relation_name = 'PECAS_LOTACAO' and rdb$field_name = 'FK_ALMOXARIFADOS';
CREATE TABLE PECAS_NORMAS 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_PECAS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_PECAS_NORMAS             SMALLINT         NOT NULL,
  FK_NORMAS                   SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_PECAS_NORMAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PECAS, PK_PECAS_NORMAS)
);
CREATE TABLE PECAS_PEDIDOS 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_PECAS                        SMALLINT         DEFAULT 1 NOT NULL,
  PK_PECAS_PEDIDOS                SMALLINT         NOT NULL,
  FK_UNIDADES                     SMALLINT         DEFAULT 6,
  QUANTIDADES                        FLOAT,
  DATAPEDIDO                     TIMESTAMP,
  FK_FUNCIONARIOS                 SMALLINT         DEFAULT 1,
  FK_SOLICITANTE                  SMALLINT         DEFAULT 1,
  DATASOLICITACAO                TIMESTAMP,
  FK_AVALIADOR                    SMALLINT         DEFAULT 1,
  DATAAVALIACAO                  TIMESTAMP,
  FK_APROVADOR                    SMALLINT         DEFAULT 1,
  DATAAPROVACAO                  TIMESTAMP,
  MOTIVO                           VARCHAR(   300)  COLLATE ISO8859_1,
  FK_MAN_OS                       SMALLINT         DEFAULT 1,
  FK_FORNECEDORES                 SMALLINT         DEFAULT 1,
  FK_PEDIDOS                      SMALLINT         DEFAULT 1,
  DATA_LIMITE                         DATE,
  DATA_RECEBIMENTO                    DATE,
  DATA_ENCAMINHAMENTO                 DATE,
  OBSERVACAO                       VARCHAR(   200)  COLLATE ISO8859_1
);
CREATE TABLE PECAS_SAIDAS 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1,
  FK_FILIAIS                     SMALLINT         DEFAULT 1,
  FK_PECAS                       SMALLINT         DEFAULT 1,
  PK_PECAS_SAIDAS                SMALLINT         NOT NULL,
  FK_DEPOSITOS                   SMALLINT         DEFAULT 1,
  FK_LOCALESTOQUE                SMALLINT         DEFAULT 1,
  DATAMOVIMENTO                 TIMESTAMP,
  FK_FUNCIONARIOS                SMALLINT         DEFAULT 1,
  FK_MAN_OS                      SMALLINT         DEFAULT 1,
  DOCUMENTO                       VARCHAR(    10)  COLLATE ISO8859_1,
  FK_UNIDADES                    SMALLINT         DEFAULT 6,
  QUANTIDADES                       FLOAT,
  CUSTOUNITARIO                   DECIMAL( 12, 2),
  MOTIVO                          VARCHAR(   200)  COLLATE ISO8859_1,
  FK_SOLICITANTE                 SMALLINT,
  DATASOLICITACAO               TIMESTAMP,
  FK_AVALIADOR                   SMALLINT,
  DATAAVALIACAO                 TIMESTAMP,
  FK_APROVADOR                   SMALLINT,
  DATAAPROVACAO                 TIMESTAMP,
  OBSERVACAO                      VARCHAR(   200)  COLLATE ISO8859_1,
  FK_PECAS_DEVOLUCAO             SMALLINT,
  FK_PECAS_LOTE                  SMALLINT
);
CREATE TABLE PECAS_SAIDAS_DIAS 
(
  FK_EMPRESAS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_PECAS                  SMALLINT         DEFAULT 1 NOT NULL,
  PK_SAIDAPECAS             SMALLINT         NOT NULL,
  DATASAIDA                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAN_OS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_UNIDADES               SMALLINT         DEFAULT 6 NOT NULL,
  QUANTIDADES                  FLOAT,
  CUSTOUNITARIO              DECIMAL( 12, 2),
  VALORTOTAL                 DECIMAL( 12, 2),
 CONSTRAINT PK_PECAS_SAIDAS_DIAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PECAS, PK_SAIDAPECAS)
);
CREATE TABLE PECAS_TESTE 
(
  PC_CODIGO                 VARCHAR(    30)  COLLATE ISO8859_1,
  PC_DESCRIC                VARCHAR(   254)  COLLATE ISO8859_1,
  PC_FUNCAO                 VARCHAR(    20)  COLLATE ISO8859_1,
  PC_LOCESTO                VARCHAR(    15)  COLLATE ISO8859_1,
  CUS_UNIT                    FLOAT,
  PC_ORIGEM                    CHAR(     1)  COLLATE ISO8859_1,
  PC_QUANTCO                  FLOAT,
  PC_VIDAUTI                VARCHAR(    15)  COLLATE ISO8859_1,
  PC_ESTOMIN                  FLOAT,
  PC_DATACOM                   DATE,
  PC_LUBRIFI                   CHAR(     1)  COLLATE ISO8859_1,
  PC_SIMBOLO                VARCHAR(    50)  COLLATE ISO8859_1,
  PC_IMAGEM                 VARCHAR(   100)  COLLATE ISO8859_1,
  PC_ESTOMAX                  FLOAT,
  PC_ESTOATU                  FLOAT,
  PC_ANEXO                  VARCHAR(   254)  COLLATE ISO8859_1,
  UNIDADE                      CHAR(     3)  COLLATE ISO8859_1,
  PC_ENTRADA                   DATE,
  PC_SAIDA                     DATE,
  PC_GARANT                    CHAR(     1)  COLLATE ISO8859_1,
  PC_G_PER                 SMALLINT,
  PC_G_LIMIT                   DATE,
  PC_REFTECN                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  SET_CODIGO                VARCHAR(    15)  COLLATE ISO8859_1,
  DEP_CODIGO                VARCHAR(    15)  COLLATE ISO8859_1,
  ITEM_MANUT                   CHAR(     1)  COLLATE ISO8859_1,
  FOR_PADRAO                VARCHAR(    15)  COLLATE ISO8859_1,
  COD_CONTAB                VARCHAR(    25)  COLLATE ISO8859_1,
  COD_GRUPO                 VARCHAR(    15)  COLLATE ISO8859_1,
  COD_SUBGRP                VARCHAR(    15)  COLLATE ISO8859_1,
  COD_CLASSI                VARCHAR(    15)  COLLATE ISO8859_1,
  RM_CODIGO                 VARCHAR(    15)  COLLATE ISO8859_1,
  COD_CATEGO                VARCHAR(    15)  COLLATE ISO8859_1,
  PRATELEIRA                VARCHAR(    25)  COLLATE ISO8859_1,
  LOCAL                     VARCHAR(    25)  COLLATE ISO8859_1,
  CORREDOR                  VARCHAR(    25)  COLLATE ISO8859_1,
  NEGOCIO                      CHAR(     5)  COLLATE ISO8859_1,
  VL_MEDIO                  NUMERIC( 15, 3),
  VL_UNIT                   NUMERIC( 15, 3),
  ESTO_INICIAL              INTEGER,
  GRP_CODIGO                VARCHAR(    25)  COLLATE ISO8859_1,
  VL_CRITIC                SMALLINT,
  VL_GARANTIA               NUMERIC( 15, 3),
  VL_S_IMPOSTO              NUMERIC( 15, 3),
  PC_ESTODISP                 FLOAT,
  CODIGO                    INTEGER         NOT NULL,
 CONSTRAINT PK_PECAS_TESTE PRIMARY KEY (CODIGO)
);
CREATE TABLE PECAS_TRANSFERENCIAS 
(
  FK_EMPRESAS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                          SMALLINT         DEFAULT 1 NOT NULL,
  PK_PECAS_TRANSFERENCIA              SMALLINT         NOT NULL,
  DATAMOVIMENTO                      TIMESTAMP,
  FK_FUNCIONARIOS                     SMALLINT         DEFAULT 1,
  FK_SOLICITANTE                      SMALLINT         DEFAULT 1,
  DATASOLICITACAO                    TIMESTAMP,
  FK_AVALIADOR                        SMALLINT         DEFAULT 1,
  DATAAVALIACAO                      TIMESTAMP,
  FK_APROVADOR                        SMALLINT         DEFAULT 1,
  DATAAPROVACAO                      TIMESTAMP,
  TIPOTRANSFERENCIA                       CHAR(     1)  COLLATE ISO8859_1,
  FK_PECAS                            SMALLINT         DEFAULT 1,
  FK_UNIDADES                         SMALLINT         DEFAULT 6,
  QUANTIDADES                            FLOAT,
  FK_EMPRESAS_CEDENTE                 SMALLINT         DEFAULT 1,
  FK_FILIAIS_CEDENTE                  SMALLINT         DEFAULT 1,
  FK_DEPOSITO_CEDENTE                 SMALLINT         DEFAULT 1,
  FK_LOCALESTOQUE_CEDENTE             SMALLINT         DEFAULT 1,
  DATASAIDA                          TIMESTAMP,
  FK_EMPRESAS_RECEB                   SMALLINT         DEFAULT 1,
  FK_FILIAIS_RECEB                    SMALLINT         DEFAULT 1,
  FK_DEPOSITO_RECEB                   SMALLINT         DEFAULT 1,
  FK_LOCALESTOQUE_RECEB               SMALLINT         DEFAULT 1,
  FK_FUNCIONARIOS_RECEB               SMALLINT         DEFAULT 1,
  DATARECEBIMENTO                    TIMESTAMP,
  MOTIVO                               VARCHAR(   255) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_PECAS_TRANSFERENCIAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_PECAS_TRANSFERENCIA)
);
update rdb$relation_fields set rdb$description = 'TIPO DO MOVIMENTO
E = TRANFERENCIA DE ENTRADA - ESTA RECEBENDO A TRANSFERENCIA
S = TRANSFERENCIA DE SAIDA - ESTA CEDENDO A TRANSFERENCIA
V = TRANFERENCIA INTERNA, SOMENTE MOVIMENTAÃ‡AO VERTICAL - TIRANDO DE UM ENDERECO PARA OUTRO DENTRO DO MESMO DEPOSITO / LOCALESTQOEU
H = TRANFERENCIA INTERNA, SOMENTE MOVIMENTAÃ‡AO HORIZONTAL - TIRANDO DE UM ENDERECO PARA OUTRO DENTRO DO MESMO DEPOSITO / LOCALESTQUE
O = OUTRAS TRANSFERENCIAS 
' where rdb$relation_name = 'PECAS_TRANSFERENCIAS' and rdb$field_name = 'TIPOTRANSFERENCIA';
CREATE TABLE PECA_DEPTO 
(
  PC_CODIGO                VARCHAR(    30) CHARACTER SET NONE NOT NULL COLLATE NONE,
  DEP_CODIGO               VARCHAR(    30) CHARACTER SET NONE NOT NULL COLLATE NONE,
  PC_ESTOATU               NUMERIC( 15, 3),
  PC_ESTOMAX               NUMERIC( 15, 3),
  PC_ESTOMIN               NUMERIC( 15, 3),
  PC_ESTODISP              NUMERIC( 15, 3),
  PRATELEIRA               VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  LOCAL_2                  VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  CORREDOR                 VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  CUS_UNIT                 NUMERIC( 15, 3),
 CONSTRAINT PK_PECA_DEPTO PRIMARY KEY (PC_CODIGO, DEP_CODIGO)
);
CREATE TABLE PHARMADADOS 
(
  CODPHARMADADOS                        CHAVE NOT NULL,
  TIPOINFORMACAO                         CHAR(     1)  COLLATE ISO8859_1,
  NOMEINFORMACAO                      VARCHAR(   100)  COLLATE ISO8859_1,
  CODIGOINFORMACAOANVISA              VARCHAR(    15)  COLLATE ISO8859_1,
 CONSTRAINT PK_PHARMADADOS PRIMARY KEY (CODPHARMADADOS)
);
CREATE TABLE PLANOCONTASPED 
(
  FK_EMPRESAS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                 SMALLINT         DEFAULT 1 NOT NULL,
  PK_PLANOCONTAS              VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  CONTAS                      INTEGER         NOT NULL,
  DESCRICAO                   VARCHAR(   150)  COLLATE ISO8859_1,
  DETALHAMENTO                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ATIVO                  FLAG_SIM_NAO ,
  DATAINICIO                     DATE,
  DATAVALIDADE                   DATE,
  TIPO                           CHAR(     1) DEFAULT 'A' COLLATE ISO8859_1
);
CREATE TABLE PMOVIMENT 
(
  ID                     INTEGER         NOT NULL,
  EMPRESA                INTEGER         NOT NULL,
  CODIGO                 INTEGER,
  DESCRICAO              VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  TIPO                      CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  BAIXA                     CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  DESPESA                   CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  CODDESP                INTEGER,
 CONSTRAINT PK_PMOVIMENT_1 PRIMARY KEY (ID)
);
CREATE TABLE PMOVPNEU 
(
  ID                     INTEGER         NOT NULL,
  EMPRESA                INTEGER         NOT NULL,
  DATA                      DATE,
  PNEU                   INTEGER,
  HODOMETRO              INTEGER,
  VEICULO                INTEGER,
  MOVIMENT               INTEGER,
  POSICAO                INTEGER,
  VALOR                  NUMERIC( 15, 3),
 CONSTRAINT PK_PMOVPNEU_1 PRIMARY KEY (ID)
);
CREATE TABLE PNEUPOSICAO 
(
  PK_PNEU_POSICAO             SMALLINT         NOT NULL,
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  DESCRICAO                    VARCHAR(  2030) NOT NULL COLLATE ISO8859_1,
  USER_INC               USUARIOPADRAO DEFAULT USER,
  USER_ALT               USUARIOPADRAO DEFAULT USER,
  DATA_INC                   TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                   TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 PRIMARY KEY (PK_PNEU_POSICAO)
);
CREATE TABLE PNEU_MARCAS 
(
  ID                     INTEGER         NOT NULL,
  EMPRESA                INTEGER         NOT NULL,
  CODIGO                 INTEGER,
  DESCRICAO              VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  TIPO                      CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
 CONSTRAINT PK_PNEU_MARCAS_1 PRIMARY KEY (ID)
);
CREATE TABLE PNEU_MODELOS 
(
  ID                    INTEGER         NOT NULL,
  EMPRESA               INTEGER         NOT NULL,
  CODIGO                INTEGER,
  MODELO                VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  TAMANHO               VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  VIDAUTIL              NUMERIC( 15, 3),
  RECAP1                NUMERIC( 15, 3),
  RECAP2                NUMERIC( 15, 3),
  RECAP3                NUMERIC( 15, 3),
  RECAP4                NUMERIC( 15, 3),
  RECAP5                NUMERIC( 15, 3),
 CONSTRAINT PK_PNEU_MODELOS_1 PRIMARY KEY (ID)
);
CREATE TABLE PNEU_MOVIMENT 
(
  ID                     INTEGER         NOT NULL,
  EMPRESA                INTEGER         NOT NULL,
  CODIGO                 INTEGER,
  DESCRICAO              VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  TIPO                      CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  BAIXA                     CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  DESPESA                   CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  CODDESP                INTEGER,
 CONSTRAINT PK_PNEU_MOVIMENT_1 PRIMARY KEY (ID)
);
CREATE TABLE PNEU_MOVPNEU 
(
  ID                     INTEGER         NOT NULL,
  EMPRESA                INTEGER         NOT NULL,
  DATA                      DATE,
  PNEU                   INTEGER,
  HODOMETRO              INTEGER,
  VEICULO                INTEGER,
  MOVIMENT               INTEGER,
  POSICAO                INTEGER,
  VALOR                  NUMERIC( 15, 3),
 CONSTRAINT PK_PNEU_MOVPNEU_1 PRIMARY KEY (ID)
);
CREATE TABLE PPNEU 
(
  PK_PNEU                      INTEGER         NOT NULL,
  REFERENCIA                   VARCHAR(    30) CHARACTER SET WIN1252  COLLATE WIN1252,
  NUMEROSERIE                  VARCHAR(    30) CHARACTER SET WIN1252  COLLATE WIN1252,
  FK_MARCAS                    INTEGER,
  FK_MODELOS                   INTEGER,
  PK_FORNECEDOR                INTEGER,
  AQUISICAO_DATA                  DATE,
  TIPO                            CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  SITUACAO                        CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEICULO                      VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  HODOMETRO                    INTEGER,
  POSICAO                      INTEGER,
  HODOMETROATUAL               INTEGER,
  RESKM                        INTEGER,
  RESDIAS                      INTEGER,
  REVALTOT                     NUMERIC( 15, 3),
  RESVALMED                    NUMERIC( 15, 3),
  RESCUSTOKM                   NUMERIC( 15, 3),
  FINALIZADO                      CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  FK_PRODUTOS                  INTEGER,
  AQUISICAO_VALOR              DECIMAL( 12, 2),
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAL                   SMALLINT         DEFAULT 1,
  FK_CENTROCUSTO              SMALLINT         DEFAULT 1,
 CONSTRAINT PK_PPNEU_1 PRIMARY KEY (PK_PNEU)
);
CREATE TABLE PROCESSOS 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                      SMALLINT         DEFAULT 1 NOT NULL,
  PK_PROCESSOS                    SMALLINT         NOT NULL,
  DESCRICAO                        VARCHAR(   100)  COLLATE ISO8859_1,
  PESO                            SMALLINT,
  CUSTOMANUTENCAO                  DECIMAL( 12, 2),
  FATURAMENTOS                     DECIMAL( 12, 2),
  CUSTOMAQPARADA                   DECIMAL( 12, 2),
  TEMPOMAQPARADA                      TIME,
  TOTCUSTOMANUTENCAO               DECIMAL( 12, 2),
  SANZONALIDADE                   SMALLINT,
  RESPONSAVEL                      VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  SITUACAO                            CHAR(     1) DEFAULT 'A' COLLATE ISO8859_1,
  CRIARCELULASPREDIAL                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FK_CENTROCUSTO                   VARCHAR(    10)  COLLATE ISO8859_1,
  FK_PRIORIDADE                   SMALLINT,
 CONSTRAINT PK_PROCESSOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, PK_PROCESSOS)
);
update rdb$relations set rdb$description = 'Esta tabela descreve um local, na seguinte hierarquia

EMPRESAS
FILIAIS
DEPARTAMENTOS
SETORES
PROCESSOS - LOCAL SALA FISICA OU UMA LOCALIZAÃƒÆ’Ã¢â‚¬Â¡AO DENTRO DA PLANTA INDUSTRIAL OU ADMINISTRATIVA
CELULAS
MAQUINAS
TAGS
EQUIPAMENTOS
PECAS

' where rdb$relation_name = 'PROCESSOS';
update rdb$relation_fields set rdb$description = 'SITUACAO
ATIVO 
INATIVO
' where rdb$relation_name = 'PROCESSOS' and rdb$field_name = 'SITUACAO';
update rdb$relation_fields set rdb$description = 'ESTE CAMPO DESCREVE ANECESSIDADE DA CRIAÇÃO DOS DIVERSOS REGISTROS NA TABELA CELULAS, para instalaçoes prediais' where rdb$relation_name = 'PROCESSOS' and rdb$field_name = 'CRIARCELULASPREDIAL';
CREATE TABLE PRODUTOEMPRESA 
(
  CODPRODUTOEMPRESA                CHAVE NOT NULL,
  CLASSIFICACAOABC                  CHAR(     1)  COLLATE ISO8859_1,
  RANKINGABC                     INTEGER,
 CONSTRAINT PK_PRODUTOEMPRESA PRIMARY KEY (CODPRODUTOEMPRESA)
);
CREATE TABLE PRODUTOESTOQUELOTE 
(
  CODPRODUTOESTOQUELOTE                CHAVE NOT NULL,
  CODPRODUTOLOTE                       CHAVE ,
  CODEMPRESA                         INTEGER,
  QTDEENTRADA                          VALOR ,
  QTDESAIDA                            VALOR ,
  QTDEESTOQUE                          VALOR ,
 CONSTRAINT PK_PRODUTOESTOQUELOTE PRIMARY KEY (CODPRODUTOESTOQUELOTE)
);
CREATE TABLE PRODUTOS 
(
  PK_PRODUTOS                         VALORI NOT NULL,
  FK_SECOES                           VALORS DEFAULT 1,
  FK_GRUPOS                           VALORS DEFAULT 1,
  FK_SUBGRUPOS                        VALORS DEFAULT 1,
  PK_UNIDVENDA                        VALORS DEFAULT 6,
  DESCRICAO                          VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  PRODUTOATIVO                  FLAG_SIM_NAO DEFAULT '1',
  FLAG_PROD                     FLAG_SIM_NAO ,
  QUANT_UNIDVENDA                   NUMERICO ,
  OPE_INC                  NOME_OPERADOR_DEF ,
  DTHR_INC                     DATA_HORA_DEF ,
  OPE_ALT                      NOME_OPERADOR ,
  DTHR_ALT                         DATA_HORA ,
  PK_PROD_FAMILIA                    INTEGER         DEFAULT 1,
  RESUMIDA                               V50 ,
  CODBARRA                           VARCHAR(    13) CHARACTER SET NONE  COLLATE NONE,
  TEMVALIDADE                           CHAR(     1) CHARACTER SET NONE DEFAULT 'S' COLLATE NONE,
  CONTROLAVALIDADE                      CHAR(     1) CHARACTER SET NONE DEFAULT 'S' COLLATE NONE,
  CONTROLALOTE                          CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  VALIDADEPRODUTO                    NUMERIC( 10, 2) DEFAULT 12,
  TIPOVALIDADE                          CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  MESANOREFERENCIA                      CHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  EMITEETIQUETABARRA                    CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  EMITEETIQUETAGONDOLA                  CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  EMITEETIQUEEMBALAGEM                  CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  PESOLIQUIDO                       NUMERICO ,
  PESOBRUTO                         NUMERICO ,
  MEDIDALARGURA                     NUMERICO ,
  MEDIDAALTURA                      NUMERICO ,
  MEDIDAPROFUNDIDADE                NUMERICO ,
  TEMVASILHAME                          CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  PK_VASILHAME                       INTEGER,
  PRODUTOCONTROLADO                     CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  CLASSIFICACAOFISCAL                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  SITUACAOTRIBUTARIA                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODIGONCM                          VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  ALICOTAICMS                       NUMERICO DEFAULT 18,
  ALICOTAICMSSUBST                  NUMERICO ,
  ALICOTAIPI                        NUMERICO ,
  ALICOTAISSQN                      NUMERICO ,
  ALICOTAFRETE                      NUMERICO ,
  ALICOTAREDBASECALCULO             NUMERICO ,
  MEDIDACUBAGEM                     NUMERICO ,
  PRODUTOFRACIONADO                     CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  PRODUTOREFERENCIA                      V50 ,
  ALICOTABASECALCULO                 DECIMAL(  6, 2) DEFAULT 100,
  PRODUTOCOMPOSTO                       CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  VALORFRETE                        NUMERICO ,
  TIPOPRODUTO                       SMALLINT         DEFAULT 1,
  PK_EMBALAGEM                       INTEGER,
  QUANTIDADEMINIMA                   DECIMAL( 12, 2),
  SITUACAOPRODUTO                       CHAR(     1) DEFAULT 'A' COLLATE ISO8859_1,
  FK_TIPOENTRADAPADRAO              SMALLINT,
  FK_TIPOSAIDAPADRAO                SMALLINT,
  CUSTO_ULTIMOCALCULO              TIMESTAMP,
  FK_CTACONTABILCREDITO             SMALLINT,
  FK_CTACONTABILDEBITO              SMALLINT,
  FK_CENTROCUSTO                     VARCHAR(    10)  COLLATE ISO8859_1,
  FK_TIPOAPROPRIACAO                    CHAR(     1) DEFAULT 'D' COLLATE ISO8859_1,
  ALICOTA_COMISSAO                   DECIMAL(  6, 2),
  TIPORASTREABILIDADE                   CHAR(     1) DEFAULT 'N ' COLLATE ISO8859_1,
  PRODUTOIMPORTADO              FLAG_SIM_NAO DEFAULT 'N',
  FK_CQ_TIPO                        SMALLINT,
  CQ_NOTAMINIMA                     SMALLINT,
  CQ_QUANTPRODUCAO                  SMALLINT         DEFAULT 10,
  PRAZOENTREGA                      SMALLINT,
  LOTEECONOMICO                      DECIMAL( 12, 2),
  LOTEMINIMO                         DECIMAL( 12, 2),
  FK_TIPOCARGA                      SMALLINT,
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_UNIDADES                       SMALLINT,
  FK_UNIDVENDAS                     SMALLINT,
  FK_UNIDCOMPRAS                    SMALLINT,
  FATORUNIDCOMPRAS                     FLOAT,
  FATORUNIDVENDAS                      FLOAT,
 CONSTRAINT PK_PRODUTOS_1 PRIMARY KEY (PK_PRODUTOS)
);
update rdb$relation_fields set rdb$description = '            DESCRICAO RESUMIDA DO ITEM' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'RESUMIDA';
update rdb$relation_fields set rdb$description = 'S OU N SE PRODUTO CONTROLA VALIDADE' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'TEMVALIDADE';
update rdb$relation_fields set rdb$description = '
S OU N  SE PRODUTO CONTROLA VALIDADE' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'CONTROLAVALIDADE';
update rdb$relation_fields set rdb$description = '
S OU N SE PRODUTO CONTROLA LOTE' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'CONTROLALOTE';
update rdb$relation_fields set rdb$description = '
TEMPO DE VALIDADE DO PRODUTO' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'VALIDADEPRODUTO';
update rdb$relation_fields set rdb$description = 'TIPO DE VALIDADE
H = HORAS
DIAS
SEMANAS
MESEE
ANOS
NAO APLICAVAL' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'TIPOVALIDADE';
update rdb$relation_fields set rdb$description = '                                                                                                 MEDIDA' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'MEDIDAPROFUNDIDADE';
update rdb$relation_fields set rdb$description = 'CUBAGEM DO PRODUTO NA EMBALAGEM APRESENTADA' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'MEDIDACUBAGEM';
update rdb$relation_fields set rdb$description = 'ALICOTA DA ABSE DE CALCULO DO PRODUTO
SE DIFERENTE DE 100% USAR ESTE CAMPO PARA
DEDUZIR DO VALOR TOTAL A SER TRIBUTADO' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'ALICOTABASECALCULO';
update rdb$relation_fields set rdb$description = 'O PRODUTO EH COMPOSTO POR OUTROS PRODUTOS' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'PRODUTOCOMPOSTO';
update rdb$relation_fields set rdb$description = 'DEFINE O TIPO DE PRODUTO
PRODUTO ACABADO
PROD SEMI ACABADO
MATERIA PRIMA
EMBALAGEM
EM PRODUÃ‡ÃƒO 
MATERIAL DE CONSUMO (ESCRITORIO)
MATERIAL DE CONSUMO DIVERSOS
MATERIAL DE CONSUMO (MANUTENÃ‡AO )
MATERIAL PARA MANUTENÃ‡ÃƒO
MAQUINAS
EQUIPAMENTOS
PEÃ‡AS PARA EQUIPAMENTOS
FERRAMENTAS
EPI
UNITIZADORES (PALETES, CAIXAS, ETC)
PADRAO EH ''PRODUTO ACABADO''' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'TIPOPRODUTO';
update rdb$relation_fields set rdb$description = 'TEM QUANTIDADE MINIMA PARA FABRICAÇÃO / VENDA / COMPRA??' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'QUANTIDADEMINIMA';
update rdb$relation_fields set rdb$description = 'SITUACAO DO PRODUTO
A ATIVO
B BLOQUEADO
O OUTROS
PADRAO = ATIVO' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'SITUACAOPRODUTO';
update rdb$relation_fields set rdb$description = 'TIPO DE ENTRADA PADRAO, 
DEFINIDA NO ARQUIVO DE TIPOS DE ENTRADAS / SAIDAS
' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'FK_TIPOENTRADAPADRAO';
update rdb$relation_fields set rdb$description = 'TIPO DE SAIDA PADRAO
DEFINIDA NO ARQUIVO DE TIPOS DE ENTRADAS /SAIDAS
' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'FK_TIPOSAIDAPADRAO';
update rdb$relation_fields set rdb$description = 'DATA DO ULTIMO CALCULO DO CUSTO PADRAO

' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'CUSTO_ULTIMOCALCULO';
update rdb$relation_fields set rdb$description = 'TIPO DE APROPRIAÇCAO DO PRODUTO
''DIRETA
INDIRETA
OUTROS

Apropriação  Tipo de apropriação do produto. O produto pode ser de apropriação direta ou indireta. Produtos de apropriação direta são produtos de fácil controle e contagem e são requisitados diretamente ao seu local de armazenagem para consumo.
' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'FK_TIPOAPROPRIACAO';
update rdb$relation_fields set rdb$description = 'Rastro  Indica se o produto em questÃ£o controla rastreabilidade ou nÃ£o. Existem dois tipos de rastreabilidade:
 
L=Rastreabilidade Lote - Controle de saldos por Lote. O saldo pode ser requisitado pelo saldo nominal do lote.
S=- Rastreabilidade Sublote - Controle de saldos por Sublote. O saldo Ã© controlado em separado por cada entrada; ou seja, o saldo nominal de cada sublote.
N= NAO APLICAVEL' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'TIPORASTREABILIDADE';
update rdb$relation_fields set rdb$description = '• Prod Import  Indica se o produto é importado ou não. ' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'PRODUTOIMPORTADO';
update rdb$relation_fields set rdb$description = '• Tipo de CQ Indica o tipo de controle de qualidade a ser utilizado nas rotinas que geram informação de inspeção do produto.
• O produto pode ser controlado pelas funcionalidades de controle de qualidade de materiais (por meio do programa de baixas do CQ, um conceito simplificado de inspeção) .' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'FK_CQ_TIPO';
update rdb$relation_fields set rdb$description = '• Nota Mínima  Nota mínima do produto para entrada sem inspeção. Quando o tipo de CQ do produto for “materiais” e o item for comprado, poderá ser enviado para controle de qualidade pela nota do fornecedor.' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'CQ_NOTAMINIMA';
update rdb$relation_fields set rdb$description = '• Produções CQ  Número de produções para envio ao CQ. Quando o tipo de CQ do produto for estiver preenchido como materiais e o item for produzido, poderá ser enviado ao controle de qualidade pelo número de apontamentos de produção efetuados
Por exemplo, se nesse campo for informado o valor 1, todo apontamento efetuado enviará, automaticamente, a quantidade produzida para inspeção no controle de qualidade. Se o número informado nesse campo for 2 , um apontamento é enviado e o outro não.' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'CQ_QUANTPRODUCAO';
update rdb$relation_fields set rdb$description = 'TEMPO EM DIAS,DO PRAZO DE ENTREGA DO PRODUTO
SE FOR PRODUTO FABRICADO INTERNAMENTE, TEMPO QUE GASTA PARA SER PRODUZIDO' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'PRAZOENTREGA';
update rdb$relation_fields set rdb$description = '• Lote Economico  Lote econômico do produto. Quantidade ideal para compra e produção do produto. Com base na informação do lote econômico são calculadas possíveis quebras de quantidade nos processos de geração de solicitações de compra ou ordens de produção.' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'LOTEECONOMICO';
update rdb$relation_fields set rdb$description = '• Lote Mínimo – Lote mínimo do produto. Utilizado como quantidade mínima para produção de itens que possuem estrutura; ou seja, produtos que terão necessidade de produção, gerada automaticamente pelo Sistema.' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'LOTEMINIMO';
update rdb$relation_fields set rdb$description = 'TIPO DE CARGA PARA ENTREGA RECEBIMENTO DO PRODUTO 
EXEMPLO (SECA, REFRIGERADA, CONGELADOS, ETC)
PARA USO AO MONTAR A CARGA 
S=SECOS
M MOLHADOS
R REFRIGERADOS
C CONGELADOS
O CONFINADOS
U OUTROS
N NÃO APLICAVEL
' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'FK_TIPOCARGA';
update rdb$relation_fields set rdb$description = 'FATOR DE CONVERSAO DE UNIDADEMEDIDA PARA UNIDADE DE COMPRAS
' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'FATORUNIDCOMPRAS';
update rdb$relation_fields set rdb$description = 'FATOR DE CONVERSAO DE UNIDADEMEDIDA PARA UNIDADE DE VENDAS' where rdb$relation_name = 'PRODUTOS' and rdb$field_name = 'FATORUNIDVENDAS';
CREATE TABLE PRODUTOSPCP 
(
  ITEM                         VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO                    VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  UN                           VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  GR                           VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  DETALHE                      VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  UNI_WRK             DOUBLE PRECISION,
  UNI_WRK2            DOUBLE PRECISION,
  UNI_MED             DOUBLE PRECISION,
  UNI_MEDMDO          DOUBLE PRECISION,
  UNI_MED2            DOUBLE PRECISION,
  UNI_COR             DOUBLE PRECISION,
  UNI_COR2            DOUBLE PRECISION,
  UNI_CORMDO          DOUBLE PRECISION,
  ULT_PRECO           DOUBLE PRECISION,
  DATA_UP                      VARCHAR(   255) CHARACTER SET NONE  COLLATE NONE,
  EP0                 DOUBLE PRECISION,
  DATA_ATU                     VARCHAR(   255) CHARACTER SET NONE  COLLATE NONE,
  QTD_ACAB            DOUBLE PRECISION,
  QTD_PROC            DOUBLE PRECISION,
  QTD_EMPE            DOUBLE PRECISION,
  QTD_ENTRA           DOUBLE PRECISION,
  QTD_SAIDA           DOUBLE PRECISION,
  V_MAT_ACAB          DOUBLE PRECISION,
  V_MDO_ACAB          DOUBLE PRECISION,
  QTD_ACABI           DOUBLE PRECISION,
  V_MAT_ACAI          DOUBLE PRECISION,
  V_MDO_ACAI          DOUBLE PRECISION,
  QTD_PROCI           DOUBLE PRECISION,
  CMM_MAT             DOUBLE PRECISION,
  CMM_MDO             DOUBLE PRECISION,
  EST_MIN             DOUBLE PRECISION,
  DATA_CAD                     VARCHAR(   255) CHARACTER SET NONE  COLLATE NONE,
  EST_MAX             DOUBLE PRECISION,
  LT_DIAS             DOUBLE PRECISION,
  REVISAO             DOUBLE PRECISION,
  DATA_REV                     VARCHAR(   255) CHARACTER SET NONE  COLLATE NONE,
  RESP_REV                     VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  RENDIME             DOUBLE PRECISION,
  CEP                          VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  CFISCAL                      VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  FANTASMA                     VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DATA_ALT                     VARCHAR(   255) CHARACTER SET NONE  COLLATE NONE,
  LLC                          VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  RASTR                        VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  COM_FAB                      VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  CONMAN                       VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  LTCOMPRA            DOUBLE PRECISION,
  LTPROFIX            DOUBLE PRECISION,
  LTPROVAR            DOUBLE PRECISION,
  NESTOQUE            DOUBLE PRECISION,
  EST_MINI            DOUBLE PRECISION,
  EST_SEGU            DOUBLE PRECISION,
  EST_MULT            DOUBLE PRECISION,
  MIN_DIAS            DOUBLE PRECISION,
  CLA_ABC                      VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  EST_MAXI            DOUBLE PRECISION,
  LOT_COMPRA          DOUBLE PRECISION,
  CL_ARMAZ                     VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  DMM_MAT             DOUBLE PRECISION,
  DMM_MDO             DOUBLE PRECISION,
  D_MAT_ACAB          DOUBLE PRECISION,
  D_MDO_ACAB          DOUBLE PRECISION,
  D_MAT_ACAI          DOUBLE PRECISION,
  D_MDO_ACAI          DOUBLE PRECISION,
  ESTSEGCD                     VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  PERESTSEG           DOUBLE PRECISION,
  SHELF_LIFE          DOUBLE PRECISION,
  ORIGEM                       VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  UNI_VENDA           DOUBLE PRECISION,
  CLASSE                       VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CONCENTRA           DOUBLE PRECISION,
  CCUSTO                       VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  TAXA_SUP            DOUBLE PRECISION,
  PARAEXPL                     VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  TRIB_IPI                     VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  TRIB_ICM                     VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  PESO                DOUBLE PRECISION,
  PESO_BR             DOUBLE PRECISION,
  LO_COM_AUX          DOUBLE PRECISION,
  CCNOVO2                      VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CCUSTO_2                     VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  CONTA_2                      VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  A_MAT_ACAI          DOUBLE PRECISION,
  A_MAT_ACAB          DOUBLE PRECISION,
  AMM_MAT             DOUBLE PRECISION,
  B_MAT_ACAI          DOUBLE PRECISION,
  B_MAT_ACAB          DOUBLE PRECISION,
  BMM_MAT             DOUBLE PRECISION,
  C_MAT_ACAI          DOUBLE PRECISION,
  C_MAT_ACAB          DOUBLE PRECISION,
  SMM_MAT             DOUBLE PRECISION,
  E_MAT_ACAI          DOUBLE PRECISION,
  E_MAT_ACAB          DOUBLE PRECISION,
  EMM_MAT             DOUBLE PRECISION,
  F_MAT_ACAI          DOUBLE PRECISION,
  F_MAT_ACAB          DOUBLE PRECISION,
  FMM_MAT             DOUBLE PRECISION,
  G_MAT_ACAI          DOUBLE PRECISION,
  G_MAT_ACAB          DOUBLE PRECISION,
  GMM_MAT             DOUBLE PRECISION,
  UNI_CORIPI          DOUBLE PRECISION,
  UNI_CORB            DOUBLE PRECISION,
  UNI_CORIP2          DOUBLE PRECISION,
  UNI_CORIPB          DOUBLE PRECISION,
  V_FRETE             DOUBLE PRECISION,
  TOLNEST             DOUBLE PRECISION,
  VD_PRECO            DOUBLE PRECISION,
  VD_PC               DOUBLE PRECISION,
  AL_DIFIPI           DOUBLE PRECISION,
  TEM_DIFIPI                   VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  VD_PRECOL           DOUBLE PRECISION,
  LINHA                        VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  RASTREALIBIDADE         FLAG_SIM_NAO DEFAULT 'N'
);
update rdb$relation_fields set rdb$description = 'SE O PRODUTO EH RASTREAVEL
SIM OU NAO
PADRAO NAO
' where rdb$relation_name = 'PRODUTOSPCP' and rdb$field_name = 'RASTREALIBIDADE';
CREATE TABLE PRODUTOSSNGPC 
(
  CODIGO                              VARCHAR(    20) NOT NULL COLLATE ISO8859_1,
  PRODUTO                             VARCHAR(    50)  COLLATE ISO8859_1,
  PRECOCUSTO                          NUMERIC( 15, 2),
  LUCRO                                 FLOAT,
  PRECOVENDA                          NUMERIC( 15, 2),
  DESCONTO                            NUMERIC( 15, 2),
  UNIDADE                             VARCHAR(     2)  COLLATE ISO8859_1,
  TRIBUTACAO                          VARCHAR(    25)  COLLATE ISO8859_1,
  ALIQUOTA                            NUMERIC( 15, 2),
  IPI                                 NUMERIC( 15, 2),
  BASECALCULO                         NUMERIC( 15, 2),
  FORNECEDOR                          INTEGER,
  LABORATORIO                         INTEGER,
  SECAO                               INTEGER,
  SUBSECAO                            INTEGER,
  ESTOQUEATUAL                   T_QUANTIDADE ,
  ESTOQUEMINIMO                  T_QUANTIDADE ,
  ESTOQUEIDEAL                   T_QUANTIDADE ,
  QUANTEMB                            NUMERIC( 15, 2),
  DESATIVAESTOQUE                     T_YESNO ,
  INICIOPROM                             DATE,
  FINALPROM                              DATE,
  DESCPROMVISTA                       NUMERIC( 15, 2),
  DESCPROMPRAZO                       NUMERIC( 15, 2),
  ATALHOBALANCA                       INTEGER,
  COMISSAO                            NUMERIC( 15, 2),
  BONUS                               NUMERIC( 15, 2),
  IMPRIMIR                            T_YESNO ,
  DESCRICAOFRACIONADO                 VARCHAR(    50)  COLLATE ISO8859_1,
  QUANTIDADEFRACIONADO           T_QUANTIDADE ,
  ESTOQUEATUALFRACIONADO         T_QUANTIDADE ,
  PRECOFRACIONADO                     NUMERIC( 15, 2),
  PRECOPROPORCIONAL                   T_YESNO ,
  PRECOPROMPRAZO                      NUMERIC( 15, 2),
  PRECOPROMVISTA                      NUMERIC( 15, 2),
  PRECOPROMFRACVISTA                  NUMERIC( 15, 2),
  PRECOPROMFRACPRAZO                  NUMERIC( 15, 2),
  UNIDADECONVERSAO                    VARCHAR(     2)  COLLATE ISO8859_1,
  PRINCIPIOATIVO                      VARCHAR(   130)  COLLATE ISO8859_1,
  CONTROLADO                          T_YESNO ,
  REGMS                               VARCHAR(    13)  COLLATE ISO8859_1,
  APRESENTACAO                        VARCHAR(    50)  COLLATE ISO8859_1,
 CONSTRAINT PK_PRODUTOSSNGPC_1 PRIMARY KEY (CODIGO)
);
CREATE TABLE PRODUTOS_ANALISE 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_PRODUTOS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANALISEPRODUTOS             SMALLINT         NOT NULL,
  VAL_CUSTOATUAL                  DECIMAL( 12, 2),
  VAL_CUSTOMED                    DECIMAL( 12, 2),
  VAL_CUSTOPREVISTO               DECIMAL( 12, 2),
  PERC_CUSTOOP                    DECIMAL(  6, 2),
  PERC_FRETE                      DECIMAL(  6, 2),
  PERC_IMPOSTOS                   DECIMAL(  6, 2),
  PERC_LUCRO_REV                  DECIMAL(  6, 2),
  PERC_LUCRO_CONS                 DECIMAL(  6, 2),
  PERC_DESC_REV                   DECIMAL(  6, 2),
  PERC_DESC_CONS                  DECIMAL(  6, 2),
  VAL_VENDA_REV                   DECIMAL( 12, 2),
  VAL_VENDA_CONS                  DECIMAL( 12, 2),
  PERC_COMISSAOPROD               DECIMAL(  6, 2),
  PERC_IPI_ENTRADA                DECIMAL(  6, 2),
  PERC_IPI_SAIDA                  DECIMAL(  6, 2),
  PERC_ICM_CREDITO                DECIMAL(  6, 2),
  PRECOMODIFICADO                    CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  PERC_ICM_DEBITO                 DECIMAL(  6, 2),
  FK_CONTACONTABIL                INTEGER,
 CONSTRAINT PK_PRODUTOS_ANALISE_1 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PRODUTOS, PK_ANALISEPRODUTOS)
);
CREATE TABLE PRODUTOS_APRESENTACAO 
(
  PK_PROD_APRESENTACAO             SMALLINT         NOT NULL,
  DESCRICAO                         VARCHAR(    50) NOT NULL COLLATE ISO8859_1,
 CONSTRAINT PK_PRODUTOS_APRESENTACAO PRIMARY KEY (PK_PROD_APRESENTACAO)
);
CREATE TABLE PRODUTOS_CODIGOS 
(
  FK_PRODUTOS                       VALORI NOT NULL,
  PK_PRODUTOS_CODIGOS               VALORS NOT NULL,
  COD_REF                    CODIGO_BARRAS NOT NULL,
  FLAG_TCODE          FLAG_TIPO_CODIGO_PRODUTO NOT NULL,
  FLAG_TBARCODE       FLAG_TIPO_CODIGO_BARRAS NOT NULL,
  OPE_INC                NOME_OPERADOR_DEF ,
  DTHR_INC                   DATA_HORA_DEF ,
  OPE_ALT                    NOME_OPERADOR ,
  DTHR_ALT                       DATA_HORA ,
  DSC_CODE                  DESCRICAO_30RQ NOT NULL,
 CONSTRAINT PK_PRODUTOS_CODIGOS_1 PRIMARY KEY (FK_PRODUTOS, PK_PRODUTOS_CODIGOS)
);
CREATE TABLE PRODUTOS_COMPOSICOES 
(
  FK_EMPRESAS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_PRODUTOS                         SMALLINT         DEFAULT 1 NOT NULL,
  PK_PRODUTOS_COMPOSICOES             SMALLINT         NOT NULL,
  FK_INSUMOS                          SMALLINT         DEFAULT 1 NOT NULL,
  QUANTPRODUTO                           FLOAT,
  SEQ_COMPOSICAO                      SMALLINT,
  QUANTDEFINIDA                          FLOAT,
 CONSTRAINT PK_PRODUTOS_COMPOSICOES_1 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PRODUTOS, PK_PRODUTOS_COMPOSICOES)
);
CREATE TABLE PRODUTOS_COMPRAS 
(
  FK_PRODUTOS                       VALORI NOT NULL,
  FK_TIPO_ACABAMENTOS               VALORS ,
  FK_TIPO_REFERENCIAS               VALORS ,
  FK_UNIDADES                       VALORS ,
  FLAG_EMP                    FLAG_SIM_NAO ,
  FLAG_CMPR                   FLAG_SIM_NAO ,
  FLAG_COMP                   FLAG_SIM_NAO ,
  FLAG_TINS               FLAG_TIPO_INSUMO NOT NULL,
  FLAG_TMAT             FLAG_TIPO_MATERIAL NOT NULL,
  VLR_UNIT              NUMERO_PEQUENO_4CD ,
  PER_DSCT_VND           NUMERO_PERCENTUAL ,
  OPE_INC                NOME_OPERADOR_DEF ,
  DTHR_INC                   DATA_HORA_DEF ,
  OPE_ALT                    NOME_OPERADOR ,
  DTHR_ALT                       DATA_HORA ,
  FK_CLASSIFICACAO                  VALORI ,
 CONSTRAINT PK_PRODUTOS_COMPRAS_1 PRIMARY KEY (FK_PRODUTOS)
);
CREATE TABLE PRODUTOS_CUSTOS 
(
  FK_EMPRESAS                          VALORI NOT NULL,
  FK_PRODUTOS                          VALORI NOT NULL,
  FK_VW_FORNECEDORES                   VALORI ,
  QTD_PEDF                 NUMERO_PEQUENO_4CD ,
  CUST_FINAL                 NUMERO_MEDIO_4CD ,
  CUST_FORN                  NUMERO_MEDIO_4CD ,
  CUST_RJST                  NUMERO_MEDIO_4CD ,
  CUST_UFRN                  NUMERO_MEDIO_4CD ,
  CUST_REAL                  NUMERO_MEDIO_4CD ,
  CUST_MED                   NUMERO_MEDIO_4CD ,
  DTA_USLD                               DATA ,
  DTA_UCMP                               DATA ,
  FLAG_RJST                      FLAG_SIM_NAO ,
  DTA_PRV_ENTR_COMPRA                    DATA ,
  QTD_DIAS_REP                         VALORS ,
  QTD_GRNT                 NUMERO_PEQUENO_4CD ,
  QTD_DIAS_ENTR                        VALORS ,
  QTD_CNS_MED              NUMERO_PEQUENO_4CD ,
  QTD_DIAS_ESTQ            NUMERO_PEQUENO_4CD ,
  QTD_ESTQ                 NUMERO_PEQUENO_4CD ,
  QTD_RSRV                 NUMERO_PEQUENO_4CD ,
  QTD_EMAX                 NUMERO_PEQUENO_4CD ,
  QTD_EMIN                 NUMERO_PEQUENO_4CD ,
  QTD_ESTQ_QR              NUMERO_PEQUENO_4CD ,
  DTA_UMOV                               DATA ,
  DTA_URSV                               DATA ,
  DTA_UINV                               DATA ,
  OPE_INC                   NOME_OPERADOR_DEF ,
  DTHR_INC                      DATA_HORA_DEF ,
  OPE_ALT                       NOME_OPERADOR ,
  DTHR_ALT                          DATA_HORA ,
  KC_PRODUTOS_HISTORICOS               VALORI ,
  QTD_CMP_MED              NUMERO_PEQUENO_4CD ,
 CONSTRAINT PK_PRODUTOS_CUSTOS_1 PRIMARY KEY (FK_EMPRESAS, FK_PRODUTOS)
);
CREATE TABLE PRODUTOS_ESTOQUES 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_PRODUTOS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_UNIDADES                    SMALLINT         DEFAULT 6 NOT NULL,
  ESTOQUEGARANTIA                   FLOAT,
  ESTOQUERESERVADO                  FLOAT,
  ESTOQUEMAXIMO                     FLOAT,
  ESTOQUEMINIMO                     FLOAT,
  USER_INC                  USUARIOPADRAO DEFAULT USER,
  DATA_INC                      TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  USER_ALT                  USUARIOPADRAO DEFAULT USER,
  DATA_ALT                      TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  ESTOQUEINICIAL                    FLOAT,
  ENTRADASACUMULADAS                FLOAT,
  SAIDASACUMULADAS                  FLOAT,
  ULTIMASAIDA                   TIMESTAMP,
  ULTIMAENTRADA                 TIMESTAMP,
  ULTIMOINVENTARIO              TIMESTAMP,
  ESTOQUEMEDIO                      FLOAT,
  ESTOQUEATUAL                      FLOAT,
  ESTOQUEPEDIDO                     FLOAT,
  ESTOQUEFUTURO                     FLOAT,
  ESTOQUEDISPONIVEL                 FLOAT,
  PONTOPEDIDO                       FLOAT,
  ESTOQUESEGURANCA                  FLOAT,
 CONSTRAINT PK_PRODUTOS_ESTOQUES_1 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PRODUTOS)
);
CREATE TABLE PRODUTOS_FAIXACOMISSAO 
(
  FK_EMPRESAS                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                           SMALLINT         DEFAULT 1 NOT NULL,
  FK_PRODUTOS                          SMALLINT         DEFAULT 1 NOT NULL,
  PK_PRODUTOSFAIXACOMISSAO             SMALLINT         NOT NULL,
  VALORINICIAL                          DECIMAL( 12, 2),
  VALORFINAL                            DECIMAL( 12, 2),
  COMISSAO                              DECIMAL(  6, 2),
 CONSTRAINT PK_PRODUTOS_FAIXACOMISSAO PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PRODUTOS, PK_PRODUTOSFAIXACOMISSAO)
);
CREATE TABLE PRODUTOS_FAMILIAS 
(
  PK_SECAO                       INTEGER         NOT NULL,
  PK_GRUPOS                      INTEGER         NOT NULL,
  PK_SUBSGRUPOS                  INTEGER         NOT NULL,
  PK_FAMILIA                     INTEGER         NOT NULL,
  DESCRICAO                          V50 NOT NULL,
  PRECOUNICO                FLAG_SIM_NAO ,
  LOCAL_ARMAZENAGEM             SMALLINT,
  PATRIMONIO                        CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
 CONSTRAINT PK_PRODUTOS_FAMILIAS_1 PRIMARY KEY (PK_SECAO, PK_GRUPOS, PK_SUBSGRUPOS, PK_FAMILIA)
);
update rdb$relation_fields set rdb$description = 'define o local de armazenagem
SECOS (GERAIS, GRANULADOS ETC
RESFRIADOS FRIOS, CHOCOLATES, MANTEIGAS, IOGURTES
CONGELADOS (CARNES
SEGREGADOS (VENENOS, MAT. LIMPEZA ETC)
CERCADOS (PRODUTOS SENSIVEIS, PILHAS, BARBEADORES ETC
DIFERENCIADOS
OUTROS
PADRAO É 1 - SECOS GERAIS' where rdb$relation_name = 'PRODUTOS_FAMILIAS' and rdb$field_name = 'LOCAL_ARMAZENAGEM';
CREATE TABLE PRODUTOS_FORNECEDOR 
(
  PK_PRODUTOS                       INTEGER         NOT NULL,
  PK_FORNECEDOR                     INTEGER         NOT NULL,
  PK_PROD_FORNECEDOR                INTEGER         NOT NULL,
  PK_EMBALAGEM                      INTEGER,
  REFERENCIAFORNECEDOR                  V10 ,
  PRAZOENTREGA                     SMALLINT         DEFAULT 3,
  ALICOTAIPI                        INTEGER,
  ALICOTAICMS                      SMALLINT,
  REDBASEICMS                       DECIMAL(  6, 2),
  ALICOTAICMSSUBST                  DECIMAL(  6, 2),
  ALICOTAFRETE                      DECIMAL(  6, 2),
  FRETEFOBFIB                          CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  PK_TIPODESCONTO                  SMALLINT,
  ALICOTADESCONTO                   DECIMAL(  6, 2),
  PK_TRIBUTACAO                        CHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  QUANTIDADEMINIMA                  INTEGER,
  CUSTOBASICO                       DECIMAL( 15, 2),
  OBSERVACAO                           BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  PRIMEIRACOMPRA                       DATE,
  ULTIMACOMPRA                         DATE,
  CONTROLELOTE                     SMALLINT,
  NOTAAVALIACAO                       FLOAT,
 CONSTRAINT PK_PRODUTOS_FORNECEDOR_1 PRIMARY KEY (PK_PRODUTOS, PK_FORNECEDOR, PK_PROD_FORNECEDOR)
);
update rdb$relation_fields set rdb$description = 'Controle Lote  - Caso o usuÃ¡rio queira controlar o envio de materiais ao C.Q. , esse campo determina a freqÃ¼Ãªncia de inspeÃ§Ã£o do produto de um determinado fornecedor  quando do recebimento do material
Exemplo: com o CONTROLELOTE = 10, a cada dez recebimentos deste fornecedor, um serÃ¡ direcionado ao armazÃ©m de C.Q..' where rdb$relation_name = 'PRODUTOS_FORNECEDOR' and rdb$field_name = 'CONTROLELOTE';
update rdb$relation_fields set rdb$description = 'Nota de avaliaÃ§Ã£o do fornecedor para o produto. Para esse controle, cada produto deverÃ¡, tambÃ©m, possuir uma pontuaÃ§Ã£o mÃ­nima para o controle de qualidade (cadastro de Produtos).
Na digitaÃ§Ã£o do Documento de Entrada, Ã© feita uma avaliaÃ§Ã£o entre a pontuaÃ§Ã£o fornecedor (amarraÃ§Ã£o Produto X Fornecedor) e a pontuaÃ§Ã£o do produto.
Caso a pontuaÃ§Ã£o do fornecedor nÃ£o atinja a pontuaÃ§Ã£o do produto, o lote do material serÃ¡ enviado ao armazÃ©m do controle de qualidade . Se a pontuaÃ§Ã£o do fornecedor atingir a valor mÃ­nima exigido do produto, o lote do material passarÃ¡ pelo processo de avaliaÃ§Ã£o.' where rdb$relation_name = 'PRODUTOS_FORNECEDOR' and rdb$field_name = 'NOTAAVALIACAO';
CREATE TABLE PRODUTOS_FORN_HISTORICOS 
(
  FK_EMPRESAS                      VALORI NOT NULL,
  FK_PRODUTOS                      VALORI NOT NULL,
  FK_VW_FORNECEDORES               VALORI NOT NULL,
  DTHR_INC                  DATA_HORA_DEF NOT NULL,
  PRE_TAB              NUMERO_PEQUENO_4CD ,
  PRE_FINAL            NUMERO_PEQUENO_4CD ,
  FRETE_INS            NUMERO_PEQUENO_4CD ,
  PRE_TAB_ANT          NUMERO_PEQUENO_4CD ,
  PRE_FINAL_ANT        NUMERO_PEQUENO_4CD ,
  FRETE_INS_ANT        NUMERO_PEQUENO_4CD ,
  OPE_INC               NOME_OPERADOR_DEF ,
 CONSTRAINT PK_PRODUTOS_FORN_HISTORICOS_1 PRIMARY KEY (FK_EMPRESAS, FK_PRODUTOS, FK_VW_FORNECEDORES, DTHR_INC)
);
CREATE TABLE PRODUTOS_GRUPOS 
(
  PK_SECAO                INTEGER         NOT NULL,
  PK_GRUPO                INTEGER         NOT NULL,
  DESCRICAO                   V50 ,
  PATRIMONIO                 CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
 CONSTRAINT PK_PRODUTOS_GRUPOS_1 PRIMARY KEY (PK_SECAO, PK_GRUPO)
);
CREATE TABLE PRODUTOS_IMAGENS 
(
  FK_PRODUTOS               VALORI NOT NULL,
  FLAG_TIMG       FLAG_TIPO_IMAGEM NOT NULL,
  IMG_PROD            BLOB_BINARIO ,
  OPE_INC        NOME_OPERADOR_DEF ,
  DTHR_INC           DATA_HORA_DEF ,
  OPE_ALT            NOME_OPERADOR ,
  DTHR_ALT               DATA_HORA ,
 CONSTRAINT PK_PRODUTOS_IMAGENS_1 PRIMARY KEY (FK_PRODUTOS)
);
CREATE TABLE PRODUTOS_IMPOSTOS 
(
  FK_EMPRESAS                           VALORI NOT NULL,
  FK_PRODUTOS                           VALORI NOT NULL,
  FK_TIPO_IMPOSTOS                      VALORS NOT NULL,
  OPE_INC                    NOME_OPERADOR_DEF DEFAULT user,
  DTHR_INC                       DATA_HORA_DEF DEFAULT current_timestamp,
  OPE_ALT                        NOME_OPERADOR ,
  DTHR_ALT                           DATA_HORA ,
  FK_CLASSIFICACAO_FISCAL         DESCRICAO_20 ,
 CONSTRAINT PK_PRODUTOS_IMPOSTOS_1 PRIMARY KEY (FK_EMPRESAS, FK_PRODUTOS, FK_TIPO_IMPOSTOS)
);
CREATE TABLE PRODUTOS_LOGISTICA 
(
  FK_PRODUTOS                         INTEGER         NOT NULL,
  PK_PROD_LOGISTICA                   INTEGER         NOT NULL,
  FK_EMBALAGENS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_UNIDADES                        SMALLINT         DEFAULT 1 NOT NULL,
  QUANTIDADE                          DECIMAL( 12, 2),
  FK_PROD_ARMAZEM                    SMALLINT,
  MED_LARGURA                         DECIMAL( 12, 2),
  MED_ALTURA                          DECIMAL( 12, 2),
  MED_PROFUNDIDADE                    DECIMAL( 12, 2),
  MED_CUBAGEM                         NUMERIC(  8, 6) COMPUTED BY (MED_LARGURA * MED_ALTURA * MED_PROFUNDIDADE),
  FATORARMAZENAMENTO                 SMALLINT,
  FATOREMPILHAGEM                    SMALLINT,
  ROTACIONAPRODUTO               FLAG_SIM_NAO ,
  FK_ZONAARMAZENAMENTO               SMALLINT,
  FK_UNIDADES_UNITIZACAO             SMALLINT,
 PRIMARY KEY (FK_PRODUTOS, PK_PROD_LOGISTICA)
);
update rdb$relation_fields set rdb$description = 'CODIGO DA EMBALAGEM DO PRODUTO
' where rdb$relation_name = 'PRODUTOS_LOGISTICA' and rdb$field_name = 'FK_EMBALAGENS';
update rdb$relation_fields set rdb$description = 'CODIGO DA UNIDADE DE PRODUTOS NA EMBALAGEM' where rdb$relation_name = 'PRODUTOS_LOGISTICA' and rdb$field_name = 'FK_UNIDADES';
update rdb$relation_fields set rdb$description = '• Fator Armaz. - Fator de Armazenamento do Produto. É a quantidade considerada para armazenar determinado produto.Ex: Se um produto é armazenado/carregado de 4 em 4 peças, o campo deve estar preenchido com 4.' where rdb$relation_name = 'PRODUTOS_LOGISTICA' and rdb$field_name = 'FATORARMAZENAMENTO';
update rdb$relation_fields set rdb$description = '• Empilhagem – Fator de empilhagem, fazendo referência à quantidade de embalagens que podem sobrepor umas às outras, no momento da carga no veículo.' where rdb$relation_name = 'PRODUTOS_LOGISTICA' and rdb$field_name = 'FATOREMPILHAGEM';
update rdb$relation_fields set rdb$description = '• Rotaciona Pr. - Indica se o produto permite rotação para armazenagem em posições diferentes' where rdb$relation_name = 'PRODUTOS_LOGISTICA' and rdb$field_name = 'ROTACIONAPRODUTO';
update rdb$relation_fields set rdb$description = 'Zona Armaz. - ndica a zona de armazenagem para qual o produto será endereçado.' where rdb$relation_name = 'PRODUTOS_LOGISTICA' and rdb$field_name = 'FK_ZONAARMAZENAMENTO';
update rdb$relation_fields set rdb$description = 'UM. Medida – Indica a unidade de medida que deve ser considerada para unitização, seja numa carga, seja num processo de endereçamento.' where rdb$relation_name = 'PRODUTOS_LOGISTICA' and rdb$field_name = 'FK_UNIDADES_UNITIZACAO';
CREATE TABLE PRODUTOS_LOTACOES 
(
  FK_EMPRESAS                    VALORI NOT NULL,
  FK_PRODUTOS                    VALORI NOT NULL,
  FK_ALMOXARIFADOS               VALORS NOT NULL,
  FK_LOTACOES                    VALORS NOT NULL,
  QTD_LOT            NUMERO_PEQUENO_4CD NOT NULL,
  OPE_INC             NOME_OPERADOR_DEF ,
  DTHR_INC                DATA_HORA_DEF ,
  OPE_ALT                 NOME_OPERADOR ,
  DTHR_ALT                    DATA_HORA ,
 CONSTRAINT PK_PRODUTOS_LOTACOES_1 PRIMARY KEY (FK_EMPRESAS, FK_PRODUTOS, FK_ALMOXARIFADOS, FK_LOTACOES)
);
CREATE TABLE PRODUTOS_MAQUINAS 
(
  FK_PRODUTOS                      VALORS NOT NULL,
  FK_VW_FORNECEDORES               VALORI ,
  DTA_AQU                            DATA ,
  POT_MAQ              NUMERO_PEQUENO_4CD ,
  NUM_OPE                          VALORS ,
  DTA_URVS                      DATA_HORA ,
  TMMP_MAQ                         VALORS ,
  MTBF_MAQ                         VALORS ,
  OPE_INC               NOME_OPERADOR_DEF ,
  DTHR_INC                  DATA_HORA_DEF ,
  OPE_ALT                   NOME_OPERADOR ,
  DTHR_ALT                      DATA_HORA ,
 CONSTRAINT PK_PRODUTOS_MAQUINAS_1 PRIMARY KEY (FK_PRODUTOS)
);
CREATE TABLE PRODUTOS_MARCAS 
(
  PK_PROD_MARCAS             SMALLINT         NOT NULL,
  DESCRICAO                   VARCHAR(    50) CHARACTER SET WIN1252 NOT NULL COLLATE WIN1252,
  USER_INC              USUARIOPADRAO DEFAULT USER,
  USER_ALT              USUARIOPADRAO DEFAULT USER,
  DATA_INC                  TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                  TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_PRODUTOS_MARCAS_1 PRIMARY KEY (PK_PROD_MARCAS)
);
update rdb$relations set rdb$description = 'TABELA QUE CONTEM AS MARCAS DOS PRODUTOS' where rdb$relation_name = 'PRODUTOS_MARCAS';
CREATE TABLE PRODUTOS_MARGEM 
(
  FK_EMPRESAS                           VALORI NOT NULL,
  FK_PRODUTOS                           VALORI NOT NULL,
  FK_SITUACAO_TRIBUTARIAS               VALORS DEFAULT 0 NOT NULL,
  FK_ORIGENS_TRIBUTARIAS                VALORS DEFAULT 0 NOT NULL,
  FK_CLASSIFICACAO_FISCAL         DESCRICAO_20 ,
  MRG_LCR                        NUMERO_INDICE DEFAULT 0.0 NOT NULL,
  SIT_TRIB                 SITUACAO_TRIBUTARIA NOT NULL,
  OPE_INC                    NOME_OPERADOR_DEF DEFAULT user,
  DTHR_INC                       DATA_HORA_DEF DEFAULT current_timestamp,
  OPE_ALT                        NOME_OPERADOR ,
  DTHR_ALT                           DATA_HORA ,
 CONSTRAINT PK_PRODUTOS_MARGEM_1 PRIMARY KEY (FK_EMPRESAS, FK_PRODUTOS)
);
CREATE TABLE PRODUTOS_MODELOS 
(
  PK_PROD_MODELOS             SMALLINT         NOT NULL,
  DESCRICAO                    VARCHAR(    20)  COLLATE ISO8859_1,
  FK_MARCAS                    INTEGER         DEFAULT 1 NOT NULL,
 PRIMARY KEY (PK_PROD_MODELOS)
);
update rdb$relations set rdb$description = 'TABELA QUE CONTEM OS MODELOS DAS DIVERSAS MARCAS' where rdb$relation_name = 'PRODUTOS_MODELOS';
CREATE TABLE PRODUTOS_PECAS 
(
  FK_PRODUTOS                 VALORI NOT NULL,
  MAJ_VER                     VALORS DEFAULT 1 NOT NULL,
  MIN_VER                     VALORS DEFAULT 0 NOT NULL,
  "VERSION"             DESCRICAO_10 DEFAULT '1.0' NOT NULL,
  ALT_PEC               NUMERO_MEDIO ,
  PROF_PEC              NUMERO_MEDIO ,
  LARG_PEC              NUMERO_MEDIO ,
  FLAG_TCOMP          FLAG_TIPO_PECA ,
  MOT_NVER            DESCRICAO_50RQ NOT NULL,
  FLAG_OP               FLAG_SIM_NAO ,
  DTA_LAST_PRD                  DATA ,
  DTA_FIRST_LIB                 DATA ,
  DTA_LAST_LIB                  DATA ,
  OPE_INC          NOME_OPERADOR_DEF ,
  DTHR_INC             DATA_HORA_DEF ,
  OPE_ALT              NOME_OPERADOR ,
  DTHR_ALT                 DATA_HORA ,
 CONSTRAINT PK_PRODUTOS_PECAS_1 PRIMARY KEY (FK_PRODUTOS)
);
CREATE TABLE PRODUTOS_PECAS_HISTORICOS 
(
  FK_PRODUTOS_PECAS               VALORI NOT NULL,
  MAJ_VER                         VALORS NOT NULL,
  MIN_VER                         VALORS NOT NULL,
  COD_REF            REFERENCIA_PRODUTOS NOT NULL,
  DSC_PEC                 DESCRICAO_50RQ NOT NULL,
  ALT_PEC                   NUMERO_MEDIO ,
  PROF_PEC                  NUMERO_MEDIO ,
  LARG_PEC                  NUMERO_MEDIO ,
  IMG_PEC                DESCRICAO_100RQ NOT NULL,
  FLAG_TIMG             FLAG_TIPO_IMAGEM NOT NULL,
  FLAG_TCOMP              FLAG_TIPO_PECA ,
  FLAG_ATV                  FLAG_SIM_NAO ,
  FLAG_OP                   FLAG_SIM_NAO ,
  OBS_PEC                     BLOB_TEXTO ,
  MOT_NVER                DESCRICAO_50RQ NOT NULL,
  DTA_LAST_PRD                      DATA ,
  DTA_FIRST_LIB                     DATA ,
  DTA_LAST_LIB                      DATA ,
  OPE_INC              NOME_OPERADOR_DEF ,
  DTHR_INC                 DATA_HORA_DEF ,
  OPE_ALT                  NOME_OPERADOR ,
  DTHR_ALT                     DATA_HORA ,
 CONSTRAINT PK_PRODUTOS_PECAS_HISTORICOS_1 PRIMARY KEY (FK_PRODUTOS_PECAS, MAJ_VER, MIN_VER)
);
CREATE TABLE PRODUTOS_PRECOS 
(
  FK_PRODUTOS                        VALORI NOT NULL,
  OPE_INC                 NOME_OPERADOR_DEF DEFAULT user,
  DTHR_INC                    DATA_HORA_DEF DEFAULT current_timestamp,
  OPE_ALT                     NOME_OPERADOR ,
  DTHR_ALT                        DATA_HORA ,
  FLAG_FIX                     FLAG_SIM_NAO ,
  MARGEMMINIMA                     NUMERICO DEFAULT 10,
  MARGEMMAXIMA                     NUMERICO ,
  MARGEMMEDIA                       NUMERIC( 18, 2),
  ALICOTADESCVISTA                 NUMERICO ,
  ALICDESCPRAZO                    NUMERICO ,
  ALICDESCMAXIMO                   NUMERICO ,
  CUSTOCONTABIL                    NUMERICO ,
  CUSTOREPOSICAO                   NUMERICO ,
  CUSTOMEDIO                       NUMERICO ,
  CUSTOEMEDIOCALCULADO             NUMERICO ,
  PODETERDESCPRAZO                     CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  CUSTOMEDIOFINANCEIRO             NUMERICO ,
  CUSTOMEDIODATAINICIO            TIMESTAMP,
  CUSTOMEDIODATAFINAL             TIMESTAMP,
  PRECOVENDA                       NUMERICO ,
  PRECOVENDAANTERIOR               NUMERICO ,
  PRECOVENDADATA                       DATA ,
  PRECOVENDAPROMOCAO               NUMERICO ,
  INICIOPROMOCAO                       DATA ,
  FINALPROMOCAO                        DATA ,
  SEQUENCIAL                        INTEGER         NOT NULL,
  CUSTODOLAR                       NUMERICO ,
  PRECOVENDADOLAR                  NUMERICO ,
  TIPOPRECOVENDA                       CHAR(     1) CHARACTER SET NONE DEFAULT 'R' COLLATE NONE,
  PK_EMBALAGEM                      INTEGER,
  PK_PROD_TIPO_PRECO               SMALLINT         DEFAULT 1
);
update rdb$relation_fields set rdb$description = 'TIPO DE CALCULO DE PRECO DE VENDA
R REPOSICAO CALCULADO COM A REPOSICAO DO PRODUTO
D PREÇO DIGITADO (SISTEMA CALCULA E OPERADOR AJUSTA
F TABELADO - COM PREÇO INFORMADO PELO FORNECEDOR (CIGARROS, ETC )
G TABELADO COM PRECO INFORMADO PELO GOVERNO
OUTROS' where rdb$relation_name = 'PRODUTOS_PRECOS' and rdb$field_name = 'TIPOPRECOVENDA';
CREATE TABLE PRODUTOS_PRECO_HISTOR 
(
  PK_EMPRESA                          INTEGER         NOT NULL,
  PK_FILIAL                           INTEGER         NOT NULL,
  PK_PRODUTOS                         INTEGER         NOT NULL,
  PK_DATAALTERACAO                  TIMESTAMP         DEFAULT CURRENT_TIMESTAMP  NOT NULL,
  SEQUENCIAL                          INTEGER         NOT NULL,
  FK_MOTIVOALTERACAO                     CHAR(     1) CHARACTER SET NONE DEFAULT 'R' COLLATE NONE,
  CUSTOREPOSICAOANTERIOR              DECIMAL( 15, 2),
  CUSTOCONTABILANTERIOR               DECIMAL( 15, 2),
  PRECOVENDAANTERIOR                  DECIMAL( 15, 2),
  CUSTOREPOSICAO                      DECIMAL( 15, 2),
  CUSTOCONTABIL                       DECIMAL( 15, 2),
  PRECOVENDA                          DECIMAL( 15, 2),
 CONSTRAINT PK_PRODUTOS_PRECO_HISTOR_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL, PK_PRODUTOS, PK_DATAALTERACAO, SEQUENCIAL)
);
update rdb$relation_fields set rdb$description = 'MOTIVO DA ALTERAÇÃO
E = POR ENTRADA (COMPRA)
R = REAJUSTE AUTOMATICO
I = INICIO PROMOCAO
L = FINAL PROMOCAO
G = TABELA DO GOVERNO
F = TABELA DO FORNECEDOR
T = DESCONTO TEMPORARIO
P = PESQUISA DE PREÇOS
O = OUTROS
PADRAO = R' where rdb$relation_name = 'PRODUTOS_PRECO_HISTOR' and rdb$field_name = 'FK_MOTIVOALTERACAO';
CREATE TABLE PRODUTOS_PROMOCAO 
(
  PK_EMPRESA                         INTEGER         NOT NULL,
  PK_FILIAL                          INTEGER         NOT NULL,
  PK_PROMOCAO                        INTEGER         NOT NULL,
  PK_PRODUTO                         INTEGER         NOT NULL,
  DATAINICIO                       TIMESTAMP         NOT NULL,
  DATAFINAL                             BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  APENASESTOQUE                      VARCHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  PK_UNIDADES                        INTEGER,
  QUANTIDADEPROMOCAO                 DECIMAL( 15, 2),
  PRECOVENDAANTERIOR                 DECIMAL( 15, 2),
  PRECOPROMOCAO                      DECIMAL( 15, 2),
  ALICDESCVISTA                      DECIMAL( 15, 3),
  ALICDESCPRAZO                      DECIMAL( 15, 3),
  ALIDESCCARTAOADEBITO               DECIMAL( 15, 3),
  ALICDESCCARTAOCREDITO              DECIMAL( 15, 3),
 CONSTRAINT PK_PRODUTOS_PROMOCAO_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL, PK_PROMOCAO, PK_PRODUTO)
);
CREATE TABLE PRODUTOS_SALDOS 
(
  FK_EMPRESAS                      VALORI NOT NULL,
  FK_PRODUTOS                      VALORI NOT NULL,
  DTHR_SLD                  DATA_HORA_DEF NOT NULL,
  FK_CADASTROS                     VALORI ,
  FK_TIPO_MOVIM_ESTQ               VALORS ,
  FK_TIPO_DOCUMENTOS               VALORS ,
  NUM_DOC                          VALORI ,
  QTD_ENTRADA          NUMERO_PEQUENO_4CD ,
  QTD_SAIDA            NUMERO_PEQUENO_4CD ,
  FLAG_TSLD               FLAG_TIPO_SALDO NOT NULL,
  SLD_INS              NUMERO_PEQUENO_4CD ,
  OPE_INC               NOME_OPERADOR_DEF ,
  DTHR_INC                  DATA_HORA_DEF ,
  OPE_ALT                   NOME_OPERADOR ,
  DTHR_ALT                      DATA_HORA ,
 CONSTRAINT PK_PRODUTOS_SALDOS_1 PRIMARY KEY (FK_EMPRESAS, FK_PRODUTOS, DTHR_SLD)
);
CREATE TABLE PRODUTOS_SALDO_ALMX 
(
  FK_EMPRESAS                      VALORI NOT NULL,
  FK_PRODUTOS                      VALORI NOT NULL,
  FK_ALMOXARIFADOS                 VALORS NOT NULL,
  DTHR_SLD                  DATA_HORA_DEF NOT NULL,
  FK_CADASTROS                     VALORI ,
  FK_TIPO_MOVIM_ESTQ               VALORS ,
  FK_TIPO_DOCUMENTOS               VALORS ,
  NUM_DOC                          VALORI ,
  QTD_ENTRADA          NUMERO_PEQUENO_4CD ,
  QTD_SAIDA            NUMERO_PEQUENO_4CD ,
  FLAG_TSLD               FLAG_TIPO_SALDO NOT NULL,
  SLD_INS              NUMERO_PEQUENO_4CD ,
  OPE_INC               NOME_OPERADOR_DEF ,
  DTHR_INC                  DATA_HORA_DEF ,
  OPE_ALT                   NOME_OPERADOR ,
  DTHR_ALT                      DATA_HORA ,
 CONSTRAINT PK_PRODUTOS_SALDO_ALMX_1 PRIMARY KEY (FK_EMPRESAS, FK_PRODUTOS, DTHR_SLD, FK_ALMOXARIFADOS)
);
CREATE TABLE PRODUTOS_SECAO 
(
  PK_SECAO                INTEGER         NOT NULL,
  DESCRICAO                   V50 ,
  PATRIMONIO                 CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
 CONSTRAINT PK_PRODUTOS_SECAO_1 PRIMARY KEY (PK_SECAO)
);
update rdb$relation_fields set rdb$description = 'A SEÇCAO SE REFERE A PATRIMONIO
SIM
NAO
PADRAO = ''N''
SE FOR UMA SECAO DE PATRIMONIO,
TERA UM TRATAMENTO DIFERENCIADO' where rdb$relation_name = 'PRODUTOS_SECAO' and rdb$field_name = 'PATRIMONIO';
CREATE TABLE PRODUTOS_SERIAL 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PRODUTOS                   SMALLINT         DEFAULT 1 NOT NULL,
  PK_PRODUTOSSERIAL             SMALLINT         NOT NULL,
  SERIAL                            CHAR(   100)  COLLATE PT_BR,
  DATAENTRADA                  TIMESTAMP,
  ALTURA                           FLOAT,
  LARGURA                          FLOAT,
 CONSTRAINT PK_PRODUTOS_SERIAL PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PRODUTOS, PK_PRODUTOSSERIAL)
);
CREATE TABLE PRODUTOS_SERVICOS 
(
  FK_PRODUTOS                    VALORI NOT NULL,
  FK_CLASSIFICACAO               VALORI ,
  VLR_UNIT           NUMERO_PEQUENO_4CD ,
  OPE_INC             NOME_OPERADOR_DEF ,
  DTHR_INC                DATA_HORA_DEF ,
  OPE_ALT                 NOME_OPERADOR ,
  DTHR_ALT                    DATA_HORA ,
  FLAG_ATV                 FLAG_SIM_NAO ,
 CONSTRAINT PK_PRODUTOS_SERVICOS_1 PRIMARY KEY (FK_PRODUTOS)
);
CREATE TABLE PRODUTOS_SUBGRUPOS 
(
  PK_SECAO                  INTEGER         NOT NULL,
  PK_GRUPOS                 INTEGER         NOT NULL,
  PK_SUBGRUPOS              INTEGER         NOT NULL,
  DESCRICAO                     V50 NOT NULL,
  PATRIMONIO                   CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
 CONSTRAINT PK_PRODUTOS_SUBGRUPOS_1 PRIMARY KEY (PK_SECAO, PK_GRUPOS, PK_SUBGRUPOS)
);
CREATE TABLE PRODUTOS_TIPO 
(
  PK_TIPO_PRODUTO              INTEGER         NOT NULL,
  DESCRICAO                        V50 ,
 CONSTRAINT PK_PRODUTOS_TIPO_1 PRIMARY KEY (PK_TIPO_PRODUTO)
);
CREATE TABLE PRODUTOS_TOLERANCIA_REC 
(
  FK_EMPRESAS                   SMALLINT         NOT NULL,
  FK_FILIAIS                    SMALLINT         NOT NULL,
  FK_FORNECEDORES               SMALLINT         NOT NULL,
  FK_PRODUTOS                    INTEGER         NOT NULL,
  PK_REGRAS_ENTRADA             SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(   100)  COLLATE ISO8859_1,
  FK_SECAO                      SMALLINT,
  FK_GRUPOS                     SMALLINT,
  FK_SUBGRUPOS                  SMALLINT,
  FK_FAMILIA                    SMALLINT,
  PERCQUANTIDADE                   FLOAT,
  PERCVALOR                        FLOAT,
  USER_INC                       VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                     TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  USER_ALT                       VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_ALT                     TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_PRODUTOS_TOLERANCIA_REC PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_FORNECEDORES, FK_PRODUTOS, PK_REGRAS_ENTRADA)
);
update rdb$relations set rdb$description = 'Esta tabela registra as tolerancias de recebimentos de produtos em geral, produtos, peÃ§as, mercadorias, etc
se houver alguma diferenca entre o pedido de compra e a entrada registrada, o sistema verifica se ha alguma regra para tolerancia no recebimento desse produto especifico
se houver e nÃ£o for satifeita, o sistema trava a entrada aguardando liberaÃ§Ã£o por alguem de hierarquia superior ou o cancelamento e devoluÃ§Ã£o da entrada.
' where rdb$relation_name = 'PRODUTOS_TOLERANCIA_REC';
update rdb$relation_fields set rdb$description = 'PERCENTUAL DE QUANTIDADE - DIFERENÃ‡A ACEITAVEL NA RECEPCAO DE PRODUTOS, MATERIAIS, PEÃ‡AS, ETC.
SE A DIFERENCA ESTIVER ABAIXO DESTE PERCENTUAL, ACEITAR, SENAO BLOQUEAR E AGUARDAR LIBERAÃ‡AO OU CANCELAMENTO' where rdb$relation_name = 'PRODUTOS_TOLERANCIA_REC' and rdb$field_name = 'PERCQUANTIDADE';
update rdb$relation_fields set rdb$description = 'PERCENTUAL DE VALOR - DIFERENÃ‡A ACEITAVEL NA RECEPCAO DE PRODUTOS, MATERIAIS, PEÃ‡AS, ETC.
SE A DEFERENCA ESTIVER ABAIXO DESTE PERCENTUAL, ACEITAR, SENAO BLOQUEAR E AGUARDAR LIBERAÃ‡AO OU CANCELAMENTO' where rdb$relation_name = 'PRODUTOS_TOLERANCIA_REC' and rdb$field_name = 'PERCVALOR';
CREATE TABLE PRODUTOS_VENDAS 
(
  FK_PRODUTOS                    VALORI NOT NULL,
  FK_SIMILARES                   VALORS ,
  FK_LINHAS                      VALORS ,
  DSC_PROD_RED           DESCRICAO_30RQ NOT NULL,
  FLAG_IMP                 FLAG_SIM_NAO ,
  VLR_CUB            NUMERO_PEQUENO_4CD ,
  PES_LIQ            NUMERO_PEQUENO_4CD ,
  PES_BRU            NUMERO_PEQUENO_4CD ,
  COM_ITEM                NUMERO_INDICE ,
  ALT_PROD                 NUMERO_MEDIO ,
  PROF_PROD                NUMERO_MEDIO ,
  LARG_PROD                NUMERO_MEDIO ,
  ALT_IPROD                NUMERO_MEDIO ,
  PROF_IPROD               NUMERO_MEDIO ,
  LARG_IPROD               NUMERO_MEDIO ,
  ALT_EPROD                NUMERO_MEDIO ,
  PROF_EPROD               NUMERO_MEDIO ,
  LARG_EPROD               NUMERO_MEDIO ,
  FLAG_PRDT                FLAG_SIM_NAO ,
  FAT_CONV_CUB        NUMERO_GRANDE_4CD NOT NULL,
  OPE_INC             NOME_OPERADOR_DEF ,
  DTHR_INC                DATA_HORA_DEF ,
  OPE_ALT                 NOME_OPERADOR ,
  DTHR_ALT                    DATA_HORA ,
  FK_CLASSIFICACAO               VALORI ,
 CONSTRAINT PK_PRODUTOS_VENDAS_1 PRIMARY KEY (FK_PRODUTOS)
);
CREATE TABLE PRODUTOS_VERSOES_LOTACAO 
(
  FK_EMPRESAS                               VALORI NOT NULL,
  FK_PRODUTOS                               VALORI NOT NULL,
  FK_PRODUTOS_ESTOQUES_VERSAO               VALORI NOT NULL,
  FK_ALMOXARIFADOS                          VALORS NOT NULL,
  FK_LOTACOES                               VALORS NOT NULL,
  QTD_LOT                         NUMERO_MEDIO_4CD ,
  OPE_INC                        NOME_OPERADOR_DEF ,
  DTHR_INC                           DATA_HORA_DEF ,
  OPE_ALT                            NOME_OPERADOR ,
  DTHR_ALT                               DATA_HORA ,
 CONSTRAINT PK_PRODUTOS_VERSOES_LOTACAO_1 PRIMARY KEY (FK_EMPRESAS, FK_PRODUTOS, FK_PRODUTOS_ESTOQUES_VERSAO, FK_ALMOXARIFADOS, FK_LOTACOES)
);
CREATE TABLE PRODUTOS_X_TIPO_PRODUTOS 
(
  FK_TIPO_PRODUTOS               VALORS NOT NULL,
  FK_PRODUTOS                    VALORI NOT NULL,
  OPE_INC             NOME_OPERADOR_DEF ,
  DTHR_INC                DATA_HORA_DEF ,
  OPE_ALT                 NOME_OPERADOR ,
  DTHR_ALT                    DATA_HORA ,
 CONSTRAINT PK_PRODUTOS_X_TIPO_PRODUTOS_1 PRIMARY KEY (FK_TIPO_PRODUTOS, FK_PRODUTOS)
);
CREATE TABLE PRODUTO_EMBALAGEM 
(
  PK_PRODUTO                     INTEGER         NOT NULL,
  PK_PROD_EMBALAGEM              INTEGER         NOT NULL,
  PK_UNIDADE                     INTEGER,
  QUANTUNIDADES                  INTEGER,
  PRODUTOFRACIONADO                 CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  CODIGOBARRAS             CODIGO_BARRAS ,
  MED_LARGURA                    DECIMAL( 15, 4),
  MED_ALTURA                     DECIMAL( 15, 4),
  MED_PROFUNDIDADE               DECIMAL( 15, 4),
  MED_CUBAGEM                    NUMERIC( 18,12),
  PESOLIQUIDO                    DECIMAL( 15, 4),
  PESOBRUTO                      DECIMAL( 15, 4),
  LASTROPALETE          DOUBLE PRECISION,
  ALTURAPALETE          DOUBLE PRECISION,
 CONSTRAINT PK_PRODUTO_EMBALAGEM_1 PRIMARY KEY (PK_PRODUTO, PK_PROD_EMBALAGEM)
);
update rdb$relation_fields set rdb$description = 'O PRODUTO É FRACIONADO??
SIM
NAO
PADRAO EH NAO' where rdb$relation_name = 'PRODUTO_EMBALAGEM' and rdb$field_name = 'PRODUTOFRACIONADO';
update rdb$relation_fields set rdb$description = 'medida em cm3' where rdb$relation_name = 'PRODUTO_EMBALAGEM' and rdb$field_name = 'MED_CUBAGEM';
update rdb$relation_fields set rdb$description = 'peso liquido da embalagem em gramas' where rdb$relation_name = 'PRODUTO_EMBALAGEM' and rdb$field_name = 'PESOLIQUIDO';
update rdb$relation_fields set rdb$description = 'peso bruto em gramas' where rdb$relation_name = 'PRODUTO_EMBALAGEM' and rdb$field_name = 'PESOBRUTO';
CREATE TABLE PROD_ARMAZENAMENTO 
(
  PK_EMPRESA                      INTEGER         NOT NULL,
  PK_FILIAL                       INTEGER         NOT NULL,
  PK_ARMAZEM                      INTEGER         NOT NULL,
  PK_ENDERECO                     INTEGER         NOT NULL,
  RUA                             VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  ENDERECO                       SMALLINT,
  ANDAR                          SMALLINT,
  APARTAMENTO                    SMALLINT,
  SALA                           SMALLINT,
  MEDIDALARGURA                   NUMERIC( 15, 2) DEFAULT 120,
  MEDIDAALTURA                    NUMERIC( 15, 2),
  MEDIDAPROFUNDIDADE              NUMERIC( 15, 2) DEFAULT 120,
  MEDIDACUBAGEM                   NUMERIC( 18, 6),
  TIPOPULMAO                         CHAR(     1) CHARACTER SET NONE DEFAULT 'P' COLLATE NONE,
  TAMANHOPULMAO                      CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  SITUACAOENDERECO                   CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  APANHA                             CHAR(     1) CHARACTER SET NONE DEFAULT 'N' NOT NULL COLLATE NONE,
  LOCALARMAZENAGEM               SMALLINT,
  COD_ENDERECO                    VARCHAR(   151) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_PROD_ARMAZENAMENTO_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL, PK_ARMAZEM, PK_ENDERECO)
);
update rdb$relation_fields set rdb$description = 'TIPO DE PULMAO
P PULMAO
A APANHA
V VENDA
O OUTROS
T TEMPORARIO
L VIRTUAL NAO EXISTE FISICAMENTE' where rdb$relation_name = 'PROD_ARMAZENAMENTO' and rdb$field_name = 'TIPOPULMAO';
update rdb$relation_fields set rdb$description = 'TAMANHO DO PULMAO
N MINUSCULO - MUITO PEQUENO
P PEQUENO
M MEDIO
G GRANDE
T GIGANTE
I INFINITO - VIRTUAL NAO EXISTE FISICAMENTE
O OUTROS' where rdb$relation_name = 'PROD_ARMAZENAMENTO' and rdb$field_name = 'TAMANHOPULMAO';
update rdb$relation_fields set rdb$description = 'STUAÇÃO DO ENDERECO
L LIVRE PODE SER USADO / ENDEREÇADO
O OCUPADO ESTA SENDO USADO
B BLOQUEADO NAO PODE SER USADO
M MANUTENÇÃO TEMPORARIAMENTE INDISPONIVEL
T OUTROS - NAO DEFINIDO
I INATIVO' where rdb$relation_name = 'PROD_ARMAZENAMENTO' and rdb$field_name = 'SITUACAOENDERECO';
update rdb$relation_fields set rdb$description = 'O ENDEREÇO EH UMA APANHA??
SIM
NAO
PADRAO = NÃO' where rdb$relation_name = 'PROD_ARMAZENAMENTO' and rdb$field_name = 'APANHA';
update rdb$relation_fields set rdb$description = 'define o local de armazenagem
SECOS (GERAIS, GRANULADOS ETC
RESFRIADOS FRIOS, CHOCOLATES, MANTEIGAS, IOGURTES
CONGELADOS (CARNES
SEGREGADOS (VENENOS, MAT. LIMPEZA ETC)
CERCADOS (PRODUTOS SENSIVEIS, PILHAS, BARBEADORES ETC
DIFERENCIADOS
OUTROS' where rdb$relation_name = 'PROD_ARMAZENAMENTO' and rdb$field_name = 'LOCALARMAZENAGEM';
update rdb$relation_fields set rdb$description = 'CODIFICAÇAO DO ENDERECO
EMPRESA     2
FILIAL      2
ARMAZEM     2
RUA         2
ENDERECO    3
ANDAR       1
APARTAMENTO 1
SALA        1' where rdb$relation_name = 'PROD_ARMAZENAMENTO' and rdb$field_name = 'COD_ENDERECO';
CREATE TABLE PROD_ARMAZ_TAMANHO 
(
  PK_PROD_ARM_TAMANHO                 CHAR(     1) CHARACTER SET NONE NOT NULL COLLATE NONE,
  DESCRICAO                            V20 ,
  MED_ALTURA                      SMALLINT         DEFAULT 150,
  APANHA                      FLAG_SIM_NAO DEFAULT 'N',
 CONSTRAINT PK_PROD_ARMAZ_TAMANHO_1 PRIMARY KEY (PK_PROD_ARM_TAMANHO)
);
CREATE TABLE PROD_COMPUTA_TESTE 
(
  CODIGO         DOUBLE PRECISION,
  REFERENCIA              VARCHAR(    20)  COLLATE ISO8859_1,
  BARRA                   VARCHAR(    13)  COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(    62)  COLLATE ISO8859_1,
  SERVICO                 VARCHAR(     5)  COLLATE ISO8859_1,
  PRODUTO                 VARCHAR(     5)  COLLATE ISO8859_1,
  TIPO                    VARCHAR(    10)  COLLATE ISO8859_1,
  UNIDADE                 VARCHAR(     9)  COLLATE ISO8859_1,
  CODCAT         DOUBLE PRECISION,
  CATEGORIA               VARCHAR(    33)  COLLATE ISO8859_1,
  QUANT_MINI     DOUBLE PRECISION,
  QUANT_ATUA     DOUBLE PRECISION,
  QUANT_MAX      DOUBLE PRECISION,
  QUANT_UNID     DOUBLE PRECISION,
  P_CUSTO        DOUBLE PRECISION,
  P_VENDA        DOUBLE PRECISION,
  MENSAGEM                VARCHAR(   120)  COLLATE ISO8859_1,
  IPI                     VARCHAR(     9)  COLLATE ISO8859_1,
  COD_SIT                 VARCHAR(     9)  COLLATE ISO8859_1,
  COD_IPI                 VARCHAR(     9)  COLLATE ISO8859_1,
  AL_IPI         DOUBLE PRECISION,
  CLAS_FIS                VARCHAR(     9)  COLLATE ISO8859_1,
  AL_ICMS        DOUBLE PRECISION,
  FOTO                    VARCHAR(     9)  COLLATE ISO8859_1,
  OBS                     VARCHAR(     9)  COLLATE ISO8859_1,
  IMPRESSO                VARCHAR(     5)  COLLATE ISO8859_1,
  PECA           DOUBLE PRECISION,
  QUANTIDADE     DOUBLE PRECISION,
  GRUPO                   VARCHAR(     6)  COLLATE ISO8859_1,
  M3                      VARCHAR(     9)  COLLATE ISO8859_1,
  FIELD30        DOUBLE PRECISION,
  COMPRADO                VARCHAR(     5)  COLLATE ISO8859_1,
  DESCONTO       DOUBLE PRECISION,
  DATA                    VARCHAR(   255)  COLLATE ISO8859_1,
  ENTANT         DOUBLE PRECISION,
  SAIANT         DOUBLE PRECISION,
  SALDOANT       DOUBLE PRECISION,
  ENTRADA        DOUBLE PRECISION,
  SAIDA          DOUBLE PRECISION,
  SALDO          DOUBLE PRECISION,
  MARGEM         DOUBLE PRECISION,
  AVISOMIN                VARCHAR(     5)  COLLATE ISO8859_1,
  AVISOZER                VARCHAR(     5)  COLLATE ISO8859_1,
  FALTA          DOUBLE PRECISION,
  MAIS_VEND      DOUBLE PRECISION,
  MAIS_QUAN      DOUBLE PRECISION,
  CODMAR         DOUBLE PRECISION,
  MARCA                   VARCHAR(    20)  COLLATE ISO8859_1,
  FOTO1                   VARCHAR(   100)  COLLATE ISO8859_1,
  FOTO2                   VARCHAR(   100)  COLLATE ISO8859_1,
  PRAZO          DOUBLE PRECISION,
  MARGEM2        DOUBLE PRECISION,
  ATACADO        DOUBLE PRECISION,
  MARGEM3        DOUBLE PRECISION,
  VENCIMENTO              VARCHAR(   255)  COLLATE ISO8859_1,
  VENZER                  VARCHAR(     5)  COLLATE ISO8859_1
);
CREATE TABLE PROD_ENTRADAS 
(
  SEQUENCIAL                     INTEGER         NOT NULL,
  DATA                              DATE,
  HORA                              TIME,
  CENTROCUSTO                   SMALLINT,
  MODELONOTAFISCAL              SMALLINT,
  SERIENOTAFISCAL                VARCHAR(     3)  COLLATE ISO8859_1,
  NUMERONOTAFISCAL               INTEGER,
  CODIGOFORNECEDOR               INTEGER,
  NOMEFORNECEDOR                 VARCHAR(    30)  COLLATE ISO8859_1,
  CNPJFORNECEDOR                 VARCHAR(    14)  COLLATE ISO8859_1,
  IEFORNECEDOR                   VARCHAR(    14)  COLLATE ISO8859_1,
  ESTADOFORNECEDOR                  CHAR(     2)  COLLATE ISO8859_1,
  ORIGEMNOTA                    SMALLINT,
  NATUREZANOTA                  SMALLINT,
  EMITIDAPOR                        CHAR(     1)  COLLATE ISO8859_1,
  CODIGOPRODUTO                  VARCHAR(    20)  COLLATE ISO8859_1,
  PRODUTO                        VARCHAR(    50)  COLLATE ISO8859_1,
  QUANTIDADE                T_QUANTIDADE ,
  PRECOCUSTO                     NUMERIC( 15, 2),
  SUBTOTAL                       NUMERIC( 15, 2),
  DESCONTO                       NUMERIC( 15, 2),
  TOTAL                          NUMERIC( 15, 2),
  ALIQUOTA                       NUMERIC( 15, 2),
  IPI                            NUMERIC( 15, 2),
  CFOP                           INTEGER,
  TRIBUTACAO                        CHAR(     2)  COLLATE ISO8859_1,
  TOTALPRODUTOSNOTA              NUMERIC( 15, 2),
  DESCONTONOTA                   NUMERIC( 15, 2),
  OUTROSNOTA                     NUMERIC( 15, 2),
  TOTALGERALNOTA                 NUMERIC( 15, 2),
  OPERADOR                       VARCHAR(    40)  COLLATE ISO8859_1,
  OBSERVACAO                     VARCHAR(   100)  COLLATE ISO8859_1,
  RECEBIMENTO                       DATE,
  LOTE                           VARCHAR(    25)  COLLATE ISO8859_1,
  CONTROLADO                     T_YESNO ,
 CONSTRAINT PK_PROD_ENTRADAS_1 PRIMARY KEY (SEQUENCIAL)
);
CREATE TABLE PROD_FARMA_TESTE 
(
  CODPRODUTO                       INTEGER         NOT NULL,
  DESCRIPTION                      VARCHAR(   150) CHARACTER SET NONE  COLLATE NONE,
  DATACOMPRA                          DATE,
  VENDORNO                DOUBLE PRECISION,
  NUMERODANOTA                     INTEGER,
  TOTALIZAR                        INTEGER,
  ONHAND                           DECIMAL( 18, 3),
  QTD                     DOUBLE PRECISION,
  COST                    DOUBLE PRECISION,
  LISTPRICE               DOUBLE PRECISION,
  LUCRO                   DOUBLE PRECISION,
  DATAATUALIZACAO                     DATE,
  FORNECEDOR                       VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  SECAO                            VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  VALORDANOTA             DOUBLE PRECISION,
  SOMA                    DOUBLE PRECISION,
  OBS                                 BLOB SUB_TYPE 1 SEGMENT SIZE 80 CHARACTER SET NONE,
  COR                              VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  BALANCETE               DOUBLE PRECISION,
  ONORDER                 DOUBLE PRECISION,
  ESTOQUEMINIMO                    INTEGER,
  SOMA1                   DOUBLE PRECISION,
  TOTALPARAVENDA          DOUBLE PRECISION,
  PARTNO                           DECIMAL( 18, 0) NOT NULL,
  TAM                                 CHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  COMISSAO                            CHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  REFERENCIA                       VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  ENDERECO                         VARCHAR(    70) CHARACTER SET NONE  COLLATE NONE,
  COMISSAO_PRODUTO        DOUBLE PRECISION,
  CODIGO_TEXTO                     VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  TIPO                                CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  TIPOENTRADA                         CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  TIPOQTD                             CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  TIPOPRECO                           CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  DATAQTD                             DATE,
  DATAPRECO                           DATE,
  DATAGERAL                           DATE,
  DATAATUALIZACAOQTD                  DATE,
  DATAATUALIZACAOPREC                 DATE,
  DATAATUALIZACAOGER                  DATE,
  VR_FORNECEDOR           DOUBLE PRECISION,
  ICMS                    DOUBLE PRECISION,
  ISS                     DOUBLE PRECISION,
  IPI                     DOUBLE PRECISION,
  OUTROS                  DOUBLE PRECISION,
  M_LUCRO                 DOUBLE PRECISION,
  MEDIA                   DOUBLE PRECISION,
  CAMINHODAFOTO                    VARCHAR(   150) CHARACTER SET NONE  COLLATE NONE,
  MEDIAEMVALORES          DOUBLE PRECISION,
  VALORALUGUEL            DOUBLE PRECISION,
  ULTIMOVALOR             DOUBLE PRECISION,
  EDITORA                          VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FOTO                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
 CONSTRAINT PK_PROD_FARMA_TESTE_1 PRIMARY KEY (PARTNO)
);
CREATE TABLE PROD_GRUPOS 
(
  FK_SECOES               VALORS NOT NULL,
  PK_GRUPOS               VALORS NOT NULL,
  DSC_GRU         DESCRICAO_30RQ NOT NULL,
  OPE_INC      NOME_OPERADOR_DEF ,
  DTHR_INC         DATA_HORA_DEF ,
  OPE_ALT          NOME_OPERADOR ,
  DTHR_ALT             DATA_HORA ,
 CONSTRAINT PK_PROD_GRUPOS_1 PRIMARY KEY (FK_SECOES, PK_GRUPOS)
);
CREATE TABLE PROD_GRUPOS_TESTE 
(
  GRUPO                   VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  DESCRICAO               VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  FATOR          DOUBLE PRECISION,
  TIPO                    VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  TPGR                    VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  INF                     VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  SUP                     VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CONTA                   VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  CONTA_2                 VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE,
  GR                      VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  DETALHE                 VARCHAR(    45) CHARACTER SET NONE  COLLATE NONE,
  CAPACIDADE     DOUBLE PRECISION
);
CREATE TABLE PROD_INSUMOS 
(
  DCB                        VARCHAR(    20) NOT NULL COLLATE ISO8859_1,
  INSUMO                     VARCHAR(    60)  COLLATE ISO8859_1,
  LISTA                      VARCHAR(     2)  COLLATE ISO8859_1,
  FATORCORRECAO              NUMERIC( 15, 2),
  ADENDO                     VARCHAR(    20)  COLLATE ISO8859_1,
 CONSTRAINT PK_PROD_INSUMOS_1 PRIMARY KEY (DCB)
);
CREATE TABLE PROD_LOTES 
(
  FK_PRODUTOS                   INTEGER         NOT NULL,
  PK_LOTES                      VARCHAR(    10)  COLLATE ISO8859_1,
  FK_FORNECEDOR                 INTEGER,
  FK_EMBALAGEM                  INTEGER,
  FK_UNIDADES                  SMALLINT,
  QUANTENTRADA                  INTEGER,
  DATAENTRADA                      DATE,
  DATAVENCIMENTO                   DATE,
  SAIDASACUMULADAS              INTEGER,
  ULTIMASAIDA                      DATE,
  SALDOATUAL                     BIGINT         COMPUTED BY (QUANTENTRADA - SAIDASACUMULADAS),
 CONSTRAINT PK_PROD_LOTES PRIMARY KEY (FK_PRODUTOS)
);
CREATE TABLE PROD_PALETES 
(
  PK_EMPRESA                      INTEGER         NOT NULL,
  PK_FILIAL                       INTEGER         NOT NULL,
  PK_ARMAZEM                      INTEGER         NOT NULL,
  PK_PALETE                       INTEGER         NOT NULL,
  PK_PRODUTOS                     INTEGER         NOT NULL,
  PK_ENDERECO                     INTEGER         NOT NULL,
  MEDIDALARGURA                   NUMERIC( 15, 2) DEFAULT 120,
  MEDIDAALTURA                    NUMERIC( 15, 2),
  MEDIDAPROFUNDIDADE              NUMERIC( 15, 2) DEFAULT 120,
  TIPOPULMAO                         CHAR(     1) CHARACTER SET NONE DEFAULT 'P' COLLATE NONE,
  TAMANHOPULMAO                      CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  SITUACAOENDERECO                   CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  APANHA                             CHAR(     1) CHARACTER SET NONE DEFAULT 'N' NOT NULL COLLATE NONE,
  LOCALARMAZENAGEM               SMALLINT,
  PK_NUMEROLOTE                   VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  PK_EMBALAGEM                    INTEGER,
  VENCIMENTO                         DATE,
  MEDIDACUBAGEM                   NUMERIC( 18, 6),
 CONSTRAINT PK_PROD_PALETES_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL, PK_ARMAZEM, PK_PALETE, PK_PRODUTOS)
);
update rdb$relation_fields set rdb$description = 'TIPO DE PULMAO
P PULMAO
A APANHA
V VENDA
O OUTROS
T TEMPORARIO
L VIRTUAL NAO EXISTE FISICAMENTE' where rdb$relation_name = 'PROD_PALETES' and rdb$field_name = 'TIPOPULMAO';
update rdb$relation_fields set rdb$description = 'TAMANHO DO PULMAO
N MINUSCULO - MUITO PEQUENO
P PEQUENO
M MEDIO
G GRANDE
T GIGANTE
I INFINITO - VIRTUAL NAO EXISTE FISICAMENTE
O OUTROS' where rdb$relation_name = 'PROD_PALETES' and rdb$field_name = 'TAMANHOPULMAO';
update rdb$relation_fields set rdb$description = 'STUAÇÃO DO ENDERECO
L LIVRE PODE SER USADO / ENDEREÇADO
O OCUPADO ESTA SENDO USADO
B BLOQUEADO NAO PODE SER USADO
M MANUTENÇÃO TEMPORARIAMENTE INDISPONIVEL
T OUTROS - NAO DEFINIDO
I INATIVO' where rdb$relation_name = 'PROD_PALETES' and rdb$field_name = 'SITUACAOENDERECO';
update rdb$relation_fields set rdb$description = 'O ENDEREÇO EH UMA APANHA??
SIM
NAO
PADRAO = NÃO' where rdb$relation_name = 'PROD_PALETES' and rdb$field_name = 'APANHA';
update rdb$relation_fields set rdb$description = 'define o local de armazenagem
SECOS (GERAIS, GRANULADOS ETC
RESFRIADOS FRIOS, CHOCOLATES, MANTEIGAS, IOGURTES
CONGELADOS (CARNES
SEGREGADOS (VENENOS, MAT. LIMPEZA ETC)
CERCADOS (PRODUTOS SENSIVEIS, PILHAS, BARBEADORES ETC
DIFERENCIADOS
OUTROS' where rdb$relation_name = 'PROD_PALETES' and rdb$field_name = 'LOCALARMAZENAGEM';
CREATE TABLE PROD_PRECO_MOTIVO 
(
  PK_PROD_PRECO_MOTIVO                 CHAR(    10) CHARACTER SET NONE NOT NULL COLLATE NONE,
  DESCRICAO                             V50 ,
  INICIOPROMOCAO               FLAG_SIM_NAO DEFAULT 'N',
  FINALPROMOCAO                FLAG_SIM_NAO DEFAULT 'N',
  TABELAGOVERNO                FLAG_SIM_NAO DEFAULT 'N',
  TABELAFORNECEDOR             FLAG_SIM_NAO DEFAULT 'N',
 CONSTRAINT PK_PROD_PRECO_MOTIVO_1 PRIMARY KEY (PK_PROD_PRECO_MOTIVO)
);
CREATE TABLE PROD_PRESCRITORES 
(
  CODIGO                INTEGER         NOT NULL,
  NOME                  VARCHAR(   100)  COLLATE ISO8859_1,
  CONSELHO              VARCHAR(     5)  COLLATE ISO8859_1,
  ESTADO                VARCHAR(     2)  COLLATE ISO8859_1,
  REGISTRO              VARCHAR(    30)  COLLATE ISO8859_1,
 CONSTRAINT PK_PROD_PRESCRITORES_1 PRIMARY KEY (CODIGO)
);
CREATE TABLE PROD_REMD_TESTE 
(
  CODIGO        DOUBLE PRECISION,
  PRODUTO                VARCHAR(    40) CHARACTER SET NONE  COLLATE NONE,
  UNIDADE                VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CST           DOUBLE PRECISION,
  ICMS          DOUBLE PRECISION,
  ESTOQUE       DOUBLE PRECISION,
  PCO_CUSTO     DOUBLE PRECISION,
  PCO_M_CUS     DOUBLE PRECISION,
  CODBARRA               VARCHAR(    13) CHARACTER SET NONE  COLLATE NONE,
  POSSE         DOUBLE PRECISION,
  FOR_POSSE     DOUBLE PRECISION,
  SEQUENCIA              INTEGER
);
CREATE TABLE PROD_TESTE 
(
  PK_PRODUTOS                        VALORI NOT NULL,
  FK_SECOES                          VALORS DEFAULT 1,
  FK_GRUPOS                          VALORS DEFAULT 1,
  FK_SUBGRUPOS                       VALORS DEFAULT 1,
  PK_PROD_FAMILIA                   INTEGER         DEFAULT 1,
  PK_UNIDVENDA                       VALORS DEFAULT 6,
  DESCRICAO                  DESCRICAO_50RQ NOT NULL,
  RESUMIDA                              V50 ,
  TIPOPRODUTO                      SMALLINT         DEFAULT 1,
  PK_EMBALAGEM                      INTEGER         DEFAULT 1,
  PRODUTOATIVO                 FLAG_SIM_NAO DEFAULT '1',
  FLAG_PROD                    FLAG_SIM_NAO ,
  TEMVALIDADE                          CHAR(     1) CHARACTER SET NONE DEFAULT 'S' COLLATE NONE,
  QUANT_UNIDVENDA                  NUMERICO ,
  CONTROLAVALIDADE                     CHAR(     1) CHARACTER SET NONE DEFAULT 'S' COLLATE NONE,
  CONTROLALOTE                         CHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  VALIDADEPRODUTO                    VALORS DEFAULT 12,
  TIPOVALIDADE                      VARCHAR(    10) CHARACTER SET NONE DEFAULT 'MESES' COLLATE NONE,
  EMITEETIQUETABARRA                   CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  EMITEETIQUETAGONDOLA                 CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  EMITEETIQUEEMBALAGEM                 CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  TEMVASILHAME                         CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  PK_VASILHAME                      INTEGER,
  PRODUTOCONTROLADO                    CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  PRODUTOCOMPOSTO                      CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  PRODUTOFRACIONADO                    CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE,
  PRODUTOREFERENCIA                     V50 ,
  USER_CAD                              V10 DEFAULT USER,
  USER_ALT                              V10 DEFAULT USER,
  DATA_CAD                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                        TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  EMPROMOCAO                           CHAR(     1) CHARACTER SET NONE DEFAULT 'N' COLLATE NONE
);
update rdb$relation_fields set rdb$description = '            DESCRICAO RESUMIDA DO ITEM' where rdb$relation_name = 'PROD_TESTE' and rdb$field_name = 'RESUMIDA';
update rdb$relation_fields set rdb$description = 'DEFINE O TIPO DE PRODUTO
PRODUTO ACABADO
PROD SEMI ACABADO
MATERIA PRIMA
EMBALAGEM
MATERIAL DE CONSUMO (ESCRITORIO)
MATERIAL DE CONSUMO DIVERSOS
MATERIAL DE CONSUMO (MANUTENÇAO )
MATERIAL PARA MANUTENÇÃO
MAQUINAS
EQUIPAMENTOS
PEÇAS PARA EQUIPAMENTOS
FERRAMENTAS
EPI
PADRAO EH ''PRODUTO ACABADO''' where rdb$relation_name = 'PROD_TESTE' and rdb$field_name = 'TIPOPRODUTO';
update rdb$relation_fields set rdb$description = 'S OU N SE PRODUTO CONTROLA VALIDADE' where rdb$relation_name = 'PROD_TESTE' and rdb$field_name = 'TEMVALIDADE';
update rdb$relation_fields set rdb$description = '
S OU N  SE PRODUTO CONTROLA VALIDADE' where rdb$relation_name = 'PROD_TESTE' and rdb$field_name = 'CONTROLAVALIDADE';
update rdb$relation_fields set rdb$description = '
S OU N SE PRODUTO CONTROLA LOTE' where rdb$relation_name = 'PROD_TESTE' and rdb$field_name = 'CONTROLALOTE';
update rdb$relation_fields set rdb$description = '
TEMPO DE VALIDADE DO PRODUTO' where rdb$relation_name = 'PROD_TESTE' and rdb$field_name = 'VALIDADEPRODUTO';
update rdb$relation_fields set rdb$description = 'TIPO DE VALIDADE
H = HORAS
DIAS
SEMANAS
MESEE
ANOS
NAO APLICAVAL' where rdb$relation_name = 'PROD_TESTE' and rdb$field_name = 'TIPOVALIDADE';
update rdb$relation_fields set rdb$description = 'O PRODUTO EH COMPOSTO POR OUTROS PRODUTOS' where rdb$relation_name = 'PROD_TESTE' and rdb$field_name = 'PRODUTOCOMPOSTO';
update rdb$relation_fields set rdb$description = 'O PRODUTO ESTÁ EM PROMOÇAO
SIM
NAO
PADRAO = ''N''' where rdb$relation_name = 'PROD_TESTE' and rdb$field_name = 'EMPROMOCAO';
CREATE TABLE PROFISSIONAISVEIA 
(
  FK_PROFISSIONAL                  SMALLINT,
  PK_PROFISSIONAISVEIA             SMALLINT,
  DIREITA                              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ESQUERDA                             BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE REGRADESCONTOSCLIENTES 
(
  FK_EMPRESAS                   SMALLINT         NOT NULL,
  FK_FILIAIS                    SMALLINT         NOT NULL,
  PK_REGRADESCONTO              SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(   100)  COLLATE ISO8859_1,
  FK_CLIENTES                   SMALLINT,
  FK_TABELAPRECOS               SMALLINT,
  FK_CONDPAGTO                  SMALLINT,
  FK_FORMAPAGTO                 SMALLINT,
  FAIXAVALORMINIMO               DECIMAL( 12, 2),
  FAIXAVALORMAXIMO               DECIMAL( 12, 2),
  FK_MOEDA                      SMALLINT,
  ALICOTADESCONTO                DECIMAL(  6, 2),
  DATAINICIAL                  TIMESTAMP,
  DATAFINAL                    TIMESTAMP,
  FK_GRUPOSCLIENTES             SMALLINT,
 CONSTRAINT PK_REGRADESCONTOSCLIENTES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_REGRADESCONTO)
);
CREATE TABLE REPRESENTANTES 
(
  PK_REPRESENTANTES              INTEGER         NOT NULL,
  RAZAOSOCIAL                    VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  NOMEFANTASIA                   VARCHAR(    50)  COLLATE ISO8859_1,
  TIPOPESSOA                        CHAR(     1) DEFAULT 'J' COLLATE ISO8859_1,
  FK_CONTATO                     INTEGER,
  TELEFONE                      TELEFONE ,
  TELEFAX                       TELEFONE ,
  CELULAR                       TELEFONE ,
  DDD                            VARCHAR(     5)  COLLATE ISO8859_1,
  EMAIL                          VARCHAR(   100)  COLLATE ISO8859_1,
  WEBSITE                        VARCHAR(   100)  COLLATE ISO8859_1,
  CNPJ_CPF                          CNPJ ,
  INSC_ESTADUAL                     CNPJ ,
  INSC_MUNCIPAL                     CNPJ ,
  CEP                                CEP ,
  ENDERECO                      ENDERECO ,
  END_NUMERO                     VARCHAR(    10)  COLLATE ISO8859_1,
  END_COMPLEMENTO                VARCHAR(    20)  COLLATE ISO8859_1,
  FK_BAIRROS                     INTEGER,
  FK_CIDADES                     INTEGER,
  FK_PAIS                        INTEGER,
  DESCONTOMAXIMO                 DECIMAL(  6, 2) DEFAULT 10,
  SALDOCONTA                     DECIMAL( 12, 2),
  ULTIMOMOVIMENTO              TIMESTAMP,
 PRIMARY KEY (PK_REPRESENTANTES)
);
CREATE TABLE RH_CANDIDATOS 
(
  NOME                            VARCHAR(    70) CHARACTER SET NONE NOT NULL COLLATE NONE,
  CODIGOCANDIDATO                 INTEGER,
  CODIGO                          VARCHAR(     7) CHARACTER SET NONE  COLLATE NONE,
  RUA                             VARCHAR(    80) CHARACTER SET NONE  COLLATE NONE,
  BAIRRO                          VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  CIDADE                          VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  UF                              VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  CEP                             VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  TELEFONE1                       VARCHAR(    15) CHARACTER SET NONE  COLLATE NONE,
  TELEFONE2                       VARCHAR(    15) CHARACTER SET NONE  COLLATE NONE,
  CELULAR                         VARCHAR(    15) CHARACTER SET NONE  COLLATE NONE,
  NUMFILHOS              DOUBLE PRECISION,
  ESTCIVIL                        VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  FICHAMEDICA                     VARCHAR(   255) CHARACTER SET NONE  COLLATE NONE,
  AVALIACAOCOMPORT                VARCHAR(   255) CHARACTER SET NONE  COLLATE NONE,
  FOTO                            VARCHAR(   150) CHARACTER SET NONE  COLLATE NONE,
  NASC                          TIMESTAMP,
  ESCOLARIDADE                    VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  SALARIOPRETENDIDO      DOUBLE PRECISION,
  EMPRESA1                        VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  CARGO1                          VARCHAR(    40) CHARACTER SET NONE  COLLATE NONE,
  FUNCOES1                        VARCHAR(   200) CHARACTER SET NONE  COLLATE NONE,
  PERIODO1                        VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  EMPRESA2                        VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  CARGO2                          VARCHAR(    40) CHARACTER SET NONE  COLLATE NONE,
  FUNCOES2                        VARCHAR(   200) CHARACTER SET NONE  COLLATE NONE,
  PERIODO2                        VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  EMPRESA3                        VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  CARGO3                          VARCHAR(    40) CHARACTER SET NONE  COLLATE NONE,
  FUNCOES3                        VARCHAR(   200) CHARACTER SET NONE  COLLATE NONE,
  PERIODO3                        VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  EMPRESA4                        VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  CARGO4                          VARCHAR(    40) CHARACTER SET NONE  COLLATE NONE,
  FUNCOES4                        VARCHAR(   200) CHARACTER SET NONE  COLLATE NONE,
  PERIODO4                        VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  CPF                             VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  OBS                                BLOB SUB_TYPE 1 SEGMENT SIZE 80 CHARACTER SET NONE,
  CARGOPRETENDIDO                 VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  REFERENCIA1                     VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  TELREF1                         VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  REFERENCIA2                     VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  TELREF2                         VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  RHPRO                           VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  EMAIL1                          VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  EMAIL2                          VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  SALARIOPRETENDIDOF     DOUBLE PRECISION,
  HABILIDADES                     VARCHAR(   150) CHARACTER SET NONE  COLLATE NONE,
  HORARIODISPONIVEL               VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  DESTINACAO                      VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE,
  DATACURRIC                    TIMESTAMP,
  GRUPO                           VARCHAR(     8) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE RH_CARGOS 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOS                   SMALLINT         NOT NULL,
  DESCRICAO                    VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  FK_CBO1994                   INTEGER,
  FK_CBO2002                   INTEGER,
  DATAINICIO                 TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_FINAL                 TIMESTAMP,
  DESCRITIVO                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ATIVIDADES                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ATIVIDADESDETAL                 BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  USER_INC                     VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  USER_ALT                     VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                   TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                   TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_RH_CARGOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_CARGOS)
);
CREATE TABLE RH_CARGOSEMPREGADOS 
(
  IDEMPRESA           NUMERIC_PK NOT NULL,
  IDSETOR             NUMERIC_PK NOT NULL,
  IDCARGO             NUMERIC_PK NOT NULL,
  ID                  NUMERIC_PK NOT NULL,
  DATAINI              TIMESTAMP,
  DATAFIM              TIMESTAMP,
  QTDE                NUMERIC_FK ,
 CONSTRAINT PK_RH_CARGOSEMPREGADOS_1 PRIMARY KEY (IDCARGO, IDEMPRESA, IDSETOR, ID)
);
CREATE TABLE RH_CARGOSEMPREGADOSNOME 
(
  IDEMPRESA             NUMERIC_PK NOT NULL,
  IDSETOR               NUMERIC_PK NOT NULL,
  IDCARGO               NUMERIC_PK NOT NULL,
  ID                    NUMERIC_PK NOT NULL,
  IDEMPREGADO           NUMERIC_FK ,
  INICIO                      DATA ,
  FIM                         DATA ,
 CONSTRAINT PK_RH_CARGOSEMPREGADOSNOME_1 PRIMARY KEY (IDEMPRESA, IDSETOR, IDCARGO, ID)
);
CREATE TABLE RH_CARGOSGFIP 
(
  IDEMPRESA           NUMERIC_PK NOT NULL,
  IDSETOR             NUMERIC_PK NOT NULL,
  IDCARGO             NUMERIC_PK NOT NULL,
  ID                  NUMERIC_PK NOT NULL,
  DATAINI                   DATA ,
  DATAFIM                   DATA ,
  GFIP                NUMERIC_FK ,
 CONSTRAINT PK_RH_CARGOSGFIP_1 PRIMARY KEY (IDEMPRESA, IDSETOR, IDCARGO, ID)
);
CREATE TABLE RH_CARGOS_FOTOS 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                   SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOS_FOTOS             SMALLINT         NOT NULL,
  CAMINHOFOTO                     V200  COLLATE PT_PT,
  USER_INC                     VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  USER_ALT                     VARCHAR(    10) DEFAULT USER COLLATE ISO8859_1,
  DATA_INC                   TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                   TIMESTAMP         DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE RH_CARGOS_GFIP 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOS_GFIP               SMALLINT         NOT NULL,
  DATAINICIAL                      DATE,
  DATAFINAL                        DATE,
  GFIP                         SMALLINT,
 CONSTRAINT PK_RH_CARGOS_GFIP_1 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_CARGOS, PK_CARGOS_GFIP)
);
CREATE TABLE RH_CBO 
(
  ID                         NUMERIC_PK NOT NULL,
  FAMILIA                          CHAR(     4)  COLLATE ISO8859_1,
  OCUPACAO                         CHAR(     2)  COLLATE ISO8859_1,
  SIGLA                            CHAR(     2)  COLLATE ISO8859_1,
  NOME                          VARCHAR(   150)  COLLATE PT_PT,
  FAMILIANOME                   VARCHAR(   150)  COLLATE PT_PT,
  FAMILIADESCRICAO              VARCHAR(  2500)  COLLATE PT_PT,
 CONSTRAINT PK_RH_CBO_1 PRIMARY KEY (ID)
);
CREATE TABLE RH_DEPENDENTES 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS               SMALLINT         DEFAULT 1 NOT NULL,
  PK_DEPENDENTES                SMALLINT         NOT NULL,
  NOME                           VARCHAR(    45)  COLLATE ISO8859_1,
  GRAU                           VARCHAR(    40)  COLLATE ISO8859_1,
  DATA_NASCIMENTO                   DATE,
  LOCAL_NASCIMENTO               VARCHAR(    45)  COLLATE ISO8859_1,
  CARTORIO_REGISTRO              VARCHAR(    45)  COLLATE ISO8859_1,
  NR_REGISTRO                    VARCHAR(     8)  COLLATE ISO8859_1,
  NR_LIVRO_REGISTRO              VARCHAR(     8)  COLLATE ISO8859_1,
  NR_FOLHA_REGISTRO              VARCHAR(     8)  COLLATE ISO8859_1,
  DATA_ENTREGA_CERT                 DATE,
  SEXO                           VARCHAR(    10)  COLLATE ISO8859_1,
  DEP_PERM                  FLAG_SIM_NAO ,
  DATA_FIM_INSS                TIMESTAMP,
  DATA_FIM_IRRF                TIMESTAMP,
  TERMO_RESP                FLAG_SIM_NAO ,
  NR_MATRICULA                   VARCHAR(    50)  COLLATE ISO8859_1,
  NR_DECLNASCVIVO                VARCHAR(    15)  COLLATE ISO8859_1,
  IDDEPENDENTE          DOUBLE PRECISION         NOT NULL,
  CPF                            VARCHAR(    14)  COLLATE ISO8859_1,
 CONSTRAINT RH_DEPENDENTESPK PRIMARY KEY (PK_DEPENDENTES)
);
CREATE TABLE RH_FILIAISRESP_RH 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_RESPONSAVELRH             SMALLINT,
  PK_FILIAISRESPRH             SMALLINT,
  DTINI                            DATA ,
  DTFIM                            DATA 
);
CREATE TABLE RH_FUNCIONARIOS 
(
  FK_EMPRESAS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                     SMALLINT         NOT NULL,
  NOMEFUNCIONARIO                      VARCHAR(    50)  COLLATE ISO8859_1,
  ENDERECO                             VARCHAR(    45)  COLLATE ISO8859_1,
  END_NUMERO                           VARCHAR(    10)  COLLATE ISO8859_1,
  END_COMPLEMENTO                      VARCHAR(    20)  COLLATE ISO8859_1,
  FK_BAIRROS                           INTEGER,
  FK_CIDADES                           INTEGER,
  NOMEBAIRRO                           VARCHAR(    30)  COLLATE ISO8859_1,
  CEP                                  VARCHAR(     9)  COLLATE ISO8859_1,
  UF                                   VARCHAR(     2)  COLLATE ISO8859_1,
  TELEFONE                            TELEFONE ,
  TELEFAX                             TELEFONE ,
  CELULAR                             TELEFONE ,
  EMAILPARTICULAR                         V100 ,
  EMAILCORPORATIVO                        V100 ,
  FK_ESTADOCIVIL                      SMALLINT         DEFAULT 1 NOT NULL,
  SEXO                                    CHAR(     1) DEFAULT 'M' NOT NULL COLLATE ISO8859_1,
  FK_GRAUINSTRUCAO                    SMALLINT         DEFAULT 1,
  FK_NACIONALIDADE                    SMALLINT,
  DATA_CHEGADA                            DATE,
  DATA_NASCIMENTO                         DATE,
  CTPS_NUMERO                          VARCHAR(    10)  COLLATE ISO8859_1,
  CTPS_SERIE                           VARCHAR(    10)  COLLATE ISO8859_1,
  CTPS_UF                              VARCHAR(     2)  COLLATE ISO8859_1,
  CTPS_ORGAO                           VARCHAR(    10)  COLLATE ISO8859_1,
  CPF                                  VARCHAR(    14)  COLLATE ISO8859_1,
  PIS                                  VARCHAR(    14)  COLLATE ISO8859_1,
  RG_NUMERO                            VARCHAR(    14)  COLLATE ISO8859_1,
  RG_ORGAO                             VARCHAR(    10)  COLLATE ISO8859_1,
  RG_UF                                   CHAR(     2)  COLLATE ISO8859_1,
  RG_DATAEMISSAO                          DATE,
  ADMISSAO_DATA                      TIMESTAMP,
  OPCAO_FGTS                              DATE,
  FK_TURNOTRABALHO                    SMALLINT,
  PRIMEIRO_EMPREGO                        CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  PERC_INSAL                           DECIMAL(  6, 2),
  FK_SINDICATO                        SMALLINT,
  DATA_DEMISSAO                           DATE,
  SINDICALIZADO                   FLAG_SIM_NAO ,
  ANUIDADE1                       FLAG_SIM_NAO ,
  ANUIDADE2                       FLAG_SIM_NAO ,
  ANUIDADE3                       FLAG_SIM_NAO ,
  ANUIDADE4                       FLAG_SIM_NAO ,
  ANUIDADE5                       FLAG_SIM_NAO ,
  REC_SINDI                       FLAG_SIM_NAO ,
  QUEBRA_CAIXA                    FLAG_SIM_NAO ,
  FK_VINCULOS                         SMALLINT,
  CONTRATO                             VARCHAR(    50)  COLLATE ISO8859_1,
  CONTR_TRAB                           VARCHAR(     1)  COLLATE ISO8859_1,
  FK_QUADROHORARIO                    SMALLINT,
  FK_HORARIOS                         SMALLINT,
  FK_TIPORESCISAO                     SMALLINT,
  COD_REC_ANT                          VARCHAR(     2)  COLLATE ISO8859_1,
  FK_CTACONTABILCREDITO                INTEGER,
  FK_CTACONTABILDEBITO                 INTEGER,
  FK_CENTROCUSTO                      SMALLINT,
  CTPS_ALTERACAO                          DATE,
  CTPSSERIEANTERIOR                    VARCHAR(    12)  COLLATE ISO8859_1,
  NOME_ALTERACAO                          DATE,
  NOMEANTERIOR                         VARCHAR(    45)  COLLATE ISO8859_1,
  PIS_ALTERACAO                           DATE,
  PISANTERIOR                          VARCHAR(    14)  COLLATE ISO8859_1,
  CODIGO_ALTERACAO                        DATE,
  MATRICULAANTERIOR                    INTEGER,
  DATAADMISSAO_ALTERACAO                  DATE,
  DTADMISSAOANTERIOR                      DATE,
  DATANASCALTERACAO                       DATE,
  DTNASCIMANTERIOR                        DATE,
  UNIDADE_ALTERACAO                       DATE,
  UNIDADEANTERIOR                      VARCHAR(    10)  COLLATE ISO8859_1,
  CBO_ALTERACAO                           DATE,
  CBOANTERIOR                          VARCHAR(     7)  COLLATE ISO8859_1,
  ENDERECO_ALTERACAO                      DATE,
  DESC_CONTR_CONF                 FLAG_SIM_NAO ,
  N_LIVRO_EMPREGADO                   SMALLINT,
  N_FOLHA_REG_EMPREG                  SMALLINT,
  TITULO_NUMERO                        VARCHAR(    14)  COLLATE ISO8859_1,
  TITULO_ZONA                          VARCHAR(     4)  COLLATE ISO8859_1,
  TITULO_SECAO                         VARCHAR(     4)  COLLATE ISO8859_1,
  RESERVISTA_NUMERO                    VARCHAR(    20)  COLLATE ISO8859_1,
  RESERVISTA_CATEGORIA                 VARCHAR(    20)  COLLATE ISO8859_1,
  CART_NAC_HABILIT                     VARCHAR(    20)  COLLATE ISO8859_1,
  HABILITACAO_CATEGORIA                VARCHAR(     5)  COLLATE ISO8859_1,
  HABILITACAO_VENCTO                      DATE,
  FILIACAO_PAI                         VARCHAR(    45)  COLLATE ISO8859_1,
  FILIACAO_MAE                         VARCHAR(    45)  COLLATE ISO8859_1,
  C_EXP_PRAZO_INICIO                   INTEGER,
  C_EXP_PRAZO_FIM                      INTEGER,
  CONSTAR_RAIS                    FLAG_SIM_NAO ,
  COD_BANCO                               CHAR(     3)  COLLATE ISO8859_1,
  COD_AGENCIA                          VARCHAR(     5)  COLLATE ISO8859_1,
  CONTA_CORRENTE                       VARCHAR(     9)  COLLATE ISO8859_1,
  DIGITO_CONTA                         VARCHAR(     2)  COLLATE ISO8859_1,
  MESES_CONTRTRABANT                  SMALLINT,
  RECEBE13                        FLAG_SIM_NAO ,
  FK_RACACOR                          SMALLINT,
  DEFICIENTEFISICO                FLAG_SIM_NAO ,
  PERC_PERIC                           DECIMAL(  6, 2),
  FK_CIDADENASC                        INTEGER,
  UF_MUN_NASC                          VARCHAR(     2)  COLLATE ISO8859_1,
  PARTICIPAPAT                         VARCHAR(     2)  COLLATE ISO8859_1,
  ALVARAJUDICIAL                  FLAG_SIM_NAO ,
  CTPS_EMISSAO                            DATE,
  RG_EMISSAO                              DATE,
  FK_PONTOS                           SMALLINT,
  NUMCARTAOPONTO                      SMALLINT,
  FK_TIPOPAGTO                        SMALLINT,
  FILEFOTO                             VARCHAR(   100)  COLLATE ISO8859_1,
  COD_OPER_BANC                       SMALLINT,
  MODALIDADESEFIP                      INTEGER,
  FORMADESCINSS                        INTEGER,
  ORDEMDESCINSS                        INTEGER,
  ORDEMDESCIRRF                        INTEGER,
  FORMULAHRNORM                        VARCHAR(    10)  COLLATE ISO8859_1,
  FORMACALCDSR                         VARCHAR(    20)  COLLATE ISO8859_1,
  FORMACALCREFLEXODSR                  VARCHAR(    20)  COLLATE ISO8859_1,
  HRSTRABHORISTAS                      VARCHAR(    30)  COLLATE ISO8859_1,
  TIPO_DEFICIENCIA                    SMALLINT,
  FORMACALCINSALUBRIDADE               VARCHAR(    50)  COLLATE ISO8859_1,
  FORMACALCPERICULOSIDADE              VARCHAR(    50)  COLLATE ISO8859_1,
  DATA_APOSENTADORIA                      DATE,
  APOSENTADORIA                   FLAG_SIM_NAO ,
  REGIDOPELOART                   FLAG_SIM_NAO ,
  TIPO_MOVIMENTO                       VARCHAR(     2)  COLLATE ISO8859_1,
 CONSTRAINT RH_EMPREGADOSPK PRIMARY KEY (FK_FUNCIONARIOS)
);
CREATE TABLE RH_FUNCOES 
(
  FK_EMPRESAS                  SMALLINT,
  FK_FILIAIS                   SMALLINT,
  PK_FUNCOES                   SMALLINT         NOT NULL,
  CBO1994                       INTEGER,
  CBO2002                       INTEGER,
  FK_MAOOBRA                   SMALLINT,
  FK_CARGOS                    SMALLINT,
  SALARIOBASE                   DECIMAL( 12, 2),
  DESCRITIVOFUNCAO                 BLOB SUB_TYPE 0 SEGMENT SIZE 20,
  REQUISITOSFUNCAO                 BLOB SUB_TYPE 0 SEGMENT SIZE 20,
  IMPRIMIRPPP              FLAG_SIM_NAO ,
  DESCRICAO                     VARCHAR(   100)  COLLATE ISO8859_1,
 PRIMARY KEY (PK_FUNCOES)
);
CREATE TABLE RH_FUNC_CURSOS 
(
  FUNCI_CODI              VARCHAR(    15)  COLLATE ISO8859_1,
  DATA_INI                   DATE,
  DATA_FIN                   DATE,
  CURSO_DESC              VARCHAR(   120)  COLLATE ISO8859_1
);
CREATE TABLE RH_GPSCODPG 
(
  CODIGO              VARCHAR(     4) CHARACTER SET NONE  COLLATE NONE,
  NOME                VARCHAR(    50) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE RH_PONTOS 
(
  FK_EMPRESAS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_HORARIOS                        SMALLINT         DEFAULT 1 NOT NULL,
  PK_PONTOS                          SMALLINT         NOT NULL,
  DATA_INICIO                       TIMESTAMP,
  DATA_FIM                          TIMESTAMP,
  HR_NORMAIS_MES                         TIME,
  HR_TRABALHADAS_DIU_MES                 TIME,
  HR_TRABALHADAS_NOT_MES                 TIME,
  HR_EXTRAS_DIU_MES                      TIME,
  HR_EXTRAS_NOT_MES                      TIME,
  HR_FALTAS_DIU_MES                      TIME,
  HR_FALTAS_NOT_MES                      TIME,
  HR_DSR_MES                             TIME,
  OBSERVACAO                          VARCHAR(   100)  COLLATE ISO8859_1,
  HR_DSR_DESCONTO_MES                    TIME,
 CONSTRAINT PK_RH_PONTOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_FUNCIONARIOS, PK_PONTOS)
);
CREATE TABLE RH_PONTOS_BLOQUEADOS 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS             SMALLINT         DEFAULT 1 NOT NULL,
  PK_BLOQUEIOS                SMALLINT         NOT NULL,
  DATAHORABATIDA             TIMESTAMP,
  FK_SIT_BLOQUEIO             SMALLINT,
 CONSTRAINT RH_PONTO_BLOQUEADOSPK PRIMARY KEY (PK_BLOQUEIOS)
);
CREATE TABLE RH_PONTOS_DIGITAIS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_LEITORDIGITAL             SMALLINT         DEFAULT 1 NOT NULL,
  TIPODEDO                     SMALLINT,
  DIGITAL                          BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  DATA_DEMISSAO               TIMESTAMP
);
CREATE TABLE RH_PONTO_EMPREGADOS 
(
  FK_EMPRESAS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCONARIOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_PONTOS                  SMALLINT         DEFAULT 1 NOT NULL
);
CREATE TABLE RH_PONTO_JUSTIFICATIVA 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  PK_JUSTIFICATIVA               SMALLINT         NOT NULL,
  DESCRICAO                       VARCHAR(    20)  COLLATE ISO8859_1,
  PERDE_DSR                  FLAG_SIM_NAO ,
  CONS_DIA_DSR                   SMALLINT,
  DESCONTA_FERIAS            FLAG_SIM_NAO ,
  DESCONTA_13                FLAG_SIM_NAO ,
  CONS_DIA_FERIAS_13             SMALLINT,
  DESCONTA_SALARIO           FLAG_SIM_NAO 
);
CREATE TABLE RH_RECISAO 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS               SMALLINT         DEFAULT 1 NOT NULL,
  PK_RESCISAO                    INTEGER         NOT NULL,
  DATA_AVISO                   TIMESTAMP,
  DATA_PAGTO                   TIMESTAMP,
  DATA_FIM_CONTRATO            TIMESTAMP,
  DIAS_TRABALHADOS              SMALLINT,
  DIAS_INDEN                    SMALLINT,
  DIAS_REAV                     SMALLINT,
  SALDO_FGTS                     DECIMAL( 12, 2),
  DIAS_ANTECIPADOS              SMALLINT,
  DIAS_ESTABILIDADE             SMALLINT,
  FGTSANTERIOR                   DECIMAL( 12, 2),
  MEDIASMESRESCISAO             SMALLINT,
  CONTRSOCIALMULTA              SMALLINT,
  FGTSANTERIOR13SAL              DECIMAL( 12, 2),
  FORCAMAIOR                        CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  IDRESCISAO            DOUBLE PRECISION         NOT NULL,
 CONSTRAINT RH_TAB_RESCISAOPK PRIMARY KEY (PK_RESCISAO)
);
CREATE TABLE RH_TABELAFERIAS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS              SMALLINT         DEFAULT 1 NOT NULL,
  AQUISICAO_INICIO            TIMESTAMP,
  AQUISICAO_FIM               TIMESTAMP,
  GOZO_INICIO                 TIMESTAMP,
  GOZO_FIM                    TIMESTAMP,
  DATA_PAGAMENTO              TIMESTAMP,
  AVOS                         SMALLINT,
  DIAS_DIREITO                  DECIMAL(  6, 2),
  DIAS_LICENCA                  DECIMAL(  6, 2),
  DIAS_PREVIDENCIA              DECIMAL(  6, 2),
  DIAS_ABONO                    DECIMAL(  6, 2),
  DIAS_GOZADOS                  DECIMAL(  6, 2),
  DIAS_SALDO                    DECIMAL(  6, 2),
  SITUACAO                      VARCHAR(    40)  COLLATE ISO8859_1,
  SALARIOBASE                      CHAR(     1) DEFAULT 'A' COLLATE ISO8859_1,
  OUTROS_REND                  SMALLINT,
  FORMA_CALCULO                 VARCHAR(     8)  COLLATE ISO8859_1
);
CREATE TABLE RH_TABELA_FPAS 
(
  PK_CODIGOFPAS      DOUBLE PRECISION,
  PERC_EMPRESA                DECIMAL(  6, 2),
  PERC_AUTONOMOS              DECIMAL(  6, 2),
  PERC_COOPER                 DECIMAL(  6, 2),
  S_EDUC                      DECIMAL(  6, 2),
  INCRA                       DECIMAL(  6, 2),
  SENAI                       DECIMAL(  6, 2),
  SESI                        DECIMAL(  6, 2),
  SENAC                       DECIMAL(  6, 2),
  SESC                        DECIMAL(  6, 2),
  SEBRAE                      DECIMAL(  6, 2),
  DPC                         DECIMAL(  6, 2),
  F_AER                       DECIMAL(  6, 2),
  SENAR                       DECIMAL(  6, 2),
  SEST                        DECIMAL(  6, 2),
  SENAT                       DECIMAL(  6, 2),
  SESCOOP                     DECIMAL(  6, 2),
  TOT_TERC                    DECIMAL(  6, 2)
);
CREATE TABLE RH_TABELA_HORARIOS 
(
  FK_EMPRESAS                              SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                               SMALLINT         DEFAULT 1 NOT NULL,
  PK_HORARIOS                              SMALLINT         NOT NULL,
  DESCRICAO                                 VARCHAR(    30)  COLLATE ISO8859_1,
  SEGUNDA_ENTRADA                           VARCHAR(     5)  COLLATE ISO8859_1,
  SEGUNDA_INTERVALO_ENTRADA                 VARCHAR(     5)  COLLATE ISO8859_1,
  SEGUNDA_INTERVALO_SAIDA                   VARCHAR(     5)  COLLATE ISO8859_1,
  SEGUNDA_SAIDA                             VARCHAR(     5)  COLLATE ISO8859_1,
  TERCA_ENTRADA                             VARCHAR(     5)  COLLATE ISO8859_1,
  TERCA_INTERVALO_ENTRADAADA                VARCHAR(     5)  COLLATE ISO8859_1,
  TERCA_INTERVALO_SAIDADA                   VARCHAR(     5)  COLLATE ISO8859_1,
  TERCA_SAIDA                               VARCHAR(     5)  COLLATE ISO8859_1,
  QUARTA_ENTRADA                            VARCHAR(     5)  COLLATE ISO8859_1,
  QUARTA_INTERVALO_ENTRADAADA               VARCHAR(     5)  COLLATE ISO8859_1,
  QUARTA_INTERVALO_SAIDADA                  VARCHAR(     5)  COLLATE ISO8859_1,
  QUARTA_SAIDA                              VARCHAR(     5)  COLLATE ISO8859_1,
  QUINTA_ENTRADA                            VARCHAR(     5)  COLLATE ISO8859_1,
  QUINTA_INTERVALO_ENTRADAADA               VARCHAR(     5)  COLLATE ISO8859_1,
  QUINTA_INTERVALO_SAIDADA                  VARCHAR(     5)  COLLATE ISO8859_1,
  QUINTA_SAIDA                              VARCHAR(     5)  COLLATE ISO8859_1,
  SEXTA_ENTRADA                             VARCHAR(     5)  COLLATE ISO8859_1,
  SEXTA_INTERVALO_ENTRADAADA                VARCHAR(     5)  COLLATE ISO8859_1,
  SEXTA_INTERVALO_SAIDADA                   VARCHAR(     5)  COLLATE ISO8859_1,
  SEXTA_SAIDA                               VARCHAR(     5)  COLLATE ISO8859_1,
  SABADO_ENTRADA                            VARCHAR(     5)  COLLATE ISO8859_1,
  SABADO_INTERVALO_ENTRADAADA               VARCHAR(     5)  COLLATE ISO8859_1,
  SABADO_INTERVALO_SAIDADA                  VARCHAR(     5)  COLLATE ISO8859_1,
  SABADO_SAIDA                              VARCHAR(     5)  COLLATE ISO8859_1,
  DOMINGO_ENTRADA                           VARCHAR(     5)  COLLATE ISO8859_1,
  DOMINGO_INTERVALO_ENTRADAADA              VARCHAR(     5)  COLLATE ISO8859_1,
  DOMINGO_INTERVALO_SAIDADA                 VARCHAR(     5)  COLLATE ISO8859_1,
  DOMINGO_SAIDA                             VARCHAR(     5)  COLLATE ISO8859_1,
  JORNADA_MENSAL                            VARCHAR(     7)  COLLATE ISO8859_1,
  JORNADA_SEMANAL                           VARCHAR(     6)  COLLATE ISO8859_1,
  JORNADA_DIARIA                            VARCHAR(     5)  COLLATE ISO8859_1,
  FK_SINDICATO                             SMALLINT
);
CREATE TABLE RH_TIPO_RESCISAO 
(
  CODIGO                      SMALLINT,
  NOME                         VARCHAR(   200) CHARACTER SET NONE  COLLATE NONE,
  TPAVISO                      VARCHAR(     3) CHARACTER SET NONE  COLLATE NONE,
  CODSAQUEFGTS                 VARCHAR(     5) CHARACTER SET NONE  COLLATE NONE,
  DIASHOMOL                   SMALLINT,
  CODAFASHOMOLNET              VARCHAR(     6) CHARACTER SET NONE  COLLATE NONE,
  RESCDT1                         DATE,
  RESCSTR1                     VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  RESCINT1                     INTEGER
);
CREATE TABLE RH_VALTRANSP 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_VERBAS                   SMALLINT         DEFAULT 1 NOT NULL,
  DATA_INICIO                TIMESTAMP,
  DATA_FIM                   TIMESTAMP,
  QUANTVALES                  SMALLINT         DEFAULT 48,
  VALOR_UNIT                   DECIMAL( 12, 2),
  VALOR_DESC                   DECIMAL( 12, 2)
);
CREATE TABLE RH_VERBAS 
(
  FK_EMPRESAS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS               SMALLINT         DEFAULT 1 NOT NULL,
  PK_VERBAS                SMALLINT         NOT NULL,
  SEQ_CALCULO               INTEGER,
  DESCRICAO                 VARCHAR(    50)  COLLATE ISO8859_1,
  TIPOVERBA                    CHAR(     1)  COLLATE ISO8859_1,
  INSS_NORMAL          FLAG_SIM_NAO ,
  IRRF_NORMAL          FLAG_SIM_NAO ,
  FGTS                 FLAG_SIM_NAO ,
  FORMULA                   VARCHAR(     4)  COLLATE ISO8859_1,
  VLR_CALC                  DECIMAL( 12, 2),
  TETO                      DECIMAL( 12, 2),
  SIT_EMPR                  VARCHAR(   100)  COLLATE ISO8859_1,
  TIPO_FOLHA                VARCHAR(   100)  COLLATE ISO8859_1,
  BC_HEXTRA            FLAG_SIM_NAO ,
  BC_INSAL             FLAG_SIM_NAO ,
  BC_PERIC             FLAG_SIM_NAO ,
  BC_CCONF             FLAG_SIM_NAO ,
  BC_CSIND             FLAG_SIM_NAO ,
  BC_HEX_NOT           FLAG_SIM_NAO ,
  BC_MEDHEXTRA         FLAG_SIM_NAO ,
  BC_MEDVALVAR         FLAG_SIM_NAO ,
  REMUN_13             FLAG_SIM_NAO ,
  HORAS                FLAG_SIM_NAO ,
  DED_IRRF             FLAG_SIM_NAO ,
  RAIS                 FLAG_SIM_NAO ,
  PISFOLHA             FLAG_SIM_NAO ,
  FORMULA2                     BLOB SUB_TYPE 0 SEGMENT SIZE 80,
 CONSTRAINT RH_TAB_VERBASPK PRIMARY KEY (PK_VERBAS)
);
CREATE TABLE SEGUROS_APOLICES 
(
  FK_EMPRESAS                     SMALLINT         NOT NULL,
  FK_FILIAIS                      SMALLINT         NOT NULL,
  FK_SEGURADORAS                  SMALLINT,
  PK_APOLICES                     SMALLINT         NOT NULL,
  NUMEROAPOLICES                   VARCHAR(    20)  COLLATE ISO8859_1,
  DESCRICAO                        VARCHAR(   100)  COLLATE ISO8859_1,
  DATAINICIAL                    TIMESTAMP,
  DATAVENCIMENTO                 TIMESTAMP,
  DESCRITIVOAPOLICE             BLOB_TEXTO ,
  DESCRITIVOCOBERTURA           BLOB_TEXTO ,
  FK_MOEDASPREMIO                 SMALLINT,
  DADOSADICIONAIS               BLOB_TEXTO ,
  FK_TIPOAPOLICES                 SMALLINT,
  FK_TIPOSEGURO                   SMALLINT,
  FK_TIPOCOBERTURA                SMALLINT,
  RENOVACAO                           CHAR(     1)  COLLATE ISO8859_1,
  VALORSEGURO                      DECIMAL( 12, 2),
  VALORFRANQUIA                    DECIMAL( 12, 2),
  VALORPREMIO                      DECIMAL( 12, 2),
  VALORDESCONTO                    DECIMAL( 12, 2),
  QUANTPARCELAS                   SMALLINT,
  VALORPARCELAS                    DECIMAL( 12, 2),
  DIAVENCIMENTO                   SMALLINT,
  FK_CORRETORES                   SMALLINT,
  CONTATO                          VARCHAR(   100)  COLLATE ISO8859_1,
  FK_COMPRADOR                    SMALLINT,
  FK_APROVADORES                  SMALLINT,
 CONSTRAINT PK_SEGUROS_APOLICES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_APOLICES)
);
CREATE TABLE SEGUROS_TIPOS 
(
  FK_EMPRESAS                 SMALLINT         NOT NULL,
  FK_FILIAIS                  SMALLINT         NOT NULL,
  PK_TIPO_SEGUROS             SMALLINT         NOT NULL,
  DESCRICAO                    VARCHAR(   100)  COLLATE ISO8859_1,
 CONSTRAINT PK_SEGUROS_TIPOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_TIPO_SEGUROS)
);
CREATE TABLE SETORES 
(
  PK_EMPRESA                  INTEGER         NOT NULL,
  PK_FILIAL                   INTEGER         NOT NULL,
  PK_DEPTO                    INTEGER         NOT NULL,
  PK_SETOR                    INTEGER         NOT NULL,
  DESCRICAO                       V50 NOT NULL,
  FK_CENTROCUSTO              VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_SETORES_1 PRIMARY KEY (PK_EMPRESA, PK_FILIAL, PK_DEPTO, PK_SETOR)
);
CREATE TABLE SIGMAMAIL 
(
  USUARIO                          VARCHAR(    50)  COLLATE ISO8859_1,
  SENHA                            VARCHAR(    50)  COLLATE ISO8859_1,
  PORTA_POP3                       INTEGER,
  PORTA_SMTP                       INTEGER,
  DATA_ATUALIZACAO               TIMESTAMP,
  AUTENTICACAO                        CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  SERVIDOR_POP3                    VARCHAR(    80)  COLLATE ISO8859_1,
  SERVIDOR_SMTP                    VARCHAR(    80)  COLLATE ISO8859_1,
  ATIVO                               CHAR(     1)  COLLATE ISO8859_1,
  AUTENTICACAO_GERAL                  CHAR(     1)  COLLATE ISO8859_1,
  PORTA_SMTP_GERAL                 INTEGER,
  SENHA_GERAL                      VARCHAR(    50)  COLLATE ISO8859_1,
  SERVIDOR_SMTP_GERAL              VARCHAR(    50)  COLLATE ISO8859_1,
  USUARIO_GERAL                    VARCHAR(    50)  COLLATE ISO8859_1,
  MAX_COD_MAIL                     INTEGER
);
CREATE TABLE SIS_CONSELHOS 
(
  PK_CONSELHOS             SMALLINT,
  CONSELHO                     V200 
);
CREATE TABLE SIS_CONSELHOSVISUALIZAR 
(
  FK_CONSELHOS                      SMALLINT,
  PK_CONSELHOVISUALIZAR             SMALLINT,
  TIPO                              SMALLINT
);
CREATE TABLE SIS_USUARIOS_STATUS 
(
  FK_USUARIO              SMALLINT,
  FK_EMPRESAS             SMALLINT,
  FK_FILIAIS              SMALLINT,
  STATUS                      CHAR(     1) NOT NULL COLLATE ISO8859_1
);
update rdb$relation_fields set rdb$description = 'Status - 1: Liberado  2: Em dÃ©bito   3: Inativo' where rdb$relation_name = 'SIS_USUARIOS_STATUS' and rdb$field_name = 'STATUS';
CREATE TABLE SOCIOS 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  PK_SOCIOS                       SMALLINT         NOT NULL,
  FK_CIDADES                       INTEGER,
  FK_PLANOLUCAPAGAR               SMALLINT         DEFAULT 1 NOT NULL,
  FK_PLANOSUB                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_CODIGOFOLHAPAGTO             SMALLINT         DEFAULT 1 NOT NULL,
  DATAINICIO                     TIMESTAMP,
  DATAFIM                        TIMESTAMP,
  NOMESOCIO                        VARCHAR(    50)  COLLATE PT_BR,
  QUALIFICACAO                     NUMERIC(  3, 0),
  CARGO                            VARCHAR(    30)  COLLATE PT_BR,
  PROFISSAO                        VARCHAR(    30)  COLLATE PT_BR,
  LOGRADOURO                       VARCHAR(     3)  COLLATE PT_BR,
  ENDERECO                         VARCHAR(    50)  COLLATE PT_BR,
  END_NUMERO                       VARCHAR(    10)  COLLATE PT_BR,
  END_COMPLEMENTO                  VARCHAR(    30)  COLLATE PT_BR,
  BAIRRO                           VARCHAR(    30)  COLLATE PT_BR,
  CEP                              VARCHAR(     8)  COLLATE PT_BR,
  CAIXAPOSTAL                      VARCHAR(    10)  COLLATE PT_BR,
  TELEFONE1                        VARCHAR(    15)  COLLATE PT_BR,
  TELEFONE2                        VARCHAR(    15)  COLLATE PT_BR,
  FAX                              VARCHAR(    15)  COLLATE PT_BR,
  EMAIL                            VARCHAR(    50)  COLLATE PT_BR,
  TPINSCRICAO                     SMALLINT,
  CNPJ                             VARCHAR(    14)  COLLATE PT_BR,
  RG_NUMERO                        VARCHAR(    20)  COLLATE PT_BR,
  RG_ORGAOEMISSOR                  VARCHAR(    50)  COLLATE PT_BR,
  DATANASCTO                     TIMESTAMP,
  NACIONALIDADE                   SMALLINT,
  ESTADOCIVIL                     SMALLINT,
  PERCCAPITALTOTAL                 NUMERIC(  8, 4),
  PERCCAPITALVOTA                  NUMERIC(  8, 4),
  QUALIFREPRLEGAL                  NUMERIC(  3, 0),
  CPFREPRLEGAL                     VARCHAR(    11)  COLLATE PT_BR,
  NOMEREPRLEGAL                    VARCHAR(    50)  COLLATE PT_BR,
  IESTADUAL                        VARCHAR(    14)  COLLATE PT_BR,
 CONSTRAINT CA06_SOCIOPK PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_SOCIOS)
);
CREATE TABLE SOCIOSLUCROS 
(
  FK_EMPRESAS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_SOCIOS                 SMALLINT         NOT NULL,
  PK_SOCIOLUCRO             SMALLINT         NOT NULL,
  DATAINIAPUR              TIMESTAMP,
  DATAFIMAPUR              TIMESTAMP,
  TPAPURACAO                SMALLINT,
  VALORLUCRO                 DECIMAL( 15, 2),
 CONSTRAINT SOCIOLUCROPK_1 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_SOCIOS, PK_SOCIOLUCRO)
);
CREATE TABLE ST_ACIDENTES 
(
  PK_ACIDENTES                      SMALLINT         NOT NULL,
  FK_GRUPOSACIDENTES                SMALLINT         DEFAULT 1 NOT NULL,
  FK_SUBGRUPOSACIDENTES             SMALLINT         DEFAULT 1 NOT NULL,
  TITULO                                V100 ,
  DESCRICAO                             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  RECOMENDACOES                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  USER_INC                     USUARIOPADRAO DEFAULT USER,
  USER_ALT                     USUARIOPADRAO DEFAULT USER,
  DATA_INC                         TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                         TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_ST_ACIDENTES PRIMARY KEY (PK_ACIDENTES, FK_GRUPOSACIDENTES, FK_SUBGRUPOSACIDENTES)
);
CREATE TABLE ST_ACIDENTESGRUPOS 
(
  PK_GRUPOSACIDESNTES             SMALLINT         NOT NULL,
  DESCRICAO                        VARCHAR(   200)  COLLATE ISO8859_1,
  USER_INC                   USUARIOPADRAO DEFAULT USER,
  USER_ALT                   USUARIOPADRAO DEFAULT USER,
  DATA_INC                       TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                       TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT PK_ST_ACIDENTESGRUPOS PRIMARY KEY (PK_GRUPOSACIDESNTES)
);
CREATE TABLE ST_ACIDENTESSUBGRUPOS 
(
  FK_GRUPOSACIDENTES                SMALLINT         DEFAULT 1 NOT NULL,
  PK_SUBGRUPOSACIDENTES             SMALLINT         NOT NULL,
  DESCRICAO                          VARCHAR(   200)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_ACIDENTESSUBGRUPOS PRIMARY KEY (FK_GRUPOSACIDENTES, PK_SUBGRUPOSACIDENTES)
);
CREATE TABLE ST_AGENTECAUSADOR 
(
  PK_AGENTECAUSADOR             SMALLINT         NOT NULL,
  NOME                           VARCHAR(   100)  COLLATE ISO8859_1
);
CREATE TABLE ST_AGENTES 
(
  PK_AGENTES             SMALLINT         NOT NULL,
  DESCRICAO               VARCHAR(    50)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_AGENTES PRIMARY KEY (PK_AGENTES)
);
CREATE TABLE ST_AGENTESPREVIDENCIA 
(
  PK_AGENTESPREVIDENCIA             SMALLINT         NOT NULL,
  NOME                                  V100 ,
  FK_GRUPOS                         SMALLINT         DEFAULT 1,
 CONSTRAINT PK_ST_AGENTESPREVIDENCIA PRIMARY KEY (PK_AGENTESPREVIDENCIA)
);
CREATE TABLE ST_AGENTESPREVIDENCIADESCR 
(
  FK_AGENTESPREVIDENCIA                 SMALLINT         DEFAULT 1 NOT NULL,
  PK_AGENTESPREVIDENCIADESC             SMALLINT         NOT NULL,
  DESCRICAO                                V1000 
);
CREATE TABLE ST_ANAMNESE 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                   SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANAMNESE                       SMALLINT         NOT NULL,
  DATAANAMNESE                          DATE,
  DATACONFIRMACAO                  TIMESTAMP,
  DATACONFIRMACAOMEDICO            TIMESTAMP,
  FK_MEDICOS                        SMALLINT,
  FK_MODANAMNESE                    SMALLINT,
  MARCADO                               CHAR(     1)  COLLATE ISO8859_1,
  TIPOCONFIRMACAO                       CHAR(     1)  COLLATE ISO8859_1,
  TIPOCONFIRMACAOMEDICO                 CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_ANAMNESE PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_FUNCIONARIOS, PK_ANAMNESE)
);
CREATE TABLE ST_ANAMNESEITEM 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_ANAMNESE                      SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANAMNESEITEM                  SMALLINT         NOT NULL,
  PERGUNTA                          VARCHAR(  1000)  COLLATE ISO8859_1,
  RESPOSTA                         SMALLINT,
  RESPOSTADISSERTATIVA              VARCHAR(  1000)  COLLATE ISO8859_1,
  FK_GRUPOS                        SMALLINT,
  TIPORESPOSTA                     SMALLINT,
  POSICAO                          SMALLINT,
 CONSTRAINT PK_ST_ANAMNESEITEM PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_FUNCIONARIOS, FK_ANAMNESE, PK_ANAMNESEITEM)
);
CREATE TABLE ST_ANANEXO11 
(
  PK_ANANEXO11              SMALLINT         NOT NULL,
  FK_AGENTES                    V100 ,
  TEMVALORTETO                  CHAR(     1)  COLLATE ISO8859_1,
  ABSORCAOPELE                  CHAR(     1)  COLLATE ISO8859_1,
  INSALUBRIDADE                 CHAR(     1)  COLLATE ISO8859_1,
  CONCLUSAOPPRA                V1000 ,
  PPM                        VARCHAR(    10)  COLLATE ISO8859_1,
  MG_M3                      VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_ANANEXO11 PRIMARY KEY (PK_ANANEXO11)
);
CREATE TABLE ST_ANANEXO11COMPRSAUDE 
(
  FK_ANANEXO11                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO11COMPRSAUDE             SMALLINT         NOT NULL,
  DESCRICAO                              BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO11DANOSSAUDE 
(
  FK_ANANEXO11                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO11DANOSSAUDE             SMALLINT         NOT NULL,
  DESCRICAO                              BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO11FONTEGERADORA 
(
  FK_ANANEXO11                          SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO11FONTEGERADORA             SMALLINT         NOT NULL,
  DESCRICAO                                 BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO11MEDIDASCONTROLE 
(
  FK_ANANEXO11                            SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO11MEDIDASCONTROLE             SMALLINT         NOT NULL,
  DESCRICAO                                   BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO11MEIOPROPAGACAO 
(
  FK_ANANEXO11                           SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO11MEIOPROPAGACAO             SMALLINT         NOT NULL,
  DESCRICAO                                  BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO11REC 
(
  FK_ANANEXO11                SMALLINT         DEFAULT 1 NOT NULL,
  ST_ANANEXO11REC             SMALLINT         NOT NULL,
  DESCRICAO                    VARCHAR(  5000)  COLLATE ISO8859_1
);
CREATE TABLE ST_ANANEXO12 
(
  PK_ANANEXO12                 SMALLINT         NOT NULL,
  INSALUBRIDADE                      C1 ,
  FK_AGENTES                   SMALLINT,
  DESCRICAO                       V1000 ,
  CONCLPPRA                       V1000 ,
  INTENSIDADE                  NUMERICO ,
  FK_UNIDADES                  SMALLINT,
  DESCRICAOAGENTES              VARCHAR(   100)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_ANANEXO12 PRIMARY KEY (PK_ANANEXO12)
);
CREATE TABLE ST_ANANEXO12COMPRSAUDE 
(
  FK_ANANEXO12                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO12COMPRSAUDE             SMALLINT         NOT NULL,
  DESCRICAO                              BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO12DANOSSAUDE 
(
  FK_ANANEXO12                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO12DANOSSAUDE             SMALLINT,
  DESCRICAO                              BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO12FONTEGERADORA 
(
  FK_ANANEXO12                       SMALLINT         DEFAULT 1 NOT NULL,
  ANANEXO12FONTEGERADORA             SMALLINT         NOT NULL,
  DESCRICAO                              BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO12MEDIDASCONTROLE 
(
  FK_ANANEXO12                            SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO12MEDIDASCONTROLE             SMALLINT         NOT NULL,
  DESCRICAO                                   BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO12MEIOPROPAGACAO 
(
  FK_ANANEXO12                           SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO12MEIOPROPAGACAO             SMALLINT         NOT NULL,
  DESCRICAO                                  BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO12REC 
(
  FK_ANANEXO12                SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO12REC             SMALLINT         NOT NULL,
  DESCRICAO                    VARCHAR(  5000)  COLLATE ISO8859_1
);
CREATE TABLE ST_ANANEXO13 
(
  PK_ANANEXO13              SMALLINT         NOT NULL,
  INSALUBRIDADE                 CHAR(     1) NOT NULL COLLATE ISO8859_1,
  FK_AGENTES                    V100 ,
  CONCLPPRA                    V1000 ,
  DESCRICAO                    V1000 ,
  PPM                        VARCHAR(    10)  COLLATE ISO8859_1,
  MG_M3                      VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_ANANEXO13 PRIMARY KEY (PK_ANANEXO13)
);
CREATE TABLE ST_ANANEXO13COMPRSAUDE 
(
  FK_ANANEXO13                    SMALLINT         DEFAULT 1 NOT NULL,
  ANANEXO13COMPRSAUDE             SMALLINT         NOT NULL,
  DESCRICAO                           BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO13FONTEGERADORA 
(
  FK_ANANEXO13                          SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO13FONTEGERADORA             SMALLINT         NOT NULL,
  DESCRICAO                                 BLOB SUB_TYPE 0 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO13MEDIDASCONTROLE 
(
  FK_ANANEXO13                         SMALLINT         DEFAULT 1 NOT NULL,
  ANANEXO13MEDIDASCONTROLE             SMALLINT         NOT NULL,
  DESCRICAO                                BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO13MEIOPROPAGACAO 
(
  FK_ANANEXO13               SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANEXO13MEIO             SMALLINT         NOT NULL,
  DESCRICAO                      BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO13REC 
(
  FK_ANANEXO13                SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO13REC             SMALLINT         NOT NULL,
  DESCRICAO                    VARCHAR(  5000)  COLLATE ISO8859_1
);
CREATE TABLE ST_ANANEXO14 
(
  PK_ANANEXO14              SMALLINT         NOT NULL,
  DESCRICAO                    V1000 ,
  INSALUBRIDADE                   C1 ,
  CONCLPPRA                    V1000 ,
 CONSTRAINT PK_ANANEXO14 PRIMARY KEY (PK_ANANEXO14)
);
CREATE TABLE ST_ANANEXO14COMPRSAUDE 
(
  FK_ANANEXO14                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO14COMPRSAUDE             SMALLINT         NOT NULL,
  DESCRICAO                              BLOB SUB_TYPE 0 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO14DANOSSAUDE 
(
  FK_ANANEXO14                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO14DANOSSAUDE             SMALLINT         NOT NULL,
  DESCRICAO                              BLOB SUB_TYPE 0 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO14MEDIDASCONTROLE 
(
  FK_ANANEXO14                            SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO14MEDIDASCONTROLE             SMALLINT         NOT NULL,
  DESCRICAO                                   BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO14MEIOPROPAGACAO 
(
  FK_ANANEXO14                           SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO14MEIOPROPAGACAO             SMALLINT,
  DESCRICAO                                  BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO14REC 
(
  FK_ANANEXO14                SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO14REC             SMALLINT         NOT NULL,
  DESCRICAO                    VARCHAR(  5000)  COLLATE ISO8859_1
);
CREATE TABLE ST_ANANEXO1E2 
(
  PK_ANANEXO1E2             SMALLINT         NOT NULL,
  LIMITE1                   NUMERICO ,
  DATALT1                       DATA ,
  LIMITE2                   NUMERICO ,
  DATALT2                       DATA ,
  LIMITE3                   NUMERICO ,
  DATALT3                       DATA ,
  LIMITETRAB                NUMERICO ,
  MEIO1                     NUMERICO ,
  MEIO2                     NUMERICO ,
  MEIO3                     NUMERICO ,
  NATRAB                    NUMERICO ,
  CONCLPPRA                     BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  IMPACTOLINEAR             NUMERICO ,
  IMPACTOFAST               NUMERICO ,
  CONCLPPRA2                    BLOB SUB_TYPE 1 SEGMENT SIZE 1024
);
CREATE TABLE ST_ANANEXO1E2COMPRSAUDE 
(
  FK_ANANEXO1E2                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO1E2COMPRSAUDE             SMALLINT         NOT NULL,
  DESCRICAO                               BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO1E2DANOSSAUDE 
(
  FK_ANANEXO1E2                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO1E2DANOSSAUDE             SMALLINT         NOT NULL,
  DESCRICAO                               BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO1E2FONTEGERADORA 
(
  FK_ANANEXO1E2                          SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO1E2FONTEGERADORA             SMALLINT,
  DESCRICAO                                  BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO1E2MEDIDASCONTROLE 
(
  FK_ANANEXO1E2                            SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO1E2MEDIDASCONTROLE             SMALLINT         NOT NULL,
  DESCRICAO                                    BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO1E2MEIOPROPAGACAO 
(
  FK_ANANEXO1E2                           SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO1E2MEIOPROPAGACAO             SMALLINT         NOT NULL,
  DESCRICAO                                   BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_ANANEXO1E2REC 
(
  FK_ANANEXO1E2                SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANANEXO1E2REC             SMALLINT,
  DESCRICAO                     VARCHAR(  5000)  COLLATE ISO8859_1
);
CREATE TABLE ST_ANANEXO3A10 
(
  PK_ANANEXO310             SMALLINT         NOT NULL,
  FK_ANEXOS                 SMALLINT         NOT NULL,
  DESCRICAO                     V100 ,
  CONCLPPRA                     BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  LIMITE5                    NUMERIC( 15, 2),
  IDUNIDADE                 SMALLINT,
  LIMITE8SUP                NUMERICO ,
  LIMITE8INF                NUMERICO 
);
CREATE TABLE ST_ANANEXO3A10DANOSSAUDE 
(
  FK_ANANEXO310                        SMALLINT         NOT NULL,
  PK_ANANEXO3A10DANOSSAUDE             SMALLINT,
  DESCRICAO                                BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FK_ANEXOS                            SMALLINT
);
CREATE TABLE ST_ANANEXO3A10MEIOPROPAGACAO 
(
  FK_ANANEXO310                            SMALLINT         NOT NULL,
  PK_ANANEXO3A10MEIOPROPAGACAO             SMALLINT,
  DESCRICAO                                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FK_ANEXOS                                SMALLINT
);
CREATE TABLE ST_ANANEXO3A10REC 
(
  FK_ANANEXO310                 SMALLINT         NOT NULL,
  PK_ANANEXO3A10REC             SMALLINT,
  DESCRICAO                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FK_ANEXOS                     SMALLINT
);
CREATE TABLE ST_APARELHAGEM 
(
  PK_APARELHAGEM                    SMALLINT         NOT NULL,
  DESCRICAO                              V50 ,
  FK_MARCAS                         SMALLINT,
  FK_MODELOS                        SMALLINT,
  DATACALIBRAGEM                   TIMESTAMP,
  VALIDADE                         TIMESTAMP,
  NUMEROSERIE                        VARCHAR(    50)  COLLATE ISO8859_1,
  FK_PATRIMONIO                     SMALLINT         DEFAULT 1,
  FK_PRODUTOS                       SMALLINT         DEFAULT 1,
  FK_CERTCALIBRACAO                 SMALLINT,
  FK_ALOC_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_ALOC_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_ALOC_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_ALOC_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_ALOC_CENTROCUSTO                VARCHAR(    10) DEFAULT '10100' COLLATE ISO8859_1,
  ALOC_DATA                        TIMESTAMP,
  MARCAS                             VARCHAR(    50)  COLLATE ISO8859_1,
  MODELOS                            VARCHAR(    50)  COLLATE ISO8859_1,
  INCLUIRPPRA                           CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  INCLUIRLTCAT                          CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  INCLUIRPCMAT                          CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  INCLUIRAPOSENTADORIA                  CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
 CONSTRAINT PK_ST_APARELHAGEM PRIMARY KEY (PK_APARELHAGEM)
);
CREATE TABLE ST_APOSENTADORIA_RISCO 
(
  PK_APOS_RISCO             SMALLINT         NOT NULL,
  NOME                          V100 ,
  LIMITE                    NUMERICO ,
  FK_UNIDADES               SMALLINT,
  DECRETO                       CHAR(     1)  COLLATE ISO8859_1,
  TIPO                          CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_APOSENTADORIA_RISCO PRIMARY KEY (PK_APOS_RISCO)
);
CREATE TABLE ST_APOSENTADORIA_RISCO_ATIV 
(
  FK_APOS_RISCO                  SMALLINT         NOT NULL,
  PK_APOS_RISCO_ATIV             SMALLINT         NOT NULL,
  DESCRICAO_ATIV                    V4000 ,
  CONCLUSAOESPECIAL                 V4000 ,
  CONCLUSAONESPECIAL                V4000 ,
 CONSTRAINT PK_ST_APOSENTADORIA_RISCO_A PRIMARY KEY (FK_APOS_RISCO, PK_APOS_RISCO_ATIV)
);
CREATE TABLE ST_APOSENTADORIA_RISCO_DESC 
(
  FK_APOS_RISCO                  SMALLINT         NOT NULL,
  PK_APOS_RISCO_DESC             SMALLINT         NOT NULL,
  DESCRICAO_AGENTE                  V4000 ,
  CONCLUSAOESPECIAL                 V4000 ,
  CONCLUSAONESPECIAL                V4000 ,
 CONSTRAINT PK_ST_APOSENTADORIA_RISCO_D PRIMARY KEY (FK_APOS_RISCO, PK_APOS_RISCO_DESC)
);
CREATE TABLE ST_AREADEVIVENCIA 
(
  PK_AREADEVIVENCIA             SMALLINT,
  TEXTO                             BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  TIPO                      FLAG_SIM_NAO ,
  TITULO                            V100 
);
CREATE TABLE ST_ASSOCIACAOAGENTES 
(
  PK_ASSOCIACAOAGENTES             SMALLINT,
  FK_AGENTE11                      SMALLINT,
  FK_AGENTE13                      SMALLINT,
  FK_AGENTE14                      SMALLINT,
  FK_ANEXOS                        SMALLINT,
  FK_AGENTEPREVIDENCIA             SMALLINT,
  FK_AGENTE12                      SMALLINT
);
CREATE TABLE ST_ATESTADOS 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                 SMALLINT         DEFAULT 1 NOT NULL,
  PK_ATESTADOS                    SMALLINT         NOT NULL,
  DATAENTRADA                    TIMESTAMP,
  TIPO                             VARCHAR(     2)  COLLATE ISO8859_1,
  FK_CARGOS                       SMALLINT,
  FK_MEDICOS                      SMALLINT,
  FK_SETORES                      SMALLINT,
  DATAEMISSAO                    TIMESTAMP,
  FK_CIDADES                       INTEGER,
  FK_BAIRROS                       INTEGER,
  FK_SETORESANTERIOR              SMALLINT,
  FK_CARGOSANTERIOR               SMALLINT,
  DATAPREVISTA                   TIMESTAMP,
  FK_CONSULTAS                    SMALLINT,
  OBS                                V1000 ,
  DATAEXAME                      TIMESTAMP,
  SEQUENCIA                       SMALLINT,
  PERIODICIDADE_ASO               SMALLINT,
  APTO                                CHAR(     1)  COLLATE ISO8859_1,
  AGUARDANDOEXAMES                    CHAR(     1)  COLLATE ISO8859_1,
  REALIZADO                           CHAR(     1)  COLLATE ISO8859_1,
  TIPORETORNOTRABALHO                 CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_ATESTADOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_FUNCIONARIOS, PK_ATESTADOS)
);
CREATE TABLE ST_ATESTADOSRISCOS 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_ATESTADOS                     SMALLINT         NOT NULL,
  PK_ATESTADOSRISCOS               SMALLINT         NOT NULL,
  FK_ANEXOS                        SMALLINT,
  FK_AGENTE11                      SMALLINT,
  FK_AGENTE13                      SMALLINT,
  FK_AGENTE14                      SMALLINT,
  FK_AGENTE12                      SMALLINT,
  FK_ACIDENTES                     SMALLINT,
  FK_ACIDENTESGRUPO                SMALLINT,
  FK_ACIDENTESSUBGRUPO             SMALLINT,
  FK_ERGONOMIA                     SMALLINT,
  FK_ERGONOMIAGRUPO                SMALLINT,
  FK_ERGONOMIASUBGRUPO             SMALLINT,
 CONSTRAINT PK_ST_ATESTADOSRISCOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_FUNCIONARIOS, FK_ATESTADOS, PK_ATESTADOSRISCOS)
);
CREATE TABLE ST_BIBLIOGRAFIA 
(
  PK_BILIOGRAFIA             SMALLINT         NOT NULL,
  TITULO                          V50 ,
  AUTOR                           V50 ,
  DESCRICAO                      BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  EDITORA                         V50 ,
  EDICAO                           V3 ,
  ANO                         VARCHAR(     4)  COLLATE ISO8859_1,
  TIPO                           CHAR(     1)  COLLATE ISO8859_1,
  TIPOPPRA                       CHAR(     1)  COLLATE ISO8859_1,
  TIPOLTCAT                      CHAR(     1)  COLLATE ISO8859_1,
  TIPOPCMSO                      CHAR(     1)  COLLATE ISO8859_1,
  INCLUIRPPRA                    CHAR(     1)  COLLATE ISO8859_1,
  INCLUIRLTCAT                   CHAR(     1)  COLLATE ISO8859_1,
  INCLUIRPCMSO                   CHAR(     1)  COLLATE ISO8859_1,
  INCLUIRPCMAT                   CHAR(     1)  COLLATE ISO8859_1,
  TIPOPCMAT                      CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_BIBLIOGRAFIA PRIMARY KEY (PK_BILIOGRAFIA)
);
CREATE TABLE ST_CARGOSACIDENTES 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOS_ACIDENTES             SMALLINT         NOT NULL,
  FK_ACIDENTES                    SMALLINT         NOT NULL,
  DATAINICIO                     TIMESTAMP,
  DATAFINAL                      TIMESTAMP,
  FK_GRUPOS                       SMALLINT,
  DESCRICAO                           BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  RECOMENDACOES                       BLOB SUB_TYPE 1 SEGMENT SIZE 80,
 CONSTRAINT PK_ST_CARGOSACIDENTES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOS_ACIDENTES)
);
CREATE TABLE ST_CARGOSACIDENTESEPI 
(
  FK_EMPRESAS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                          SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOS_ACIDENTESEPI             SMALLINT         NOT NULL,
  FK_EPI                             SMALLINT         NOT NULL,
  DATAINICIO                             DATE,
  FIM                                    DATE,
 CONSTRAINT PK_ST_CARGOSACIDENTESEPI PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOS_ACIDENTESEPI)
);
CREATE TABLE ST_CARGOSAGENTE2 
(
  FK_EMPRESAS                            SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                             SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                              SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOS_AGENTES                      SMALLINT         NOT NULL,
  DATA                                       DATE         NOT NULL,
  FK_ANEXOS                              SMALLINT         NOT NULL,
  FK_AGENTE11                            SMALLINT,
  FK_IDAGENTE12                          SMALLINT,
  FK_IDAGENTE13                          SMALLINT,
  TIPO                               FLAG_SIM_NAO ,
  INTENSIDADE1                            NUMERIC( 15, 2),
  INTENSIDADE2                            NUMERIC( 15, 2),
  INTENSIDADEPPM                          NUMERIC( 15, 3),
  INTENSIDADEMG_M3                        NUMERIC( 15, 3),
  FK_UNIDADES                            SMALLINT,
  FK_TECNICAS                            SMALLINT,
  INSALUBRIDADE                      FLAG_SIM_NAO ,
  NIVELACAO                          FLAG_SIM_NAO ,
  NOCIVO                             FLAG_SIM_NAO ,
  EPI                                FLAG_SIM_NAO ,
  EPIFICHA                           FLAG_SIM_NAO ,
  EPITREINAMENTO                     FLAG_SIM_NAO ,
  EPIUSO                             FLAG_SIM_NAO ,
  EPCEFICAZ                          FLAG_SIM_NAO ,
  GFIP                               FLAG_SIM_NAO ,
  MEDICAO_EM                         FLAG_SIM_NAO ,
  CONSTAR_EM                         FLAG_SIM_NAO ,
  DATAFINAL                                  DATE,
  FK_AGENTE14                            SMALLINT,
  LEITURARUIDOIMPACTO                FLAG_SIM_NAO ,
  IBUTG                                  NUMERICO ,
  TIPOATIVIDADE                      FLAG_SIM_NAO ,
  REGIMETRABALHO                     FLAG_SIM_NAO ,
  CONCLLTCAT                                 BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  CONCLPPRA                                  BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  FK_AGENTEPREVIDENCIA                   SMALLINT,
  DESCRAGPREVIDENCIA                        V1000 ,
  FK_ANEXO1NR16                          SMALLINT,
  FK_ANEXO2NR16                          SMALLINT,
  NIVELACAOPCMSO                     FLAG_SIM_NAO ,
  FK_NR16ELETRICIDADE                    SMALLINT,
  FK_NR16ELETRICIDADETAREFA              SMALLINT,
  FK_NR16RADIONIZANTES                   SMALLINT,
  FK_NR16RADIONIZANTESTAREFA             SMALLINT,
  INTENSIDADE12                           NUMERIC( 15, 3),
  LIMITE12                                NUMERIC( 15, 3),
  DATAEPI                                    DATA ,
  NAOIMPEXAMES                       FLAG_SIM_NAO ,
  OBS                                        BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  INTENSIDADE9                            NUMERIC( 15, 2),
  LIMITE9                                 NUMERIC( 15, 2),
  INTENSIDADE5                            NUMERIC( 15, 2),
  FK_ANEXO2NR16AREARISCO                 SMALLINT,
  EPIEFICAZ                                  CHAR(     1)  COLLATE ISO8859_1,
  FONTEGERADORA                              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  MEIOPROPAGACAO                             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  COMPROMETIMENTOSAUDE                       BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  DANOSSAUDE                                 BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  MEDIDASCONTROLE                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FOTO                                    VARCHAR(   200)  COLLATE ISO8859_1,
  FK_GRUPOS                              SMALLINT,
  FK_LOCALTRABALHO                        NUMERIC( 10, 0),
  FK_POSTOTRABALHO                        NUMERIC( 10, 0),
  FK_NR17ILUMINAMENTO                     NUMERIC( 10, 0),
  INTENSIDADELUX                          NUMERIC( 10, 0),
  NIVELRECLUX                             NUMERIC( 10, 0),
  CONSIDERARNIVELACAOPCMSO           FLAG_SIM_NAO ,
  RECOMENDACOES                              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  LEGENDA                                   V1000 ,
  LOCALDESCANSO                      FLAG_SIM_NAO ,
  METABOLISMOTRABALHO                    NUMERICO ,
  METABOLISMODESCANSO                    NUMERICO ,
  TEMPOTRABALHO                          NUMERICO ,
  TEMPODESCANSO                          NUMERICO ,
  LIMITEIBUTG                            NUMERICO ,
  FK_EXPOSICAO                           SMALLINT,
  INTENSIDADE8                           NUMERICO ,
  TIPOVIBRACAO                               CHAR(     1)  COLLATE ISO8859_1,
  POSICAO                                    CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_CARGOSAGENTE2 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOS_AGENTES)
);
update rdb$relation_fields set rdb$description = 'F
Q
B' where rdb$relation_name = 'ST_CARGOSAGENTE2' and rdb$field_name = 'TIPO';
CREATE TABLE ST_CARGOSAGENTE2EPI 
(
  FK_EMPRESAS                            SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                             SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                              SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOSAGENTES                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOSAGENTES2EPI                   SMALLINT         NOT NULL,
  FK_EPI                                 SMALLINT,
  DATA                                       DATE         NOT NULL,
  FK_ANEXOS                              SMALLINT,
  FK_AGENTE11                            SMALLINT,
  FK_AGENTE13                            SMALLINT,
  FK_AGENTE14                            SMALLINT,
  NPSC1                                  NUMERICO ,
  NPSC2                                  NUMERICO ,
  FIM                                        DATE,
  FK_ANEXO1NR16                          SMALLINT,
  FK_ANEXO2NR16                          SMALLINT,
  FK_AGENTE12                            SMALLINT,
  FK_NR16RADIONIZANTES                   SMALLINT,
  FK_NR16RADIONIZANTESTAREFA             SMALLINT,
  FK_NR16ELETRICIDADE                    SMALLINT,
  FK_NR16ELETRICIDADETAREFA              SMALLINT,
 CONSTRAINT PK_ST_CARGOSAGENTE2EPI PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, FK_CARGOSAGENTES, PK_CARGOSAGENTES2EPI)
);
CREATE TABLE ST_CARGOSAPOSENTADORIA 
(
  FK_EMPRESAS                             SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                              SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                               SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOS_APOSENTADORIA                 SMALLINT         NOT NULL,
  DATA                                   TIMESTAMP,
  FK_APOSENTADORIA_RISCO                  SMALLINT,
  FK_APOSENTADORIA_RISCO_ATIV             SMALLINT,
  FK_APOSENTADORIA_RISCO_DESC             SMALLINT,
  FIM                                    TIMESTAMP,
  CONCLUSAO                                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  INTENSIDADE                             NUMERICO ,
  FK_UNIDADES                             SMALLINT,
  FK_EXPOSICAO                            SMALLINT,
  PERIODO                                     CHAR(     1)  COLLATE ISO8859_1,
  FK_GRUPOS                               SMALLINT,
 CONSTRAINT PK_ST_CARGOSAPOSENTADORIA PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOS_APOSENTADORIA)
);
CREATE TABLE ST_CARGOSDESCRICAO 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                      SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOSDESCRICAO             SMALLINT         NOT NULL,
  DATAINICIO                    TIMESTAMP,
  DATAFIM                       TIMESTAMP,
  DESCRICAOCARGO                  VARCHAR(   100)  COLLATE ISO8859_1,
  DESCRITIVO                      VARCHAR(   100)  COLLATE ISO8859_1,
  FK_CBO                         SMALLINT,
  FOTO1                           VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2                           VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3                           VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4                           VARCHAR(   200)  COLLATE ISO8859_1,
  INTRODUCAOOBRA                     BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  ATIVIDADES                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ATIVIDADESDETAL                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  LEGENDA1                          V1000 ,
  LEGENDA2                          V1000 ,
  LEGENDA3                          V1000 ,
  LEGENDA4                          V1000 ,
 CONSTRAINT PK_ST_CARGOSDESCRICAO PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOSDESCRICAO)
);
CREATE TABLE ST_CARGOSEMPREGADOS 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                         SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOSFUNCIONARIOS             SMALLINT         NOT NULL,
  DATAINI                          TIMESTAMP,
  DATAFIM                          TIMESTAMP,
  QUANTIDADE                        SMALLINT         DEFAULT 1,
 CONSTRAINT PK_ST_CARGOSEMPREGADOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOSFUNCIONARIOS)
);
CREATE TABLE ST_CARGOSEMPREGADOSNOME 
(
  FK_EMPRESAS                           SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                            SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                             SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOSFUNCIONARIOSNOME             SMALLINT         NOT NULL,
  FK_FUNCIONARIOS                       SMALLINT,
  INICIO                                    DATE,
  FIM                                       DATE,
 CONSTRAINT PK_ST_CARGOSEMPREGADOSNOME PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOSFUNCIONARIOSNOME)
);
CREATE TABLE ST_CARGOSEPI 
(
  FK_EMPRESAS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOSEPI             SMALLINT         NOT NULL,
  FK_EPI                   SMALLINT,
  INICIO                       DATE,
  FIM                          DATE,
 CONSTRAINT PK_ST_CARGOSEPI PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOSEPI)
);
CREATE TABLE ST_CARGOSERGONOMIA 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                      SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOSERGONOMIA             SMALLINT         NOT NULL,
  FK_ERGONOMIA                   SMALLINT         NOT NULL,
  DATAINICIO                    TIMESTAMP,
  DATAFINAL                     TIMESTAMP,
  FK_GRUPOS                      SMALLINT,
  DESCRICAO                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  RECOMENDACOES                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
 CONSTRAINT PK_ST_CARGOSERGONOMIA PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOSERGONOMIA)
);
CREATE TABLE ST_CARGOSEXAMES 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_EXAMESPCMSO                  SMALLINT         NOT NULL,
  PK_CARGOSEXAMES                 SMALLINT         NOT NULL,
  TIPO                        FLAG_SIM_NAO ,
  INCLUSO                     FLAG_SIM_NAO ,
  ASO                         FLAG_SIM_NAO ,
  DTINICIO                            DATE,
  DTFIM                               DATE,
  VIDASEXUAL                  FLAG_SIM_NAO ,
  PERIODICIDADE                   SMALLINT,
  HOMEM                       FLAG_SIM_NAO ,
  MULHER                      FLAG_SIM_NAO ,
  HMAIORIDADE                     SMALLINT,
  HMENORIDADE                     SMALLINT,
  HMAIORPERIODICIDADE             SMALLINT,
  HMENORPERIODICIDADE             SMALLINT,
  MMAIORIDADE                     SMALLINT,
  MMENORIDADE                     SMALLINT,
  MMAIORPERIODICIDADE             SMALLINT,
  MMENORPERIODICIDADE             SMALLINT,
  SOMENTEHIDADE               FLAG_SIM_NAO ,
  SOMENTEMIDADE               FLAG_SIM_NAO ,
 CONSTRAINT PK_ST_CARGOSEXAMES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, FK_EXAMESPCMSO, PK_CARGOSEXAMES)
);
update rdb$relation_fields set rdb$description = '0 - Automaticamente
 1 - Manualmente' where rdb$relation_name = 'ST_CARGOSEXAMES' and rdb$field_name = 'INCLUSO';
CREATE TABLE ST_CARGOSEXAMESHISTORICO 
(
  FK_EMPRESAS                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                           SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                            SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOSEXAMESHISTORICO             SMALLINT         NOT NULL,
  DATAINICIO                          TIMESTAMP,
  DATAFIM                             TIMESTAMP,
  NIVELACAO                            SMALLINT,
 CONSTRAINT PK_ST_CARGOSEXAMESHISTORICO PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOSEXAMESHISTORICO)
);
CREATE TABLE ST_CARGOSGFIP 
(
  FK_EMPRESAS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                 SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOSGFIP             SMALLINT         NOT NULL,
  DATAINICIAL              TIMESTAMP,
  DATAFINAL                TIMESTAMP,
  FK_GFIP                   SMALLINT,
 CONSTRAINT PK_ST_CARGOSGFIP PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOSGFIP)
);
CREATE TABLE ST_CARGOSGRUPOHOMOGENEO 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_GRUPOHOMOGENEO             SMALLINT         NOT NULL,
 CONSTRAINT PK_ST_CARGOSGRUPOHOMOGENEO PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, FK_GRUPOHOMOGENEO)
);
CREATE TABLE ST_CARGOSPROCEDIMENTOS1 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGODESCRICAO             SMALLINT         NOT NULL,
  FK_CARGOSPROC1                SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(  2000)  COLLATE ISO8859_1,
  TIPO                              CHAR(     1)  COLLATE ISO8859_1,
  TAMANHO                           CHAR(     1)  COLLATE ISO8859_1,
  FOTO1                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4                          VARCHAR(   200)  COLLATE ISO8859_1,
  ORDEM                         SMALLINT,
  OBJETIVO                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  INTRODUCAO                        BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LEGENDA1                         V1000 ,
  LEGENDA2                         V1000 ,
  LEGENDA3                         V1000 ,
  LEGENDA4                         V1000 ,
 CONSTRAINT PK_ST_CARGOSPROCEDIMENTOS1 PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, FK_CARGODESCRICAO, FK_CARGOSPROC1)
);
CREATE TABLE ST_CARGOSPROCEDIMENTOS2 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGODESCRICAO             SMALLINT,
  FK_CARGOSPROC1                SMALLINT,
  PK_CARGOSPROC2                SMALLINT,
  DESCRICAO                      VARCHAR( 20000)  COLLATE ISO8859_1,
  TAMANHO                           CHAR(     1)  COLLATE ISO8859_1,
  FOTO1                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4                          VARCHAR(   200)  COLLATE ISO8859_1,
  ORDEM                         SMALLINT,
  OBJETIVO                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LEGENDA1                         V1000 ,
  LEGENDA2                         V1000 ,
  LEGENDA3                         V1000 ,
  LEGENDA4                         V1000 
);
CREATE TABLE ST_CARGOSPROCEDIMENTOS3 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGODESCRICAO             SMALLINT,
  FK_CARGOSPROC1                SMALLINT,
  FK_CARGOSPROC2                SMALLINT,
  PK_CARGOSPROC3                SMALLINT,
  DESCRICAO                      VARCHAR(  2000)  COLLATE ISO8859_1,
  TAMANHO                           CHAR(     1)  COLLATE ISO8859_1,
  FOTO1                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4                          VARCHAR(   200)  COLLATE ISO8859_1,
  ORDEM                         SMALLINT,
  OBJETIVO                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LEGENDA1                         V1000 ,
  LEGENDA2                         V1000 ,
  LEGENDA3                         V1000 ,
  LEGENDA4                         V1000 
);
CREATE TABLE ST_CARGOSPROCEDIMENTOS4 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGODESCRICAO             SMALLINT,
  FK_CARGOSPROC1                SMALLINT,
  FK_CARGOSPROC2                SMALLINT,
  FK_CARGOSPROC3                SMALLINT,
  PK_CARGOSPROC4                SMALLINT,
  DESCRICAO                      VARCHAR(  2000)  COLLATE ISO8859_1,
  TAMANHO                           CHAR(     1)  COLLATE ISO8859_1,
  FOTO1                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4                          VARCHAR(   200)  COLLATE ISO8859_1,
  ORDEM                         SMALLINT,
  OBJETIVO                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LEGENDA1                         V1000 ,
  LEGENDA2                         V1000 ,
  LEGENDA3                         V1000 ,
  LEGENDA4                         V1000 
);
CREATE TABLE ST_CARGOSPROCEDIMENTOS5 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGODESCRICAO             SMALLINT,
  FK_CARGOSPROC1                SMALLINT,
  FK_CARGOSPROC2                SMALLINT,
  FK_CARGOSPROC3                SMALLINT,
  FK_CARGOSPROC4                SMALLINT,
  PK_CARGOSPROC5                SMALLINT,
  DESCRICAO                      VARCHAR( 20000)  COLLATE ISO8859_1,
  TAMANHO                           CHAR(     1)  COLLATE ISO8859_1,
  FOTO1                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4                          VARCHAR(   200)  COLLATE ISO8859_1,
  ORDEM                         SMALLINT,
  OBJETIVO                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LEGENDA1                         V1000 ,
  LEGENDA2                         V1000 ,
  LEGENDA3                         V1000 ,
  LEGENDA4                         V1000 
);
CREATE TABLE ST_CARGOSRESTRICOES 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOSRESTRICOES             SMALLINT         NOT NULL,
  FK_RESTRICAO                    SMALLINT,
  DATAINICIAL                    TIMESTAMP,
  DATAFINAL                      TIMESTAMP,
 CONSTRAINT PK_ST_CARGOSRESTRICOES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOSRESTRICOES)
);
CREATE TABLE ST_CARGOSTREINAMENTOS 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                         SMALLINT         DEFAULT 1 NOT NULL,
  PK_CARGOSTREINAMENTOS             SMALLINT         NOT NULL,
  FK_TREINAMENTO                    SMALLINT,
  FK_TREINAMENTOEPI                 SMALLINT,
 CONSTRAINT PK_ST_CARGOSTREINAMENTOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS, PK_CARGOSTREINAMENTOS)
);
CREATE TABLE ST_CARGOS_ANEXOS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                     SMALLINT         DEFAULT 1 NOT NULL,
  NR15ANEXO1                        CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO2                        CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO3                        CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO4                        CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO5                        CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO6                        CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO7                        CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO8                        CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO9                        CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO10                       CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO11                       CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO12                       CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO13                       CHAR(     1)  COLLATE ISO8859_1,
  NR15ANEXO14                       CHAR(     1)  COLLATE ISO8859_1,
  NR16ANEXO1                        CHAR(     1)  COLLATE ISO8859_1,
  NR16ANEXO2                        CHAR(     1)  COLLATE ISO8859_1,
  VERIFICADO                        CHAR(     1)  COLLATE ISO8859_1,
  DESCRITIVO                        V100 ,
  NR16ELETRICIDADE                  CHAR(     1)  COLLATE ISO8859_1,
  NR16RADIONIZANTES                 CHAR(     1)  COLLATE ISO8859_1,
  DATAINI                           DATE,
  DATAFIM                           DATE,
  PCMAT                             CHAR(     1)  COLLATE ISO8859_1,
  PCMATORDEM                    SMALLINT,
  NR17ILUMINAMENTO                  CHAR(     1) NOT NULL COLLATE ISO8859_1,
 CONSTRAINT PK_ST_CARGOS_ANEXOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_CARGOS)
);
CREATE TABLE ST_CAT 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                         SMALLINT         DEFAULT 1 NOT NULL,
  PK_CAT                            SMALLINT         NOT NULL,
  NUMERO                             VARCHAR(    15)  COLLATE ISO8859_1,
  DATACAT                          TIMESTAMP,
  AFASTAMENTO                   FLAG_SIM_NAO ,
  DATAATESTADO                     TIMESTAMP,
  UNIDADEATENDIMENTO                     V50 ,
  INTERNACAO                    FLAG_SIM_NAO ,
  DURACAOTRATAMENTO                 SMALLINT,
  AFASTARPARATRATAMENTO         FLAG_SIM_NAO ,
  DESCRICAOLESAO                     VARCHAR(    70)  COLLATE ISO8859_1,
  DIAGNOSTICO                           V100 ,
  FK_CID10                           VARCHAR(    40)  COLLATE ISO8859_1,
  OBSERVACOES                        VARCHAR(    70)  COLLATE ISO8859_1,
  AREA                                  CHAR(     1)  COLLATE ISO8859_1,
  MATRICULA                              V20 ,
  TIPO                          FLAG_SIM_NAO ,
  EMITENTE                      FLAG_SIM_NAO ,
  OCUPACAO                           VARCHAR(    70)  COLLATE ISO8859_1,
  FK_CBO                            SMALLINT,
  ULTDIATRAB                            DATA ,
  FILIACAO                      FLAG_SIM_NAO ,
  TIPOCAT                       FLAG_SIM_NAO ,
  TIPOCAT_OBITO                         DATA ,
  DTACIDENTE                       TIMESTAMP,
  HRSTRABALHADAS                        TIME,
  LOCALACIDENTE                          V50 ,
  FK_CIDADEACIDENTE                 SMALLINT,
  UF_ACIDENTE                           CHAR(     2)  COLLATE ISO8859_1,
  PARTESCORPO                            V50 ,
  DESCRICAOACIDENTE                    V1000 ,
  MORTE                         FLAG_SIM_NAO ,
  REGISTROPOLICIAL              FLAG_SIM_NAO ,
  NOME1                                  V50 ,
  ENDERECO1                              V50 ,
  FK_CIDADE1                        SMALLINT,
  FK_BAIRRO1                        SMALLINT,
  FONE1                              VARCHAR(    15)  COLLATE ISO8859_1,
  NOME2                                  V50 ,
  ENDERECO2                              V50 ,
  FK_CIDADE2                        SMALLINT,
  FK_BAIRRO2                        SMALLINT,
  FONE2                              VARCHAR(    15)  COLLATE ISO8859_1,
  ESPECIFICACAOLOCAL                    V100 ,
  TIPOACIDENTE                          CHAR(     1)  COLLATE ISO8859_1,
  TURNO                             SMALLINT,
  FK_SUPERVISOR                     SMALLINT,
  GRAVIDADE                         SMALLINT,
  TEMPOAFASTAMENTO                  SMALLINT,
  UNAFASTAMENTO                         CHAR(     1)  COLLATE ISO8859_1,
  CUSTO                             NUMERICO ,
  CAMINHOIMAGEM                      VARCHAR(   200)  COLLATE ISO8859_1,
  LEGENDAIMAGEM                      VARCHAR(   100)  COLLATE ISO8859_1,
  NUMEROACIDENTE                     VARCHAR(    15)  COLLATE ISO8859_1,
  FK_CID                                V100 ,
  FK_AGENTECAUSADOR                 SMALLINT,
  ACIDENTESANTERIORES               SMALLINT,
  LOCALACIDENTEITEM             FLAG_SIM_NAO ,
 CONSTRAINT PK_ST_CAT PRIMARY KEY (PK_CAT)
);
update rdb$relation_fields set rdb$description = '1 - Sim
2 - NÃ£o' where rdb$relation_name = 'ST_CAT' and rdb$field_name = 'AFASTAMENTO';
update rdb$relation_fields set rdb$description = '1 - Urbana
2 - Rural' where rdb$relation_name = 'ST_CAT' and rdb$field_name = 'AREA';
update rdb$relation_fields set rdb$description = '1 - CGC
2 - CEI
3 - CPF
4 - NIT' where rdb$relation_name = 'ST_CAT' and rdb$field_name = 'TIPO';
update rdb$relation_fields set rdb$description = '1 - Empregador
2 - Sindicato
3 - MÃ©dico
4 - Segurado ou dependente
5 - Autoridade pÃºblica' where rdb$relation_name = 'ST_CAT' and rdb$field_name = 'EMITENTE';
update rdb$relation_fields set rdb$description = '1 - Empregado
2 - Trab. Avulso
7 - Seg. especial
8 - MÃ©dico resid.' where rdb$relation_name = 'ST_CAT' and rdb$field_name = 'FILIACAO';
update rdb$relation_fields set rdb$description = '1 - Inicio
2 - Reabertura
3 - Comunicacao de Obito' where rdb$relation_name = 'ST_CAT' and rdb$field_name = 'TIPOCAT';
CREATE TABLE ST_CATCAUSAS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CAT                       SMALLINT,
  FK_CAUSAS                    SMALLINT
);
CREATE TABLE ST_CATDADOSCOMPLEMENTARES 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_CAT                       SMALLINT,
  TITULO                        VARCHAR(   100)  COLLATE ISO8859_1,
  DESCRICAO                        BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_CATINVESTIGACAO 
(
  FK_EMPRESAS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_CAT                             SMALLINT,
  FK_DADOCOMPLEMENTARCAT             SMALLINT
);
CREATE TABLE ST_CAUSASACIDENTES 
(
  PK_CAUSASACIDENTES             SMALLINT,
  DESCRICAO                       VARCHAR(   100)  COLLATE ISO8859_1
);
CREATE TABLE ST_CID10_1 
(
  PK_CID10_1              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  CAPITULO                VARCHAR(    30)  COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(   200)  COLLATE ISO8859_1
);
CREATE TABLE ST_CID10_2 
(
  PK_CID10_2              VARCHAR(     5) NOT NULL COLLATE ISO8859_1,
  FK_CID10_1              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(   300)  COLLATE ISO8859_1
);
CREATE TABLE ST_CID10_3 
(
  PK_CID10_2              VARCHAR(    10) NOT NULL COLLATE ISO8859_1,
  FK_CID10_2              VARCHAR(     5) NOT NULL COLLATE ISO8859_1,
  DESCRICAO               VARCHAR(   300)  COLLATE ISO8859_1
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_APOSE 
(
  PK_CONSGERAISAPOSENTADORIA             SMALLINT,
  TEXTO                                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  INCLUIRAPOSENTADORIA               FLAG_SIM_NAO ,
  PGNOVA                             FLAG_SIM_NAO ,
  TITULO                                     V200 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_LTCAT1 
(
  PK_CONSIDERACOES_GERAIS_LTCAT1             SMALLINT,
  TITULO                                      VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  POSICAO                                        CHAR(     1)  COLLATE ISO8859_1,
  INCLUIRLTCAT                           FLAG_SIM_NAO ,
  ORDEM                                      SMALLINT,
  PGNOVA                                           C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_LTCAT2 
(
  FK_CONSIDERACOES_GERAIS_LTCAT1             SMALLINT         NOT NULL,
  PK_CONSIDERACOES_GERAIS_LTCAT2             SMALLINT,
  TITULO                                      VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                                      SMALLINT,
  PGNOVA                                           C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_LTCAT3 
(
  FK_CONSIDERACOES_GERAIS_LTCAT1             SMALLINT         NOT NULL,
  FK_CONSIDERACOES_GERAIS_LTCAT2             SMALLINT,
  PK_CONSIDERACOES_GERAIS_LTCAT3             SMALLINT,
  TITULO                                      VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                                      SMALLINT,
  PGNOVA                                           C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_LTCAT4 
(
  FK_CONSIDERACOES_GERAIS_LTCAT1             SMALLINT         NOT NULL,
  FK_CONSIDERACOES_GERAIS_LTCAT2             SMALLINT,
  FK_CONSIDERACOES_GERAIS_LTCAT3             SMALLINT,
  PK_CONSIDERACOES_GERAIS_LTCAT4             SMALLINT,
  TITULO                                      VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                                      SMALLINT,
  PGNOVA                                           C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_PCMAT1 
(
  PK_CONSIDERACOES_GERAIS_PCMAT1             SMALLINT,
  TITULO                                      VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  POSICAO                                        CHAR(     1)  COLLATE ISO8859_1,
  INCLUIRPCMAT                           FLAG_SIM_NAO ,
  ORDEM                                      SMALLINT
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_PCMSO1 
(
  PK_CONSIDERACOES_GERAIS_PCMSO1             SMALLINT,
  TITULO                                      VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  POSICAO                                        CHAR(     1)  COLLATE ISO8859_1,
  INCLUIRPCMSO                           FLAG_SIM_NAO ,
  ORDEM                                      SMALLINT,
  PGNOVA                                           C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_PCMSO2 
(
  FK_CONSIDERACOES_GERAIS_PCMSO1             SMALLINT         NOT NULL,
  PK_CONSIDERACOES_GERAIS_PCMSO2             SMALLINT,
  TITULO                                      VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                                      SMALLINT,
  PGNOVA                                           C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_PCMSO3 
(
  FK_CONSIDERACOES_GERAIS_PCMSO1             SMALLINT         NOT NULL,
  FK_CONSIDERACOES_GERAIS_PCMSO2             SMALLINT,
  PK_CONSIDERACOES_GERAIS_PCMSO3             SMALLINT,
  TITULO                                      VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                                      SMALLINT,
  PGNOVA                                           C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_PCMSO4 
(
  FK_CONSIDERACOES_GERAIS_PCMSO1             SMALLINT         NOT NULL,
  FK_CONSIDERACOES_GERAIS_PCMSO2             SMALLINT,
  FK_CONSIDERACOES_GERAIS_PCMSO3             SMALLINT,
  PK_CONSIDERACOES_GERAIS_PCMSO3             SMALLINT,
  TITULO                                      VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                                      SMALLINT,
  PGNOVA                                           C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_PPRA1 
(
  PK_CONSIDERACOES_GERAIS_PPRA1             SMALLINT,
  TITULO                                     VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  POSICAO                                       CHAR(     1)  COLLATE ISO8859_1,
  INCLUIRPPRA                           FLAG_SIM_NAO ,
  ORDEM                                     SMALLINT,
  PGNOVA                                          C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_PPRA2 
(
  FK_CONSIDERACOES_GERAIS_PPRA1             SMALLINT,
  PK_CONSIDERACOES_GERAIS_PPRA2             SMALLINT,
  TITULO                                     VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                                     SMALLINT,
  PGNOVA                                          C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_PPRA3 
(
  FK_CONSIDERACOES_GERAIS_PPRA1             SMALLINT,
  FK_CONSIDERACOES_GERAIS_PPRA2             SMALLINT,
  PK_CONSIDERACOES_GERAIS_PPRA3             SMALLINT,
  TITULO                                     VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                                     SMALLINT,
  PGNOVA                                          C1 
);
CREATE TABLE ST_CONSIDERACOES_GERAIS_PPRA4 
(
  FK_CONSIDERACOES_GERAIS_PPRA1             SMALLINT,
  FK_CONSIDERACOES_GERAIS_PPRA2             SMALLINT,
  FK_CONSIDERACOES_GERAIS_PPRA3             SMALLINT,
  PK_CONSIDERACOES_GERAIS_PPRA4             SMALLINT,
  TITULO                                     VARCHAR(   100)  COLLATE ISO8859_1,
  TEXTO                                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                                     SMALLINT,
  PGNOVA                                          C1 
);
CREATE TABLE ST_CONSULTA 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                   SMALLINT         DEFAULT 1 NOT NULL,
  PK_CONSULTAS                      SMALLINT,
  DATACONSULTA                     TIMESTAMP,
  FK_MEDICOS                        SMALLINT,
  OCUPACIONAL                   FLAG_SIM_NAO ,
  MOTIVO                        FLAG_SIM_NAO ,
  PROBLEMAALEGADO                       V100 ,
  PROBLEMADIAGNOSTICADO                 V100 ,
  FK_CID10_1                             V10 ,
  FK_CID10_2                             V10 ,
  FK_CID10_3                             V10 ,
  COMPARECEU                    FLAG_SIM_NAO ,
  STATUS                        FLAG_SIM_NAO ,
  DESCRICAO                          VARCHAR(   500)  COLLATE ISO8859_1,
  OBSERVACOES                           BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  FK_ATESTADO                       SMALLINT,
  FK_EXAMES                         SMALLINT,
  FK_SERVICO                        SMALLINT
);
CREATE TABLE ST_CRONOGRAMAACOES 
(
  PK_CRONOGRAMAS             SMALLINT,
  TITULO                         V100 ,
  DESCRICAO                      BLOB SUB_TYPE 0 SEGMENT SIZE 80
);
CREATE TABLE ST_EMPREGADOSFCSINTOMAS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_FICHACLINICA              SMALLINT         NOT NULL,
  FK_SINTOMAS                  SMALLINT         NOT NULL
);
CREATE TABLE ST_EMPREGADOSFICHACLINICA 
(
  FK_EMPRESAS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                    SMALLINT         DEFAULT 1 NOT NULL,
  PK_FUNCFICHACLINICA                SMALLINT,
  FICHACLINICA                           BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  DATA                                   DATA ,
  FK_MEDICOS                         SMALLINT,
  DATACONFIRMACAO                     VARCHAR(   100)  COLLATE ISO8859_1,
  DATACONFIRMACAOMEDICO               VARCHAR(   100)  COLLATE ISO8859_1,
  MARCADO                                CHAR(     1)  COLLATE ISO8859_1,
  HORA                                   TIME,
  PESO                               NUMERICO ,
  ALTURA                             NUMERICO ,
  IMC                                NUMERICO ,
  PERIMETROABDOMINAL                 NUMERICO ,
  TEMPERATURA                        NUMERICO ,
  FREQUENCIACARDIACA                 NUMERICO ,
  FREQUENCIARESPIRATORIA             NUMERICO ,
  PRESSAOARTERIAL1                   NUMERICO ,
  PRESSAOARTERIAL2                   NUMERICO ,
  FK_CID                                 V100 ,
  AFASTAMENTO                        NUMERICO ,
  UNAFASTAMENTO                          CHAR(     1)  COLLATE ISO8859_1,
  FK_MOTIVOS                          NUMERIC( 10, 0),
  MOTIVO                              VARCHAR(    20)  COLLATE ISO8859_1,
  ANULADA                        FLAG_SIM_NAO ,
  PESCOCO                        FLAG_SIM_NAO ,
  CERVICAL                       FLAG_SIM_NAO ,
  OMBROD                         FLAG_SIM_NAO ,
  OMBROE                         FLAG_SIM_NAO ,
  BRACOD                         FLAG_SIM_NAO ,
  BRACOE                         FLAG_SIM_NAO ,
  COSTASSUPERIOR                 FLAG_SIM_NAO ,
  COSTASMEDIO                    FLAG_SIM_NAO ,
  COSTASINFERIOR                 FLAG_SIM_NAO ,
  BACIA                          FLAG_SIM_NAO ,
  COTOVELOD                      FLAG_SIM_NAO ,
  COTOVELOE                      FLAG_SIM_NAO ,
  ANTEBRACOD                     FLAG_SIM_NAO ,
  ANTEBRACOE                     FLAG_SIM_NAO ,
  PUNHOD                         FLAG_SIM_NAO ,
  PUNHOE                         FLAG_SIM_NAO ,
  MAOD                           FLAG_SIM_NAO ,
  MAOE                           FLAG_SIM_NAO ,
  COXAD                          FLAG_SIM_NAO ,
  COXAE                          FLAG_SIM_NAO ,
  JOELHOD                        FLAG_SIM_NAO ,
  JOELHOE                        FLAG_SIM_NAO ,
  PERNAD                         FLAG_SIM_NAO ,
  PERNAE                         FLAG_SIM_NAO ,
  TORNOZELOD                     FLAG_SIM_NAO ,
  TORNOZELOE                     FLAG_SIM_NAO ,
  PED                            FLAG_SIM_NAO ,
  PEE                            FLAG_SIM_NAO ,
  PESCOCODOR                         SMALLINT,
  CERVICALDOR                        SMALLINT,
  OMBRODDOR                          SMALLINT,
  OMBROEDOR                          SMALLINT,
  BRACODDOR                          SMALLINT,
  BRACOEDOR                          SMALLINT,
  COSTASSUPERIORDOR                  SMALLINT,
  COSTASMEDIODOR                     SMALLINT,
  COSTASINFERIORDOR                  SMALLINT,
  BACIADOR                           SMALLINT,
  COTOVELODDOR                       SMALLINT,
  COTOVELOEDOR                       SMALLINT,
  ANTEBRACODDOR                      SMALLINT,
  ANTEBRACOEDOR                      SMALLINT,
  PUNHODDOR                          SMALLINT,
  PUNHOEDOR                          SMALLINT,
  MAODDOR                            SMALLINT,
  MAOEDOR                            SMALLINT,
  COXADDOR                           SMALLINT,
  COXAEDOR                           SMALLINT,
  JOELHODDOR                         SMALLINT,
  JOELHOEDOR                         SMALLINT,
  PERNADDOR                          SMALLINT,
  PERNAEDOR                          SMALLINT,
  TORNOZELODDOR                      SMALLINT,
  TORNOZELOEDOR                      SMALLINT,
  PEDDOR                             SMALLINT,
  PEEDOR                             SMALLINT,
  TIPOCONFIRMACAO                FLAG_SIM_NAO ,
  TIPO                                   CHAR(     2)  COLLATE ISO8859_1,
  TIPOCONFIRMACAOMEDICO          FLAG_SIM_NAO ,
  IDTIPOATENDIMENTO                  SMALLINT
);
CREATE TABLE ST_EMPREGADOSHISTORICO 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                  SMALLINT         DEFAULT 1 NOT NULL,
  PK_FUNCHISTORICOS                SMALLINT,
  EPIEFICAZ                    FLAG_SIM_NAO ,
  EPCEFICAZ                    FLAG_SIM_NAO ,
  GFIP                         FLAG_SIM_NAO ,
  INICIO                               DATA ,
  FIM                                  DATA ,
  DATAMEDICAO                          DATA ,
  INTENSIDADE                       VARCHAR(    30)  COLLATE ISO8859_1,
  FK_CARGOS                        SMALLINT,
  FK_ANEXOS                        SMALLINT,
  FK_AGENTE11                      SMALLINT,
  FK_AGENTE13                      SMALLINT,
  FK_AGENTE14                      SMALLINT,
  FK_TECNICA                       SMALLINT,
  FK_UNIDADES                      SMALLINT,
  FK_EPI0                          SMALLINT,
  FK_EPI1                          SMALLINT,
  FK_EPI2                          SMALLINT,
  FK_EPI3                          SMALLINT,
  FK_EPI4                          SMALLINT,
  FK_EPI5                          SMALLINT,
  FK_EPI6                          SMALLINT,
  FK_EPI7                          SMALLINT,
  FK_EPI8                          SMALLINT,
  FK_EPI9                          SMALLINT,
  FK_AGENTEPREVIDENCIA             SMALLINT,
  FK_EMPREGADOSATIV                SMALLINT,
  FK_EXPOSICAO                     SMALLINT
);
CREATE TABLE ST_EMPREGADOSHISTORICOATIV 
(
  FK_EMPRESAS                              SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                               SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                               SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                          SMALLINT         DEFAULT 1 NOT NULL,
  PK_FUNCIONARIOSHISTATIVIDADE             SMALLINT,
  FK_CARGOS                                SMALLINT,
  DATAINI                                      DATA ,
  DATAFIM                                      DATA ,
  FK_FAMILIAS                               VARCHAR(     4)  COLLATE ISO8859_1,
  FK_OCUPACAO                               VARCHAR(     2)  COLLATE ISO8859_1,
  FK_FUNCAO                                 VARCHAR(    50)  COLLATE ISO8859_1,
  CNPJ                                      VARCHAR(    20)  COLLATE ISO8859_1,
  FK_GFIP                                  SMALLINT,
  ATIVIDADES                                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FK_FUNCIONARIOSATIV                      SMALLINT,
  ATIVIDADESDETAL                              BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_EMPREGADOSVACINAS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUCNIONARIOS              SMALLINT         DEFAULT 1 NOT NULL,
  PK_FUNCVACINAS               SMALLINT,
  FK_VACINAS                   SMALLINT,
  DOSE                         SMALLINT,
  DTPREVISTA                       DATA ,
  DTREALIZACAO                     DATA ,
  REFORCO                          CHAR(     1)  COLLATE ISO8859_1,
  PROXIMAREFORCO                   CHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE ST_EMPREGADOSVEIA 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUCNIONARIOS              SMALLINT         DEFAULT 1 NOT NULL,
  PK_FUNCVEIA                  SMALLINT,
  DIREITA                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ESQUERDA                         BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_EPI 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  PK_EPI                         SMALLINT         NOT NULL,
  FK_PRODUTOS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PATRIMONIO                  SMALLINT         DEFAULT 1 NOT NULL,
  CODIGO_CA                       VARCHAR(     6)  COLLATE ISO8859_1,
  DESCRICAO                           V50 ,
  FK_MARCAS                      SMALLINT,
  AUDITIVO                   FLAG_SIM_NAO ,
  TIPOAUDITIVO                    VARCHAR(     1)  COLLATE ISO8859_1,
  NRR                            NUMERICO ,
  NRRSF                          NUMERICO ,
  DESCARTAVEL                FLAG_SIM_NAO ,
  VIDAUTIL                       SMALLINT,
  FK_UNIDADEVIDAUTI          FLAG_SIM_NAO ,
  TREINAMENTO                        BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  VALIDADECA                         DATA ,
  CABECALHO                       VARCHAR(  1000)  COLLATE ISO8859_1,
  RODAPE                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO                            VARCHAR(   200)  COLLATE ISO8859_1,
  VALIDADETREIN                  SMALLINT,
  VALIDADETREINUN            FLAG_SIM_NAO ,
  TITULO                          VARCHAR(   200)  COLLATE ISO8859_1,
  SITUACAO                           CHAR(     1)  COLLATE ISO8859_1,
  CABECALHORELATORIO              VARCHAR(   100)  COLLATE ISO8859_1,
  CAMINHOFLASH                    VARCHAR(  1500)  COLLATE ISO8859_1,
  DESCRITIVO                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  IMAGEMEPI                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FK_GRADES                      SMALLINT,
  TIPO_ESTOQUE                       CHAR(     1)  COLLATE ISO8859_1,
  ESTOQUE_INI                    SMALLINT,
  CUSTO_INI                       NUMERIC( 15, 4),
  DTESTOQUE_INI                 TIMESTAMP,
  ESTOQUE_MIN                    SMALLINT,
  ESTOQUE_MAX                    SMALLINT,
  CUSTO                           NUMERIC( 15, 4),
 CONSTRAINT PK_ST_EPI PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_EPI)
);
CREATE TABLE ST_EPIANEXOS 
(
  FK_EMPRESAS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_EPI                  SMALLINT         NOT NULL,
  FK_ANEXOS               SMALLINT
);
CREATE TABLE ST_EPIMOTIVOS 
(
  PK_EPIMOTIVOS             SMALLINT,
  MOTIVO                        V200 
);
CREATE TABLE ST_ERGONOMIA 
(
  PK_ERGONOMIA                      SMALLINT         NOT NULL,
  FK_GRUPOSERGONOMIA                SMALLINT,
  FK_SUBGRUPOSERGONOMIA             SMALLINT,
  DESCRICAO                             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  RECOMENDACOES                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  TITULO                                V100 
);
CREATE TABLE ST_EXAMESPCMSO 
(
  PK_EXAMESPCMSO                  SMALLINT,
  MATERIALBIO                 FLAG_SIM_NAO ,
  ANALISE                          VARCHAR(    70)  COLLATE ISO8859_1,
  PERIODICIDADE                   SMALLINT,
  EXIGENCIA                   FLAG_SIM_NAO ,
  FINALIDADE                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  HOMEM                       FLAG_SIM_NAO ,
  MULHER                      FLAG_SIM_NAO ,
  HMAIORIDADE                     SMALLINT,
  HMENORIDADE                     SMALLINT,
  HMAIORPERIODICIDADE             SMALLINT,
  HMENORPERIODICIDADE             SMALLINT,
  MMAIORIDADE                     SMALLINT,
  MMENORIDADE                     SMALLINT,
  MMAIORPERIODICIDADE             SMALLINT,
  MMENORPERIODICIDADE             SMALLINT,
  SOMENTEHIDADE               FLAG_SIM_NAO ,
  SOMENTEMIDADE                         C1 
);
update rdb$relation_fields set rdb$description = '1 - Exame Clinico
2 - Sangue
3 - Urina
4 - Suor' where rdb$relation_name = 'ST_EXAMESPCMSO' and rdb$field_name = 'MATERIALBIO';
update rdb$relation_fields set rdb$description = '1 - SEMESTRAL
2 - ANUAL
3 - BIANUAL' where rdb$relation_name = 'ST_EXAMESPCMSO' and rdb$field_name = 'PERIODICIDADE';
update rdb$relation_fields set rdb$description = '1 - ObrigatÃ³rio
2 - Eletivo' where rdb$relation_name = 'ST_EXAMESPCMSO' and rdb$field_name = 'EXIGENCIA';
CREATE TABLE ST_EXAMESPCMSOAGENTES 
(
  FK_EXAMESPCMSO                         SMALLINT,
  PK_EXAMESPCMSOAGENTES                  SMALLINT,
  FK_ANEXOS                              SMALLINT,
  FK_AGENTE11                            SMALLINT,
  FK_AGENTE13                            SMALLINT,
  FK_AGENTE14                            SMALLINT,
  EXIGENCIA                          FLAG_SIM_NAO ,
  FK_ANEXO1NR16                          SMALLINT,
  FK_ANEXO2NR16                          SMALLINT,
  FK_NR16ELETRICIDADE                    SMALLINT,
  FK_NR16RADIONIZANTES                   SMALLINT,
  FK_NR16ELETRICIDADETAREFA              SMALLINT,
  FK_NR16RADIONIZANTESTAREFA             SMALLINT,
  FK_DAGENTE12                           SMALLINT,
  FK_ACIDENTES                           SMALLINT,
  FK_ACIDENTESGRUPO                      SMALLINT,
  FK_ACIDENTESSUBGRUPO                   SMALLINT,
  FK_ERGONOMIA                           SMALLINT,
  FK_ERGONOMIAGRUPO                      SMALLINT,
  FK_ERGONOMIASUBGRUPO                   SMALLINT
);
CREATE TABLE ST_EXAMESPCMSOFILIAIS 
(
  FK_EXAMESPCMSO                    SMALLINT,
  FK_EMPRESAS                       SMALLINT,
  FK_FILIAIS                        SMALLINT,
  VIDASEXUAL                    FLAG_SIM_NAO ,
  DTINICIO                              DATA ,
  DTFIM                                 DATA ,
  PK_EXAMESPCMSOFILIAIS             SMALLINT,
  PERIODICIDADE                     SMALLINT,
  EXIGENCIA                     FLAG_SIM_NAO ,
  LINKAR                        FLAG_SIM_NAO ,
  HOMEM                         FLAG_SIM_NAO ,
  MULHER                        FLAG_SIM_NAO ,
  HMAIORIDADE                       SMALLINT,
  HMENORIDADE                       SMALLINT,
  HMAIORPERIODICIDADE               SMALLINT,
  HMENORPERIODICIDADE               SMALLINT,
  MMAIORIDADE                       SMALLINT,
  MMENORIDADE                       SMALLINT,
  MMAIORPERIODICIDADE               SMALLINT,
  MMENORPERIODICIDADE               SMALLINT,
  SOMENTEHIDADE                 FLAG_SIM_NAO ,
  SOMENTEMIDADE                           C1 
);
CREATE TABLE ST_EXAMESPPP 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                 SMALLINT         DEFAULT 1 NOT NULL,
  PK_EXAMESPPP                    SMALLINT,
  FK_EXAMESPCMSO                  SMALLINT         NOT NULL,
  DATA                           TIMESTAMP,
  TIPO                        FLAG_SIM_NAO ,
  REFSEQ                      FLAG_SIM_NAO ,
  RESULTADO                   FLAG_SIM_NAO ,
  JUSTIFICATIVA                      V1000 ,
  INTERPRETACAO                         V3 ,
  FK_CARGOS                       SMALLINT,
  EXIGENCIA                   FLAG_SIM_NAO ,
  SITUACAO                    FLAG_SIM_NAO ,
  FK_ATESTADOS                    SMALLINT,
  DTSOLICITACAO                       DATA ,
  SEQUENCIA                       SMALLINT,
  DTPREVISTA                          DATA ,
  FK_LABORATORIOS                 SMALLINT,
  OUTRO_LABORATORIO                   V200 ,
  PERIODICIDADE_EXAME         FLAG_SIM_NAO ,
  FK_CONSULTAS                    SMALLINT,
  REALIZADO                           CHAR(     1) NOT NULL COLLATE ISO8859_1,
  FK_PROFISSIONAL                  NUMERIC( 10, 0),
  MARCADO                     FLAG_SIM_NAO ,
  INCLUSO                               C1 
);
update rdb$relation_fields set rdb$description = '1 - ObrigatÃ³rio
2 - Recomendado' where rdb$relation_name = 'ST_EXAMESPPP' and rdb$field_name = 'EXIGENCIA';
update rdb$relation_fields set rdb$description = '1 - Ativo
2 - Inativo' where rdb$relation_name = 'ST_EXAMESPPP' and rdb$field_name = 'SITUACAO';
CREATE TABLE ST_EXPOSICAO 
(
  PK_EXPOSICAO             SMALLINT,
  DESCRICAO                    V100 ,
  ORDEM                    SMALLINT
);
CREATE TABLE ST_EXTINTORES_TEMPO 
(
  IDEMPRESA                   SMALLINT         NOT NULL,
  ID                          SMALLINT,
  NUMERO                      NUMERICO ,
  NUMEROCASCO                     V100 ,
  TIPO                        SMALLINT,
  LOCALIZACAO                     V100 ,
  NUMEROINMETRO                   V100 ,
  DTRECARGA                       DATA ,
  PRVRECARGA                      DATA ,
  DTRETESTE                       DATA ,
  PRVRETESTE                      DATA ,
  DTINSPECAO                      DATA ,
  PRVINSPECAO                     DATA ,
  OBS                             BLOB SUB_TYPE 0 SEGMENT SIZE 200,
  DTFABRICACAO                    DATA ,
  FOTOLOCALIZACAO                V1000 ,
  VALIDADE_CASCO                  DATA ,
  STATUS                            C1 
);
CREATE TABLE ST_FICHACLINICAMOTIVOS 
(
  PK_FICHACLINICAMOTIVOS             SMALLINT,
  MOTIVO                                 V200 
);
CREATE TABLE ST_FILIAISASANALISERISCOS 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  PK_ANALISERISCO             SMALLINT         NOT NULL,
  POSTOTRABALHO                VARCHAR(   100)  COLLATE ISO8859_1,
  RISCO                        VARCHAR(   200)  COLLATE ISO8859_1,
  CR                           VARCHAR(    10)  COLLATE ISO8859_1,
  DBA                          NUMERIC( 15, 2),
  LUX                         SMALLINT,
  RECOMENDACOES                VARCHAR(  2000)  COLLATE ISO8859_1,
  DATAINICIAL                TIMESTAMP,
  DATAFINAL                  TIMESTAMP,
 CONSTRAINT PK_ST_FILIAISASANALISERISCO PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_ANALISERISCO)
);
CREATE TABLE ST_FILIAISCRONOGRAMA 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_CRONOGRAMA                    SMALLINT         NOT NULL,
  TITULO                            VARCHAR(   100)  COLLATE ISO8859_1,
  DESCRICAO                         VARCHAR( 20000)  COLLATE ISO8859_1,
  DATACADASTRO                    TIMESTAMP,
  DATAINICIAL                     TIMESTAMP,
  DATAFINAL                       TIMESTAMP,
  DATAREALIZACAOINICIO            TIMESTAMP,
  DATAREALIZACAOFIM               TIMESTAMP,
  FK_CRONOGRAMAS                   SMALLINT,
  FOTOANTES                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTODEPOIS                        VARCHAR(   200)  COLLATE ISO8859_1,
  DESCRICAOANTES                    VARCHAR(  1000)  COLLATE ISO8859_1,
  DESCRICAODEPOIS                   VARCHAR(  1000)  COLLATE ISO8859_1,
  FK_RESPONSAVEL                   SMALLINT,
  OUTRO                             VARCHAR(   200)  COLLATE ISO8859_1,
  MARCADO                      FLAG_SIM_NAO ,
 CONSTRAINT PK_ST_FILIAISCRONOGRAMA PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_CRONOGRAMA)
);
CREATE TABLE ST_FILIAISEPI 
(
  FK_EMPRESAS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                SMALLINT         DEFAULT 1 NOT NULL,
  PK_FILIAISEPI             SMALLINT         NOT NULL,
  DATAINICIAL              TIMESTAMP,
  DATAFINAL                TIMESTAMP,
  TODOS                 FLAG_SIM_NAO ,
 CONSTRAINT PK_ST_FILIAISEPI PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_FILIAISEPI)
);
CREATE TABLE ST_FILIAISINCIDENTES 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  DATAINCIDENTE                   TIMESTAMP         DEFAULT CURRENT_TIMESTAMP NOT NULL,
  FK_TURNOS                        SMALLINT,
  DESCRICAO                           V1000 ,
  CUSTO                            NUMERICO ,
  RECOMENDACOES                       V1000 ,
  FK_RESPONSAVEL                   SMALLINT,
  FOTO                                V1000 ,
  LEGENDA                              V100 ,
  LOCAL                            SMALLINT,
  PK_FILIAISINCIDENTES             SMALLINT         NOT NULL,
 CONSTRAINT PK_ST_FILIAISINCIDENTES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_FILIAISINCIDENTES)
);
CREATE TABLE ST_FILIAISINSPECOES 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                    SMALLINT,
  DATAINSPECAO                  TIMESTAMP,
  DATAPREVISTA                  TIMESTAMP,
  FOTO                               V200 ,
  LEGENDA                            V200 ,
  OBS                               V1000 ,
  PK_FILIAISINSPECAO             SMALLINT         NOT NULL,
 CONSTRAINT PK_ST_FILIAISINSPECOES PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_FILIAISINSPECAO)
);
CREATE TABLE ST_FILIAISMEDICOS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_MEDICOS                    SMALLINT,
  PK_FILIAISMEDICOS             SMALLINT         NOT NULL,
 CONSTRAINT PK_ST_FILIAISMEDICOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_FILIAISMEDICOS)
);
CREATE TABLE ST_FILIAISRESPEPICARGOS 
(
  FK_EMPRESAS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                     SMALLINT,
  FK_FILIAISRESPEPI                   SMALLINT,
  PK_FILIAISRESPEPICARGOS             SMALLINT,
  FK_CARGOS                           SMALLINT         NOT NULL
);
CREATE TABLE ST_FILIAISRESPEPISETORES 
(
  FK_EMPRESAS                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                           SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                           SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                      SMALLINT,
  FK_FILIAISRESPEPI                    SMALLINT,
  PK_FILIAISRESPEPISETORES             SMALLINT
);
CREATE TABLE ST_FILIAISRESPMEDICOS 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROFISSIONAL                   SMALLINT,
  DATAINICIAL                      TIMESTAMP         DEFAULT CURRENT_TIMESTAMP NOT NULL,
  DATAFINAL                        TIMESTAMP,
  MONITORACAO                   FLAG_SIM_NAO ,
  COORDENADORPCMSO                        C1 ,
  PK_FILIAISRESPMEDICOS             SMALLINT         NOT NULL,
 CONSTRAINT PK_ST_FILIAISRESPMEDICOS PRIMARY KEY (FK_FILIAIS, PK_FILIAISRESPMEDICOS)
);
CREATE TABLE ST_FUNCIONARIOS 
(
  FK_EMPRESAS                           SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                            SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                       SMALLINT         DEFAULT 1 NOT NULL,
  MATRICULA                                  V20 ,
  FK_FUNCIONARIOSDOCUMENTOS             SMALLINT,
  SEXO                                      CHAR(     1)  COLLATE ISO8859_1,
  NASCIMENTO                                DATA ,
  OBS                                       BLOB SUB_TYPE 1 SEGMENT SIZE 1,
  VINCULO                           FLAG_SIM_NAO ,
  PERICULOSIDADE                         NUMERIC( 15, 2),
  INSALUBRIDADE                          NUMERIC( 15, 2),
  PERICULOSIDADESOBRE                       CHAR(     1)  COLLATE ISO8859_1,
  INSALUBRIDADESOBRE                        CHAR(     1)  COLLATE ISO8859_1,
  APOSENTADO                        FLAG_SIM_NAO ,
  VIDASEXUAL                        FLAG_SIM_NAO ,
  AREA                              FLAG_SIM_NAO ,
  CEP                                    VARCHAR(    10)  COLLATE ISO8859_1,
  FOTO                                   VARCHAR(   100)  COLLATE ISO8859_1,
  VERIFICADOADM                             CHAR(     1)  COLLATE ISO8859_1,
  VERIFICADODEM                             CHAR(     1)  COLLATE ISO8859_1,
  REQOBSERVACAO                             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  CODIGORFID                                V100 ,
 CONSTRAINT PK_ST_FUNCIONARIOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_FUNCIONARIOS)
);
update rdb$relation_fields set rdb$description = '1- SALÃRIO MÃNIMO NACIONAL
2- SALÃRIO MÃNIMO REGIONAL
3- SALÃRIO MÃNIMO CATEGORIA
4- SALÃRIO NOMINAL
5- SALÃRIO NORMATIVO
6- OUTROS...' where rdb$relation_name = 'ST_FUNCIONARIOS' and rdb$field_name = 'PERICULOSIDADESOBRE';
update rdb$relation_fields set rdb$description = '1- SALÃRIO MÃNIMO NACIONAL
2- SALÃRIO MÃNIMO REGIONAL
3- SALÃRIO MÃNIMO CATEGORIA
4- SALÃRIO NOMINAL
5- SALÃRIO NORMATIVO
6- OUTROS...' where rdb$relation_name = 'ST_FUNCIONARIOS' and rdb$field_name = 'INSALUBRIDADESOBRE';
CREATE TABLE ST_FUNCIONARIOSABSENTEISMO 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                   SMALLINT         DEFAULT 1 NOT NULL,
  AFASTAMENTO                       SMALLINT,
  UNAFASTAMENTO                         CHAR(     1)  COLLATE ISO8859_1,
  OBS                                VARCHAR(  2000)  COLLATE ISO8859_1,
  FK_MOTIVOS                        SMALLINT,
  DATA                             TIMESTAMP,
  DATARETORNO                           DATA ,
  DATAPREVISTARETORNO                   DATA ,
  AFASTAMENTOPREVISTO               SMALLINT,
  UNAFASTAMENTOPREVISTO                   C1 
);
CREATE TABLE ST_FUNCIONARIOSATIV 
(
  FK_EMPRESAS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_CARGOS                           SMALLINT,
  FK_FUNCAO                           SMALLINT,
  PK_FUNCIONARIOATIVIDADE             SMALLINT,
  INICIO                                  DATE,
  FIM                                     DATE,
  VERIFICADO                              CHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE ST_FUNCIONARIOSEPI 
(
  FK_EMPRESAS                           SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                            SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                            SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                       SMALLINT         DEFAULT 1 NOT NULL,
  PK_FUNCIONARIOSEPI                    SMALLINT,
  DATAENTREGA                               DATA NOT NULL,
  FK_EPI                                SMALLINT         NOT NULL,
  DATADEVOLUCAO                             DATA ,
  DATAPREVISTA                              DATA ,
  DATAREVISAO                               DATA ,
  DATASUBSTITUICAO                          DATA ,
  MOTIVO                                     V20 ,
  VISTO                             FLAG_SIM_NAO ,
  QUANTIDADE                            SMALLINT,
  FK_CARGOS                             SMALLINT,
  FK_EPIMOTIVO                          SMALLINT,
  DATACONFIRMACAO                        VARCHAR(   100)  COLLATE ISO8859_1,
  DATACONFIRMACAOSUPERVISOR              VARCHAR(   100)  COLLATE ISO8859_1,
  MARCADO                           FLAG_SIM_NAO ,
  DEVOLVIDO                         FLAG_SIM_NAO ,
  TIPOCONFIRMACAO                   FLAG_SIM_NAO ,
  FK_SUPERVISOR                         SMALLINT,
  TIPOCONFIRMACAOSUP                          C1 
);
CREATE TABLE ST_FUNCIONARIOSHISTORICOAUX 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUCNIONARIOS                 SMALLINT         DEFAULT 1 NOT NULL,
  PK_FUNCHISTAUXILIAR             SMALLINT,
  DATAINI                             DATA ,
  DATAFIM                             DATA ,
  FK_CARGOS                       SMALLINT,
  FK_FUNCIONARIOSATIV             SMALLINT
);
CREATE TABLE ST_FUNCIONARIOSMEDICACAO 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_FICHACLINICA              SMALLINT         NOT NULL,
  FK_MEDICACAO                 SMALLINT         NOT NULL,
  FK_UNIDADES                  SMALLINT,
  QUANTIDADE                   SMALLINT,
  PRESCRICAO                       V200 
);
CREATE TABLE ST_FUNCIONARIOSRESTRICOES 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUCNIONARIOS              SMALLINT         DEFAULT 1 NOT NULL,
  PK_FUNCRESTRICAO             SMALLINT,
  FK_RESTRICAO                 SMALLINT,
  DTINICIO                         DATA ,
  DTFIM                            DATA 
);
CREATE TABLE ST_FUNCIONARIOSTREINAMENTOS 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS                SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUCNIONARIOS                 SMALLINT         DEFAULT 1 NOT NULL,
  PK_FUNCTREINAMENTOS             SMALLINT,
  FK_TREINAMENTOS                 SMALLINT,
  FK_TREINAMENTOEPI               SMALLINT,
  FK_CARGOS                       SMALLINT,
  DATA                                DATA ,
  DATAVENCTO                          DATA ,
  TIPOIMPRESSAO               FLAG_SIM_NAO ,
  DATACONFIRMACAO                  VARCHAR(   100)  COLLATE ISO8859_1,
  MARCADO                     FLAG_SIM_NAO ,
  TIPOCONFIRMACAO                       C1 
);
CREATE TABLE ST_FUNCIONARIOSTURNOS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUCNIONARIOS              SMALLINT         DEFAULT 1 NOT NULL,
  PK_FUNCTURNOS                SMALLINT,
  FK_TURNOS                    SMALLINT,
  DTINICIO                         DATA ,
  DTFIM                            DATA 
);
CREATE TABLE ST_GRADES 
(
  PK_GRADES             SMALLINT,
  NOME                   VARCHAR(   100)  COLLATE ISO8859_1
);
CREATE TABLE ST_GRADESITENS 
(
  PK_GRADES                 SMALLINT,
  PK_GRADESITEM             SMALLINT,
  TAMANHO                    VARCHAR(    10)  COLLATE ISO8859_1,
  ESTINI                    SMALLINT,
  CUSINI                     NUMERIC( 15, 4),
  DTINI                    TIMESTAMP,
  ESTMAX                    SMALLINT,
  ESTMIN                    SMALLINT,
  ORDEM                     SMALLINT
);
CREATE TABLE ST_GRUPOHOMOGENEO 
(
  PK_GRUPOHOMOGENEO                 SMALLINT,
  NOME                               VARCHAR(   200)  COLLATE ISO8859_1,
  NR15ANEXO1                    FLAG_SIM_NAO ,
  NR15ANEXO2                    FLAG_SIM_NAO ,
  NR15ANEXO3                    FLAG_SIM_NAO ,
  NR15ANEXO5                    FLAG_SIM_NAO ,
  NR15ANEXO6                    FLAG_SIM_NAO ,
  NR15ANEXO7                    FLAG_SIM_NAO ,
  NR15ANEXO8                    FLAG_SIM_NAO ,
  NR15ANEXO9                    FLAG_SIM_NAO ,
  NR15ANEXO10                   FLAG_SIM_NAO ,
  NR15ANEXO11                   FLAG_SIM_NAO ,
  NR15ANEXO12                   FLAG_SIM_NAO ,
  NR15ANEXO13                   FLAG_SIM_NAO ,
  NR15ANEXO14                   FLAG_SIM_NAO ,
  NR16ANEXO1                    FLAG_SIM_NAO ,
  NR16ANEXO2                    FLAG_SIM_NAO ,
  NR16ELETRICIDADE              FLAG_SIM_NAO ,
  NR16RADIONIZANTES             FLAG_SIM_NAO ,
  NR17ILUMINAMENTO                   NUMERIC( 10, 0),
  ENQUADRAMENTOSANTIGOS                 CHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE ST_GRUPOHOMOGENEOACIDENTES 
(
  FK_GRUPOHOMOGENEO                        SMALLINT,
  PK_GRUPOHOMOGENEOACIDADENTES             SMALLINT,
  FK_ACIDENTES                             SMALLINT         NOT NULL,
  INICIO                                       DATA ,
  FIM                                          DATA ,
  DESCRICAO                                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  RECOMENDACOES                                BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_GRUPOHOMOGENEOACIDENTESEPI 
(
  FK_GRUPOHOMOGENEO                      SMALLINT,
  FK_GRUPOACIDENTES                      SMALLINT,
  GRUPOHOMOGENEOACIDENTESEPI             SMALLINT,
  FK_EPI                                 SMALLINT         NOT NULL,
  INICIO                                     DATA ,
  FIM                                        DATA 
);
CREATE TABLE ST_GRUPOHOMOGENEOAGENTES 
(
  FK_GRUPOS                              SMALLINT,
  PK_GRUPOHOMOGENEOAGENTES               SMALLINT,
  DATA                                       DATA NOT NULL,
  FK_ANEXOS                              SMALLINT         NOT NULL,
  FK_AGENTE11                            SMALLINT,
  FK_AGENTE12                            SMALLINT,
  FK_AGENTE13                            SMALLINT,
  FK_AGENTE14                            SMALLINT,
  TIPO                               FLAG_SIM_NAO ,
  INTENSIDADE1                            NUMERIC( 15, 2),
  INTENSIDADE2                            NUMERIC( 15, 2),
  INTENSIDADEPPM                          NUMERIC( 15, 3),
  INTENSIDADEMG_M3                        NUMERIC( 15, 3),
  FK_UNIDADES                            SMALLINT,
  FK_TECNICAS                            SMALLINT,
  INSALUBRIDADE                      FLAG_SIM_NAO ,
  NIVELACAO                          FLAG_SIM_NAO ,
  NOCIVO                             FLAG_SIM_NAO ,
  EPI                                FLAG_SIM_NAO ,
  EPIFICHA                           FLAG_SIM_NAO ,
  EPITREINAMENTO                     FLAG_SIM_NAO ,
  EPIUSO                             FLAG_SIM_NAO ,
  EPCEFICAZ                          FLAG_SIM_NAO ,
  GFIP                               FLAG_SIM_NAO ,
  MEDICAO_EM                         FLAG_SIM_NAO ,
  CONSTAR_EM                         FLAG_SIM_NAO ,
  FIM                                        DATA ,
  LEITURARUIDOIMPACTO                FLAG_SIM_NAO ,
  IBUTG                                   NUMERIC( 15, 2),
  TIPOATIVIDADE                      FLAG_SIM_NAO ,
  REGIMETRABALHO                     FLAG_SIM_NAO ,
  CONCLLTCAT                                 BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  CONCLPPRA                                  BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  FK_AGENTEPREVIDENCIA                   SMALLINT,
  DESCRAGPREVIDENCIA                        V1000 ,
  FK_ANEXO1NR16                          SMALLINT,
  FK_ANEXO2NR16                          SMALLINT,
  NIVELACAOPCMSO                     FLAG_SIM_NAO ,
  RECOMENDACOES                              BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  FK_NR16ELETRICIDADE                    SMALLINT,
  FK_NR16ELETRICIDADETAREFA              SMALLINT,
  FK_NR16RADIONIZANTES                   SMALLINT,
  FK_NR16RADIONIZANTESTAREFA             SMALLINT,
  INTENSIDADE12                           NUMERIC( 15, 2),
  LIMITE12                                NUMERIC( 15, 2),
  DATAEPI                                    DATA ,
  NAOIMPEXAMES                       FLAG_SIM_NAO ,
  OBS                                        BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  INTENSIDADE9                            NUMERIC( 15, 2),
  LIMITE9                                 NUMERIC( 15, 2),
  INTENSIDADE5                            NUMERIC( 15, 2),
  FK_ANEXO2NR16AREARISCO                 SMALLINT,
  EPIEFICAZ                                  CHAR(     1)  COLLATE ISO8859_1,
  FONTEGERADORA                              BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  MEIOPROPAGACAO                             BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  COMPROMETIMENTOSAUDE                       BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  DANOSSAUDE                                 BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  MEDIDASCONTROLE                            BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  FOTO                                    VARCHAR(   200)  COLLATE ISO8859_1,
  FK_LOCALTRABALHO                        NUMERIC( 10, 0),
  FK_POSTOTRABALHO                        NUMERIC( 10, 0),
  FK_NR17ILUMINAMENTO                     NUMERIC( 10, 0),
  INTENSIDADELUX                          NUMERIC( 10, 0),
  NIVELRECLUX                             NUMERIC( 10, 0),
  CONSIDERARNIVELACAOPCMSO           FLAG_SIM_NAO ,
  LEGENDA                                   V1000 ,
  LOCALDESCANSO                      FLAG_SIM_NAO ,
  METABOLISMOTRABALHO                    NUMERICO ,
  METABOLISMODESCANSO                    NUMERICO ,
  TEMPOTRABALHO                          NUMERICO ,
  TEMPODESCANSO                          NUMERICO ,
  LIMITEIBUTG                            NUMERICO ,
  FK_EXPOSICAO                           SMALLINT,
  INTENSIDADE8                           NUMERICO ,
  TIPOVIBRACAO                               CHAR(     1)  COLLATE ISO8859_1,
  POSICAO                                    CHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE ST_GRUPOHOMOGENEOAGENTESEPI 
(
  FK_GRUPOS                               SMALLINT,
  FK_AGENTES                              SMALLINT,
  PK_GRUPOHOMOGENEOAGENTESEPI             SMALLINT,
  FK_EPI                                  SMALLINT         NOT NULL,
  DATA                                        DATA NOT NULL,
  FK_ANEXOS                               SMALLINT,
  FK_AGENTE11                             SMALLINT,
  FK_AGENTE13                             SMALLINT,
  FK_AGENTE14                             SMALLINT,
  NPSC1                                   NUMERICO ,
  NPSC2                                   NUMERICO ,
  FIM                                         DATA ,
  FK_ANEXO1NR16                           SMALLINT,
  FK_ANEXO2NR16                           SMALLINT,
  FK_AGENTE12                             SMALLINT,
  FK_NR16RADIONIZANTES                    SMALLINT,
  FK_NR16RADIONIZANTESTAREFA              SMALLINT,
  FK_NR16ELETRICIDADE                     SMALLINT,
  FK_NR16ELETRICIDADETAREFA               SMALLINT
);
CREATE TABLE ST_GRUPOHOMOGENEOAPOSENT 
(
  FK_GRUPOS                               SMALLINT,
  GRUPOHOMOGENEOAPOSENT                   SMALLINT,
  DATA                                        DATE,
  FK_APOSENTADORIA_RISCO                  SMALLINT,
  FK_APOSENTADORIA_RISCO_ATIV             SMALLINT,
  FK_APOSENTADORIA_RISCO_DESC             SMALLINT,
  FIM                                         DATA ,
  CONCLUSAO                                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  INTENSIDADE                             NUMERICO ,
  FK_UNIDADES                             SMALLINT,
  PERIODO                                     CHAR(     1)  COLLATE ISO8859_1,
  FK_EXPOSICAO                            SMALLINT
);
CREATE TABLE ST_GRUPOHOMOGENEOAVALIADOS 
(
  FK_GRUPOS                           SMALLINT,
  GRUPOHOMOGENEOAVALIADOS             SMALLINT,
  DATAINI                                 DATA ,
  FK_EMPRESAS                         SMALLINT,
  FK_FILIAIS                          SMALLINT,
  FK_FUNCIONARIOS                     SMALLINT,
  DESCRICAO                            VARCHAR(  2000)  COLLATE ISO8859_1,
  DATAFIM                                 DATA 
);
CREATE TABLE ST_GRUPOHOMOGENEOERGONOMIA 
(
  PK_GRUPOHOMOGENEOERGONOMIA             SMALLINT,
  FK_ERGONOMIA                           SMALLINT         NOT NULL,
  INICIO                                     DATA ,
  FIM                                        DATA ,
  IDGRUPO                                SMALLINT         NOT NULL,
  DESCRICAO                                  BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  RECOMENDACOES                              BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_GRUPOHOMOGENEOFILIAIS 
(
  FK_GRUPOHOMOGENEO             SMALLINT,
  FK_EMPRESAS                   SMALLINT,
  FK_FILIAIS                    SMALLINT
);
CREATE TABLE ST_GRUPOSEPI 
(
  PK_GRUPOSEPI             SMALLINT,
  DESCRICAO                    V100 
);
update rdb$relation_fields set rdb$description = 'Define o grupo de um epi' where rdb$relation_name = 'ST_GRUPOSEPI' and rdb$field_name = 'PK_GRUPOSEPI';
CREATE TABLE ST_GRUPOSERGONOMIA 
(
  PK_GRUPOSERGONOMIA             SMALLINT,
  DESCRICAO                       VARCHAR(   200)  COLLATE ISO8859_1
);
CREATE TABLE ST_INCIDENTESLOCALIZACAO 
(
  PK_INCIDENTESLOCALIZACAO             SMALLINT         NOT NULL,
  DESCRICAO                                V100 
);
CREATE TABLE ST_INTERVALOCID 
(
  PK_INTERVALOCID             SMALLINT,
  NOME                         VARCHAR(   100)  COLLATE ISO8859_1,
  DTINICIO                        DATA ,
  DTFIM                           DATA 
);
CREATE TABLE ST_INTERVALOCIDITENS 
(
  FK_INTERVALOCID                  SMALLINT,
  PK_INTERVALOCIDITENS             SMALLINT,
  FK_CID10_2                        VARCHAR(     5)  COLLATE ISO8859_1,
  FK_CID10_3                        VARCHAR(    10)  COLLATE ISO8859_1
);
CREATE TABLE ST_LABORATORIOS 
(
  PK_LABORATORIOS             SMALLINT,
  NOME                             V50 ,
  ENDERECO                         V50 ,
  IDCIDADE                    SMALLINT,
  BAIRRO                      SMALLINT,
  UF                              CHAR(     2)  COLLATE ISO8859_1,
  FONE                         VARCHAR(    15)  COLLATE ISO8859_1,
  EMAIL                        VARCHAR(    40)  COLLATE ISO8859_1,
  VALORVIAAERIA                  FLOAT,
  VALORVIAOSSEA                  FLOAT,
  ESPECIALIDADE                VARCHAR(    50)  COLLATE ISO8859_1,
  STATUS                            C1 
);
CREATE TABLE ST_LABORATORIOSPROFISSIONAIS 
(
  FK_PROFISSIONAL             SMALLINT,
  FK_LABORATORIOS             SMALLINT
);
CREATE TABLE ST_LAUDOAPOSENTADORIA 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                   SMALLINT         DEFAULT 1 NOT NULL,
  PK_LAUDOAPOSENTADORIA             SMALLINT,
  ATIVIDADE                     FLAG_SIM_NAO ,
  SITUACAO                      FLAG_SIM_NAO ,
  DATA                                  DATE,
  COMENTARIOS                           BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  QBPGEMPRESA                   FLAG_SIM_NAO ,
  QBPGDESCRICAOSETORES          FLAG_SIM_NAO ,
  QBPGSETORES                   FLAG_SIM_NAO ,
  QBPGCARGOS                    FLAG_SIM_NAO ,
  CONCLUSAOPERITO                       BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  QBPGCONCLUSAOPERITO           FLAG_SIM_NAO ,
  QBPGAPARELHAGEM               FLAG_SIM_NAO ,
  UTILIZARASSINATURA                    CHAR(     1)  COLLATE ISO8859_1,
  FK_CABECALHO                      SMALLINT,
  FK_CIDADES                        SMALLINT,
  EPI                                   CHAR(     1)  COLLATE ISO8859_1,
  ESTADO                                CHAR(     2)  COLLATE ISO8859_1,
  INICIO                                DATA ,
  FIM                                   DATA 
);
CREATE TABLE ST_LAUDOAPOSENTADORIA_APARE 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_APARELHO                       SMALLINT,
  FK_LAUDOAPOSENTADORIA             SMALLINT
);
CREATE TABLE ST_LAUDOAPOSENTADORIA_PROF 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_LAUDOAPOSENTADORIA             SMALLINT,
  FK_PROFISSIONAL                   SMALLINT
);
CREATE TABLE ST_LAUDOAPOS_CONSGERAIS 
(
  FK_EMPRESAS                         SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                          SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_LAUDOAPOSENTADORIA               SMALLINT,
  PK_LAUDOAPOS_CONSGERAIS             SMALLINT,
  TITULO                                  V200 ,
  TEXTO                                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ORDEM                               SMALLINT,
  PGNOVA                                    C1 
);
CREATE TABLE ST_LOCALTRABALHO 
(
  PK_LOCALTRABALHO             SMALLINT         NOT NULL,
  NOME                          VARCHAR(   200) NOT NULL COLLATE ISO8859_1
);
CREATE TABLE ST_LOGINTEGRACAO 
(
  FK_EMPRESAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FUNCIONARIOS                SMALLINT         DEFAULT 1 NOT NULL,
  PK_LOGININTEGRACAO             SMALLINT,
  TIPO                               CHAR(     1)  COLLATE ISO8859_1,
  DATA                               DATA ,
  HISTORICO                       VARCHAR(   200)  COLLATE ISO8859_1,
  FK_SETORES                     SMALLINT,
  FK_CARGOS                      SMALLINT
);
CREATE TABLE ST_LTCAT 
(
  FK_EMPRESAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                       SMALLINT         DEFAULT 1 NOT NULL,
  VINCULO                      FLAG_SIM_NAO ,
  PRELIMINARES                         BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  COMENTARIOS                          BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  FK_CIDADES                       SMALLINT,
  ESTADO                               CHAR(     2)  COLLATE ISO8859_1,
  EMISSAO                              DATA ,
  RECOMENDACOES                        BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  VALIDADE                              V10 ,
  UTILIZARASSINATURA           FLAG_SIM_NAO ,
  FOTOSSETORES                 FLAG_SIM_NAO ,
  FOTOSCARGOS                  FLAG_SIM_NAO ,
  PK_LTCAT                         SMALLINT,
  OBJETIVOLTCAT                        BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  SITUACAO                             CHAR(     1)  COLLATE ISO8859_1,
  FK_CABECALHO                     SMALLINT,
  FOTOEMPRESA                          CHAR(     1)  COLLATE ISO8859_1,
  SUMARIO                      FLAG_SIM_NAO ,
  PGNOVASETOR                  FLAG_SIM_NAO ,
  PGNOVACARGO                  FLAG_SIM_NAO ,
  QBPG2                        FLAG_SIM_NAO ,
  QBPG3                        FLAG_SIM_NAO ,
  QBPG4                        FLAG_SIM_NAO ,
  QBPG8                        FLAG_SIM_NAO ,
  QBPG6                        FLAG_SIM_NAO ,
  QBPG7                        FLAG_SIM_NAO ,
  QBPG5                        FLAG_SIM_NAO ,
  MENSAGEMCARGO                FLAG_SIM_NAO ,
  GLOSSARIO                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ATIVIDADE                    FLAG_SIM_NAO ,
  PGNOVABIBLIOGRAFIA                   CHAR(     1)  COLLATE ISO8859_1,
  PGANEXOS                             CHAR(     1)  COLLATE ISO8859_1,
  TABELARISCOS                         CHAR(     1)  COLLATE ISO8859_1,
  EPI                          FLAG_SIM_NAO ,
  CARGOSCOMEMPREGADO           FLAG_SIM_NAO ,
  FROBSERVACOES                FLAG_SIM_NAO ,
  CONCLUSAOLTCAT               FLAG_SIM_NAO ,
  FONTEGERADORA                FLAG_SIM_NAO ,
  AGENTEFOTO                   FLAG_SIM_NAO ,
  MEDIDASCONTROLE              FLAG_SIM_NAO ,
  MEIOPROPAGACAO               FLAG_SIM_NAO ,
  COMPROMETIMENTOSAUDE         FLAG_SIM_NAO ,
  POSSIVEISDANOSSAUDE          FLAG_SIM_NAO ,
  RECOMENDACOESAGENTE          FLAG_SIM_NAO ,
  SETORESSEMCARGO                        C1 
);
CREATE TABLE ST_LTCATAPARELHAGEM 
(
  FK_EMPRESAS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS               SMALLINT         DEFAULT 1 NOT NULL,
  FK_APARELHOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_LTCAT                 SMALLINT
);
CREATE TABLE ST_LTCATBIBLIOGRAFIA 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_LTCAT                    SMALLINT,
  FK_BIBLIOGRAFIA             SMALLINT
);
CREATE TABLE ST_LTCATCONSIDERACOES 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_LTCAT                          SMALLINT,
  FK_CONSIDERACOES                  SMALLINT,
  PK_LTCATCONSIDERACOES             SMALLINT
);
CREATE TABLE ST_LTCATEMPRESAS 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_LTCAT                    SMALLINT,
  FK_EMPRESALTCAT             SMALLINT
);
CREATE TABLE ST_LTCATPROFISSIONAIS 
(
  FK_EMPRESAS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_LTCAT                    SMALLINT,
  FK_PROFISSIONAL             SMALLINT
);
CREATE TABLE ST_LTCATSETORCARGO 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_LTCAT                     SMALLINT,
  FK_DEPARTAMENTOS             SMALLINT,
  FK_SETORES                   SMALLINT,
  FK_CARGOS                    SMALLINT
);
CREATE TABLE ST_MATERIALBIOLOGICO 
(
  PK_MATERIALBIOLOGICO             SMALLINT,
  DESCRICAO                         VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE ST_MEDICACAO 
(
  PK_MEDICACAO             SMALLINT,
  NOME                         V200 
);
CREATE TABLE ST_MODANAMNESE 
(
  PK_MODANAMNESE             SMALLINT,
  DESCRICAO                   VARCHAR(   100)  COLLATE ISO8859_1
);
CREATE TABLE ST_MODANAMNESEGRUPO 
(
  FK_MODANAMNESE                  SMALLINT,
  PK_MODANAMNESEGRUPO             SMALLINT,
  NOME                             VARCHAR(   100)  COLLATE ISO8859_1,
  POSICAO                         SMALLINT
);
CREATE TABLE ST_MODANAMNESEITEM 
(
  FK_MODANAMNESE              SMALLINT         NOT NULL,
  MODANAMNESEITEM             SMALLINT         NOT NULL,
  PERGUNTA                     VARCHAR(   200)  COLLATE ISO8859_1,
  TIPORESPOSTA                SMALLINT,
  FK_GRUPOS                   SMALLINT,
  POSICAO                     SMALLINT
);
CREATE TABLE ST_MODELO_OS 
(
  PK_MODELO_OS             SMALLINT         NOT NULL,
  NOME                          V50 ,
  TEXTO                        BLOB SUB_TYPE 0 SEGMENT SIZE 80
);
CREATE TABLE ST_MOVESTOQUEEPIGRADE 
(
  FK_MOVESTOQUE_EPI              SMALLINT,
  FK_EPI                         SMALLINT,
  MOVESTOQUEEPIGRADE             SMALLINT,
  FK_FUNCIONARIOS                SMALLINT,
  DTMOVGRADE                    TIMESTAMP,
  TAMANHO                         VARCHAR(    10)  COLLATE ISO8859_1,
  QTDE                           SMALLINT,
  UNITARIO                        NUMERIC( 15, 2),
  TIPOMOV                            CHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE ST_MOVESTOQUE_EPI 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  FK_FUNCIONARIOS             SMALLINT,
  MOVESTOQUE_EPI              SMALLINT,
  FK_LOCALESTOQUE             SMALLINT,
  DATAMOVIMENTO              TIMESTAMP,
  TIPO                            CHAR(     1)  COLLATE ISO8859_1,
  FK_EPI                      SMALLINT,
  QUANIDADE                   SMALLINT,
  UNITARIO                     NUMERIC( 15, 2),
  HISTORICO                    VARCHAR(   200)  COLLATE ISO8859_1
);
CREATE TABLE ST_NR16ANEXO1 
(
  PK_NR16ANEXO1             SMALLINT,
  DESCRICAO                    V1000 ,
  CONCLPPRA                    V1000 
);
CREATE TABLE ST_NR16ANEXO1COMPRSAUDE 
(
  FK_NR16ANEXO1                    SMALLINT,
  NR16ANEXO1COMPRSAUDE             SMALLINT,
  DESCRICAO                            BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO1DANOSSAUDE 
(
  FK_NR16ANEXO1                    SMALLINT,
  NR16ANEXO1DANOSSAUDE             SMALLINT,
  DESCRICAO                            BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO1FONTEGERADORA 
(
  FK_NR16ANEXO1                       SMALLINT,
  NR16ANEXO1FONTEGERADORA             SMALLINT,
  DESCRICAO                               BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO1MEDIDASCONTROLE 
(
  FK_NR16ANEXO1                         SMALLINT,
  NR16ANEXO1MEDIDASCONTROLE             SMALLINT,
  DESCRICAO                                 BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO1MEIOPROPAGACAO 
(
  FK_NR16ANEXO1                        SMALLINT,
  NR16ANEXO1MEIOPROPAGACAO             SMALLINT,
  DESCRICAO                                BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO1REC 
(
  FK_NR16ANEXO1             SMALLINT,
  NR16ANEXO1REC             SMALLINT,
  DESCRICAO                     BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO2 
(
  PK_NR16ANEXO2             SMALLINT,
  DESCRICAO                    V1000 ,
  CONCLPPRA                    V1000 
);
CREATE TABLE ST_NR16ANEXO2AREARISCO 
(
  NR16ANEXO2AREARISCO             SMALLINT,
  ATIVIDADE                          V1000 ,
  AREARISCO                          V1000 
);
CREATE TABLE ST_NR16ANEXO2COMPRSAUDE 
(
  IDNR16ANEXO2                     SMALLINT,
  NR16ANEXO2COMPRSAUDE             SMALLINT,
  DESCRICAO                            BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO2DANOSSAUDE 
(
  FK_NR16ANEXO2                       SMALLINT,
  PK_NR16ANEXO2DANOSSAUDE             SMALLINT,
  DESCRICAO                               BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO2FONTEGERADORA 
(
  FK_NR16ANEXO2                          SMALLINT,
  PK_NR16ANEXO2FONTEGERADORA             SMALLINT,
  DESCRICAO                                  BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO2MEDIDASCONTROLE 
(
  FK_NR16ANEXO2                            SMALLINT,
  PK_NR16ANEXO2MEDIDASCONTROLE             SMALLINT,
  DESCRICAO                                    BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO2MEIOPROPAGACAO 
(
  FK_NR16ANEXO2                           SMALLINT,
  PK_NR16ANEXO2MEIOPROPAGACAO             SMALLINT,
  DESCRICAO                                   BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ANEXO2REC 
(
  FK_NR16ANEXO2                SMALLINT,
  PK_NR16ANEXO2REC             SMALLINT,
  DESCRICAO                        BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ELETRICFONTEGERADORA 
(
  FK_NR16ELETRICIDADE                     SMALLINT,
  PK_NR16ELETRICFONTEGERADORA             SMALLINT,
  DESCRICAO                                   BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ELETRICIDADE 
(
  PK_NR16ELETRICIDADE             SMALLINT,
  ATIVIDADE                        VARCHAR(  5000)  COLLATE ISO8859_1,
  AREADERISCO                      VARCHAR(  5000)  COLLATE ISO8859_1,
  CONCLPPRA                        VARCHAR(  1000)  COLLATE ISO8859_1
);
CREATE TABLE ST_NR16ELETRICIDADECOMPRSAUDE 
(
  FK_NR16ELETRICIDADE                       SMALLINT,
  PK_NR16ELETRICIDADECOMPRSAUDE             SMALLINT,
  DESCRICAO                                     BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ELETRICIDADEDANOSSAUDE 
(
  FK_NR16ELETRICIDADE                    SMALLINT,
  NR16ELETRICIDADEDANOSSAUDE             SMALLINT,
  DESCRICAO                                  BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ELETRICIDADEREC 
(
  FK_NR16ELETRICIDADE                SMALLINT,
  PK_NR16ELETRICIDADEREC             SMALLINT,
  DESCRICAO                              BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ELETRICIDADETAREFA 
(
  FK_NR16ELETRICIDADE                SMALLINT,
  NR16ELETRICIDADETAREFA             SMALLINT,
  TAREFA                              VARCHAR(  5000)  COLLATE ISO8859_1
);
CREATE TABLE ST_NR16ELETRICMEDIDACONT 
(
  FK_NR16ELETRICIDADE                  SMALLINT,
  PK_NR16ELETRICMEDIDACONT             SMALLINT,
  DESCRICAO                                BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ELETRICMEDIDACONTROLE 
(
  FK_NR16ELETRICIDADE                      SMALLINT,
  PK_NR16ELETRICMEDIDACONTROLE             SMALLINT,
  DESCRICAO                                    BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16ELETRICMEIOPROPAGACAO 
(
  FK_NR16ELETRICIDADE                      SMALLINT,
  PK_NR16ELETRICMEIOPROPAGACAO             SMALLINT,
  DESCRICAO                                    BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16RADFONTEGERADORA 
(
  FK_NR16RAD                            SMALLINT,
  PK_NR16RADFONTEGERADORAID             SMALLINT,
  DESCRICAO                                 BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16RADIONIZANTES 
(
  PK_NR16RADIONIZANTES             SMALLINT,
  ATIVIDADE                         VARCHAR(  5000)  COLLATE ISO8859_1,
  AREADERISCO                       VARCHAR(  5000)  COLLATE ISO8859_1,
  CONCLPPRA                           V1000 
);
CREATE TABLE ST_NR16RADIONIZANTESCOMPRSAUDE 
(
  FK_NR16RADIONIZANTES                       SMALLINT,
  PK_NR16RADIONIZANTESCOMPRSAUDE             SMALLINT,
  DESCRICAO                                      BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16RADIONIZANTESDANOSSAUDE 
(
  FK_NR16RADIONIZANTES                       SMALLINT,
  PK_NR16RADIONIZANTESDANOSSAUDE             SMALLINT,
  DESCRICAO                                      BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16RADMEDCONTROLE 
(
  FK_NR16RAD                        SMALLINT,
  PK_NR16RADMEDCONTROLE             SMALLINT,
  DESCRICAO                             BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16RADMEIOPROPAG 
(
  FK_NR16RAD                       SMALLINT,
  PK_NR16RADMEIOPROPAG             SMALLINT,
  DESCRICAO                            BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16RADREC 
(
  FK_NR16RAD                SMALLINT,
  PK_NR16RADREC             SMALLINT,
  DESCRICAO                     BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_NR16RADTAREFA 
(
  FK_NR16RADIONIZANTE             SMALLINT,
  PK_NR16RADTAREFA                SMALLINT,
  TAREFA                           VARCHAR(  5000)  COLLATE ISO8859_1,
  AREADERISCO                      VARCHAR(  5000)  COLLATE ISO8859_1
);
CREATE TABLE ST_NR5QUADROI 
(
  PK_NR5QUADRO              VARCHAR(     5) NOT NULL COLLATE ISO8859_1,
  E0A19                    SMALLINT,
  S0A19                    SMALLINT,
  E20A29                   SMALLINT,
  S20A29                   SMALLINT,
  E30A50                   SMALLINT,
  S30A50                   SMALLINT,
  E51A80                   SMALLINT,
  S51A80                   SMALLINT,
  E81A100                  SMALLINT,
  S81A100                  SMALLINT,
  E101A120                 SMALLINT,
  S101A120                 SMALLINT,
  E121A140                 SMALLINT,
  S121A140                 SMALLINT,
  E141A300                 SMALLINT,
  S141A300                 SMALLINT,
  E301A500                 SMALLINT,
  S301A500                 SMALLINT,
  E501A1000                SMALLINT,
  S501A1000                SMALLINT,
  E1001A2500               SMALLINT,
  S1001A2500               SMALLINT,
  E2501A5000               SMALLINT,
  S2501A5000               SMALLINT,
  E5001A10000              SMALLINT,
  S5001A10000              SMALLINT,
  EACIMA10000              SMALLINT,
  SACIMA10000              SMALLINT
);
CREATE TABLE ST_NR5QUADROII 
(
  FK_NR5QUADROIIGRUPO              VARCHAR(     5) NOT NULL COLLATE ISO8859_1,
  FK_CNAECLASSE                    VARCHAR(     8) NOT NULL COLLATE ISO8859_1
);
CREATE TABLE ST_NR5QUADROIIGRUPO 
(
  PK_NR5QUADROIIGRUPO              VARCHAR(     5) NOT NULL COLLATE ISO8859_1,
  ATIVIDADE                            V50 
);
CREATE TABLE ST_NRS 
(
  PK_NRS                 SMALLINT         NOT NULL,
  NORMAS                      V10 ,
  TITULO                     V200  COLLATE PT_PT,
  LINK                       V200  COLLATE PT_PT,
  TEXTO                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  DATAINICIO            TIMESTAMP,
  DATAFINAL             TIMESTAMP,
 CONSTRAINT PK_ST_NRS PRIMARY KEY (PK_NRS)
);
CREATE TABLE ST_PCMAT 
(
  FK_EMPRESAS                          SMALLINT,
  FK_FILIAIS                           SMALLINT,
  PK_PCMAT                             SMALLINT,
  DATA                                     DATA ,
  CONDPRELIMINARES                         BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  FK_RESPONSAVEL                       SMALLINT,
  COMENTARIOS                              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  UTILIZARASSINATURA                       CHAR(     1)  COLLATE ISO8859_1,
  NROPAGINAS                           SMALLINT,
  SEM_NRS                          FLAG_SIM_NAO ,
  VALIDADE                                  V10 ,
  CIPA                             FLAG_SIM_NAO ,
  CALCULAEMPREGADOS                        CHAR(     1)  COLLATE ISO8859_1,
  TIPOIMPRESSAOTREINAMENTO         FLAG_SIM_NAO ,
  OBS                                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  TITULOOBS                             VARCHAR(    50)  COLLATE ISO8859_1,
  EMPREGADOSCARGO                          CHAR(     1)  COLLATE ISO8859_1,
  SITUACAO                                 CHAR(     1)  COLLATE ISO8859_1,
  FK_CABECALHO                         SMALLINT,
  FOTOEMPRESA                              CHAR(     1)  COLLATE ISO8859_1,
  OBJETIVO                                 BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  TIPO                             FLAG_SIM_NAO ,
  IDOBRA                               SMALLINT,
  FK_SETOROBRA                         SMALLINT,
  SUMARIO                          FLAG_SIM_NAO ,
  PGNOVAFASE                       FLAG_SIM_NAO ,
  FOTOFASE                         FLAG_SIM_NAO ,
  FOTOAREAS                        FLAG_SIM_NAO ,
  PGNOVACARGO                      FLAG_SIM_NAO ,
  PGNOVASETOR                      FLAG_SIM_NAO ,
  ANEXO                                    CHAR(     1)  COLLATE ISO8859_1,
  IDCIDADE                             SMALLINT,
  ESTADO                                   CHAR(     2)  COLLATE ISO8859_1,
  IMPRIMICARGOS                            CHAR(     1)  COLLATE ISO8859_1,
  NIVELACAO                        FLAG_SIM_NAO ,
  GLOSSARIO                                BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  NOMEEMPREGADOSOBRA               FLAG_SIM_NAO ,
  ATIVIDADE                        FLAG_SIM_NAO ,
  PGNOVABIBLIOGRAFIA                       CHAR(     1)  COLLATE ISO8859_1,
  EPI                              FLAG_SIM_NAO ,
  CARGOSCOMEMPREGADO               FLAG_SIM_NAO ,
  QPAPARELHAGEM                    FLAG_SIM_NAO ,
  QPAVALIADOR                      FLAG_SIM_NAO ,
  QPBIBLIOGRAFIA                             C1 
);
CREATE TABLE ST_PCMATAPARELHAGEM 
(
  FK_EMPRESAS             SMALLINT,
  FK_FILIAIS              SMALLINT,
  FK_PCMAT                SMALLINT,
  FK_APARELHO             SMALLINT
);
CREATE TABLE ST_PCMATBIBLIOGRAFIA 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  FK_PCMAT                    SMALLINT,
  FK_BIBLIOGRAFIA             SMALLINT
);
CREATE TABLE ST_PCMATCONSIDERACOES 
(
  FK_EMPRESAS                  SMALLINT,
  FK_FILIAIS                   SMALLINT,
  FK_PCMAT                     SMALLINT,
  FK_CONSIDERACOES             SMALLINT
);
CREATE TABLE ST_PCMATCRONOGRAMA 
(
  FK_EMPRESAS                SMALLINT,
  FK_FILIAIS                 SMALLINT,
  FK_PCMAT                   SMALLINT         NOT NULL,
  FK_CRONOGRAMA              SMALLINT,
  DESCRICAO                      BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  DATAPREVISTA                   DATA ,
  DATAREALIZACAO                 DATA ,
  IDEMPREGADO                SMALLINT,
  JANEIRO                        CHAR(     1)  COLLATE ISO8859_1,
  FEVEREIRO                      CHAR(     1)  COLLATE ISO8859_1,
  MARCO                          CHAR(     1)  COLLATE ISO8859_1,
  ABRIL                          CHAR(     1)  COLLATE ISO8859_1,
  MAIO                           CHAR(     1)  COLLATE ISO8859_1,
  JUNHO                          CHAR(     1)  COLLATE ISO8859_1,
  JULHO                          CHAR(     1)  COLLATE ISO8859_1,
  AGOSTO                         CHAR(     1)  COLLATE ISO8859_1,
  SETEMBRO                       CHAR(     1)  COLLATE ISO8859_1,
  OUTUBRO                        CHAR(     1)  COLLATE ISO8859_1,
  NOVEMBRO                       CHAR(     1)  COLLATE ISO8859_1,
  DEZEMBRO                       CHAR(     1)  COLLATE ISO8859_1,
  OUTRO                       VARCHAR(   200)  COLLATE ISO8859_1
);
CREATE TABLE ST_PCMATPROFISSIONAIS 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  FK_PCMAT                    SMALLINT,
  FK_PROFISSIONAL             SMALLINT
);
CREATE TABLE ST_PCMATSETORCARGO 
(
  FK_EMPRESAS             SMALLINT,
  FK_FILIAIS              SMALLINT,
  FK_PCMAT                SMALLINT,
  FK_SETORES              SMALLINT,
  FK_CARGOS               SMALLINT
);
CREATE TABLE ST_PCMATTREINAMENTOS 
(
  FK_EMPRESAS                      SMALLINT,
  FK_FILIAIS                       SMALLINT,
  FK_PCMAT                         SMALLINT,
  PK_PCMATTREINAMENTOS             SMALLINT,
  FK_TREINAMENTO                   SMALLINT,
  FK_TREINAMENTOEPI                SMALLINT
);
CREATE TABLE ST_PCMSO 
(
  FK_EMPRESAS                          SMALLINT,
  FK_FILIAIS                           SMALLINT,
  PCMSO                                SMALLINT,
  EMISSAO                                  DATA ,
  VALIDADE                                  V10 ,
  FK_CIDADES                           SMALLINT,
  ESTADO                                   CHAR(     2)  COLLATE ISO8859_1,
  FK_TURNOS                            SMALLINT,
  COLOCARASSINATURA                FLAG_SIM_NAO ,
  MAPADERISCO                      FLAG_SIM_NAO ,
  PRODUCAO                         FLAG_SIM_NAO ,
  SESMT                            FLAG_SIM_NAO ,
  NRO_TECNICOS                         SMALLINT,
  NRO_ENGENHEIROS                      SMALLINT,
  NRO_AUXILIARESENFERMAGEM             SMALLINT,
  NRO_ENFERMEIROS                      SMALLINT,
  NRO_MEDICOS                          SMALLINT,
  CALCULAREMPREGADOS                       CHAR(     1)  COLLATE ISO8859_1,
  COLOCARRELATORIOANUAL            FLAG_SIM_NAO ,
  NROPAGINAS                           SMALLINT,
  SITUACAO                                 CHAR(     1)  COLLATE ISO8859_1,
  FK_CABECALHO                         SMALLINT,
  FOTOEMPRESA                              CHAR(     1)  COLLATE ISO8859_1,
  IDRELATORIOANUAL                     SMALLINT,
  SUMARIO                          FLAG_SIM_NAO ,
  PGNOVASETOR                      FLAG_SIM_NAO ,
  PGNOVACARGO                      FLAG_SIM_NAO ,
  LISTAEMPREGADOSCARGO             FLAG_SIM_NAO ,
  ANEXO                            FLAG_SIM_NAO ,
  QBPG5                            FLAG_SIM_NAO ,
  QBPG11                           FLAG_SIM_NAO ,
  QBPG12                           FLAG_SIM_NAO ,
  AUTORIZACAO                      FLAG_SIM_NAO ,
  EMPREGADOSCARGO                  FLAG_SIM_NAO ,
  NIVELACAO                        FLAG_SIM_NAO ,
  COMENTARIOS                              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  QUANTIFICARAGENTES               FLAG_SIM_NAO ,
  GLOSSARIO                                BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  DIFERENCIAREMPREGADOS            FLAG_SIM_NAO ,
  ATIVIDADE                        FLAG_SIM_NAO ,
  PGNOVABIBLIOGRAFIA                       CHAR(     1)  COLLATE ISO8859_1,
  CARGOSCOMEMPREGADO               FLAG_SIM_NAO ,
  FROBSERVACOES                    FLAG_SIM_NAO ,
  FONTEGERADORA                    FLAG_SIM_NAO ,
  AGENTEFOTO                       FLAG_SIM_NAO ,
  MEDIDASCONTROLE                  FLAG_SIM_NAO ,
  MEIOPROPAGACAO                   FLAG_SIM_NAO ,
  COMPROMETIMENTOSAUDE             FLAG_SIM_NAO ,
  POSSIVEISDANOSSAUDE              FLAG_SIM_NAO ,
  RECOMENDACOES                    FLAG_SIM_NAO ,
  SETORESSEMCARGO                  FLAG_SIM_NAO ,
  GRAFICOANUALSETORES              FLAG_SIM_NAO ,
  GRAFICOANUALEXAMES                         C1 
);
update rdb$relation_fields set rdb$description = '1 - Ãšnico
2 - 2 turnos
3 - 3 turnos' where rdb$relation_name = 'ST_PCMSO' and rdb$field_name = 'FK_TURNOS';
update rdb$relation_fields set rdb$description = '1 - ProduÃ§Ã£o normal
2 - Alta produÃ§Ã£o
3 - Baixa produÃ§Ã£o
4 - ProduÃ§Ã£o sazonal' where rdb$relation_name = 'ST_PCMSO' and rdb$field_name = 'PRODUCAO';
CREATE TABLE ST_PCMSOBIBLIOGRAFIA 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  FK_PCMSO                    SMALLINT,
  FK_BIBLIOGRAFIA             SMALLINT
);
CREATE TABLE ST_PCMSOCONSIDERACOES 
(
  FK_EMPRESAS                       SMALLINT,
  FK_FILIAIS                        SMALLINT,
  FK_PCMSO                          SMALLINT,
  FK_CONSIDERACOES                  SMALLINT,
  PK_PCMSOCONSIDERACOES             SMALLINT
);
CREATE TABLE ST_PCMSOCRONOGRAMA 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  FK_PCMSO                    SMALLINT         NOT NULL,
  FK_CRONOGRAMAS              SMALLINT,
  DESCRICAO                       BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  DATAPREVISTA                    DATA ,
  DATAREALIZACAO                  DATA ,
  FK_FUNCIONARIOS             SMALLINT,
  JANEIRO                         CHAR(     1)  COLLATE ISO8859_1,
  FEVEREIRO                       CHAR(     1)  COLLATE ISO8859_1,
  MARCO                           CHAR(     1)  COLLATE ISO8859_1,
  ABRIL                           CHAR(     1)  COLLATE ISO8859_1,
  MAIO                            CHAR(     1)  COLLATE ISO8859_1,
  JUNHO                           CHAR(     1)  COLLATE ISO8859_1,
  JULHO                           CHAR(     1)  COLLATE ISO8859_1,
  AGOSTO                          CHAR(     1)  COLLATE ISO8859_1,
  SETEMBRO                        CHAR(     1)  COLLATE ISO8859_1,
  OUTUBRO                         CHAR(     1)  COLLATE ISO8859_1,
  NOVEMBRO                        CHAR(     1)  COLLATE ISO8859_1,
  DEZEMBRO                        CHAR(     1)  COLLATE ISO8859_1,
  OUTRO                        VARCHAR(   200)  COLLATE ISO8859_1
);
CREATE TABLE ST_PCMSOPROFISSIONAIS 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  FK_PCMSO                    SMALLINT,
  FK_PROFISSIONAL             SMALLINT
);
CREATE TABLE ST_PCMSOSETORCARGO 
(
  FK_EMPRESAS             SMALLINT,
  FK_FILIAIS              SMALLINT,
  FK_PCMSO                SMALLINT,
  FK_SETORES              SMALLINT,
  FK_CARGOS               SMALLINT
);
CREATE TABLE ST_PERIODICIDADES 
(
  PERIODICIDADES             SMALLINT         NOT NULL,
  NOME                           V100 ,
  ADMISSAO               FLAG_SIM_NAO ,
  "6MES"                 FLAG_SIM_NAO ,
  "12MES"                FLAG_SIM_NAO ,
  DEMISSAO               FLAG_SIM_NAO ,
  PERIODICIDADE              SMALLINT,
  ASO                              C1 
);
CREATE TABLE ST_POSTOTRABALHO 
(
  FK_LOCAL                   NUMERIC( 10, 0) NOT NULL,
  POSTOTRABALHO              NUMERIC( 10, 0) NOT NULL,
  NOME                       VARCHAR(   200) NOT NULL COLLATE ISO8859_1,
  NIVEL1                     NUMERIC( 10, 0),
  NIVEL2                     NUMERIC( 10, 0),
  NIVEL3                     NUMERIC( 10, 0)
);
CREATE TABLE ST_PPP 
(
  FK_EMPRESAS                      SMALLINT,
  FK_FILIAIS                       SMALLINT,
  FK_FUNCIONARIOS                  SMALLINT,
  PK_PPP                           SMALLINT,
  FK_USUARIOS                      SMALLINT,
  DATA                                 DATA ,
  OBS                                  BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  DIVULGAEXAMES                        CHAR(     1)  COLLATE PT_PT,
  RECIBO                       FLAG_SIM_NAO ,
  DATAINICIO                   FLAG_SIM_NAO ,
  NIVELACAO                    FLAG_SIM_NAO ,
  DATAHISTORICO                        DATA ,
  REPRESENTANTELEGAL                VARCHAR(    10)  COLLATE ISO8859_1,
  DATAINICIOPPP                        DATA ,
  MENSAGEMEXPOSICAO                    CHAR(     1)  COLLATE ISO8859_1,
  DIRBEN                               CHAR(     1)  COLLATE ISO8859_1,
  EPC                                  CHAR(     1)  COLLATE ISO8859_1,
  USOEPI                               CHAR(     1)  COLLATE ISO8859_1,
  VALIDADECA                           CHAR(     1)  COLLATE ISO8859_1,
  TROCAEPI                             CHAR(     1)  COLLATE ISO8859_1,
  HIGIENIZACAOEPI                      CHAR(     1)  COLLATE ISO8859_1,
  HISTORICOMONITORACAO                 CHAR(     1)  COLLATE ISO8859_1,
  ATIVIDADE                    FLAG_SIM_NAO ,
  DIRBENNITRESPONSAVEL                   C1 
);
update rdb$relation_fields set rdb$description = '1 - Toda a atividade do empregado 2 - A partir de 01/01/2004 3 - A partir da medicao do agente' where rdb$relation_name = 'ST_PPP' and rdb$field_name = 'DATAINICIO';
CREATE TABLE ST_PPPMANUAL 
(
  PK_PPPMANUAL                SMALLINT,
  CNPJEMPRESA                  VARCHAR(    20)  COLLATE ISO8859_1,
  NOMEEMPRESA                  VARCHAR(   100)  COLLATE ISO8859_1,
  CNAEEMPRESA                  VARCHAR(    10)  COLLATE ISO8859_1,
  EMPREGADO                    VARCHAR(    70)  COLLATE ISO8859_1,
  BRPDH                        VARCHAR(    10)  COLLATE ISO8859_1,
  CTPS                         VARCHAR(    30)  COLLATE ISO8859_1,
  ADMISSAO                     VARCHAR(    10)  COLLATE ISO8859_1,
  REGREVEZ                     VARCHAR(    20)  COLLATE ISO8859_1,
  DATA                         VARCHAR(    10)  COLLATE ISO8859_1,
  NITRESPEMPRESA               VARCHAR(    20)  COLLATE ISO8859_1,
  NOMERESPEMPRESA              VARCHAR(    70)  COLLATE ISO8859_1,
  OBS                          VARCHAR(  2000)  COLLATE ISO8859_1,
  EXAMESMEDICOS                VARCHAR(   200)  COLLATE ISO8859_1,
  SEXO                            CHAR(     1)  COLLATE ISO8859_1,
  NASCIMENTO                   VARCHAR(    10)  COLLATE ISO8859_1,
  ENDERECOEMPRESA              VARCHAR(   100)  COLLATE ISO8859_1,
  ASSINATURA                   VARCHAR(    70)  COLLATE ISO8859_1,
  PISPASEP                     VARCHAR(    20)  COLLATE ISO8859_1,
  EPC                             CHAR(     1)  COLLATE ISO8859_1,
  USOEPI                          CHAR(     1)  COLLATE ISO8859_1,
  VALIDADECA                      CHAR(     1)  COLLATE ISO8859_1,
  TROCAEPI                        CHAR(     1)  COLLATE ISO8859_1,
  HIGIENIZACAOEPI                 CHAR(     1)  COLLATE ISO8859_1
);
CREATE TABLE ST_PPPMANUALATIV 
(
  FK_PPPMANUAL                  SMALLINT,
  PK_PPPMANUALATIVD             SMALLINT,
  PERIODO                        VARCHAR(    30)  COLLATE ISO8859_1,
  CNPJ                           VARCHAR(    20)  COLLATE ISO8859_1,
  SETOR                          VARCHAR(   100)  COLLATE ISO8859_1,
  CARGO                          VARCHAR(   100)  COLLATE ISO8859_1,
  FUNCAO                         VARCHAR(    30)  COLLATE ISO8859_1,
  CBO                            VARCHAR(    10)  COLLATE ISO8859_1,
  GFIP                           VARCHAR(     5)  COLLATE ISO8859_1
);
CREATE TABLE ST_PPPMANUALCAT 
(
  FK_PPPMANUAL                SMALLINT,
  PK_PPPMANUALCAT             SMALLINT,
  DTREGISTRO                   VARCHAR(    10)  COLLATE ISO8859_1,
  NROCAT                       VARCHAR(    10)  COLLATE ISO8859_1
);
CREATE TABLE ST_PPPMANUALEXAMES 
(
  FK_PPPMANUAL                   SMALLINT,
  PK_PPPMANUALEXAMES             SMALLINT,
  DATA                            VARCHAR(    10)  COLLATE ISO8859_1,
  TIPO                            VARCHAR(    30)  COLLATE ISO8859_1,
  NATUREZA                        VARCHAR(    30)  COLLATE ISO8859_1,
  EXAME                           VARCHAR(    30)  COLLATE ISO8859_1,
  RESULTADO                       VARCHAR(    30)  COLLATE ISO8859_1
);
CREATE TABLE ST_PPPMANUALFR 
(
  FK_PPPMANUAL               SMALLINT,
  PK_PPPMANUALFR             SMALLINT,
  PERIODO                     VARCHAR(    30)  COLLATE ISO8859_1,
  TIPO                           CHAR(     1)  COLLATE ISO8859_1,
  FATORRISCO                  VARCHAR(   100)  COLLATE ISO8859_1,
  INTENSCONS                  VARCHAR(    30)  COLLATE ISO8859_1,
  TECNICA                     VARCHAR(    30)  COLLATE ISO8859_1,
  EPC                            CHAR(     1)  COLLATE ISO8859_1,
  EPI                            CHAR(     1)  COLLATE ISO8859_1,
  CA                          VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE ST_PPPMANUALMONBIOLOGICA 
(
  FK_PPPMANUAL                         SMALLINT,
  PK_PPPMANUALMONBIOLOGICA             SMALLINT,
  PERIODO                               VARCHAR(    30)  COLLATE ISO8859_1,
  NIT                                   VARCHAR(    30)  COLLATE ISO8859_1,
  REGCONSELHO                           VARCHAR(    30)  COLLATE ISO8859_1,
  PROFISSIONAL                          VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE ST_PPPMANUALPROF 
(
  FK_PPPMANUAL                 SMALLINT,
  PK_PPPMANUALPROF             SMALLINT,
  PERIODO                       VARCHAR(    30)  COLLATE ISO8859_1,
  ATIVIDADE                     VARCHAR(  5000)  COLLATE ISO8859_1
);
CREATE TABLE ST_PPPMANUALREGAMBIENTAIS 
(
  FK_PPPMANUAL                          SMALLINT,
  PK_PPPMANUALREGAMBIENTAIS             SMALLINT,
  PERIODO                                VARCHAR(    30)  COLLATE ISO8859_1,
  NIT                                    VARCHAR(    30)  COLLATE ISO8859_1,
  REGCONSELHO                            VARCHAR(    30)  COLLATE ISO8859_1,
  PROFISSIONAL                           VARCHAR(    70)  COLLATE ISO8859_1
);
CREATE TABLE ST_PPRA 
(
  FK_EMPRESAS                          SMALLINT,
  FK_FILIAIS                           SMALLINT,
  DATA                                TIMESTAMP,
  CONDPRELIMINARES                         BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  COMENTARIOS                              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  UTILIZARASSINATURA                         C1 ,
  NROPAGINAS                           SMALLINT,
  FOTOSSETORES                     FLAG_SIM_NAO ,
  FOTOSCARGOS                      FLAG_SIM_NAO ,
  SEM_NRS                          FLAG_SIM_NAO ,
  VALIDADE                                  V10 ,
  TIPO                             FLAG_SIM_NAO ,
  OBJETIVO1                             VARCHAR( 20000)  COLLATE ISO8859_1,
  OBJETIVO2                             VARCHAR( 20000)  COLLATE ISO8859_1,
  OBJETIVO3                             VARCHAR( 20000)  COLLATE ISO8859_1,
  CALCULAEMPREGADOS                        CHAR(     1)  COLLATE ISO8859_1,
  TIPOIMPRESSAOTREINAMENTO         FLAG_SIM_NAO ,
  OBS                                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  TITULOOBS                             VARCHAR(    50)  COLLATE ISO8859_1,
  ID                                   SMALLINT,
  EMPREGADOSCARGO                          CHAR(     1)  COLLATE ISO8859_1,
  SITUACAO                                 CHAR(     1)  COLLATE ISO8859_1,
  FK_CABECALHO                         SMALLINT,
  FOTOEMPRESA                              CHAR(     1)  COLLATE ISO8859_1,
  PGNOVASETOR                              CHAR(     1)  COLLATE ISO8859_1,
  PGNOVACARGO                              CHAR(     1)  COLLATE ISO8859_1,
  SUMARIO                                  CHAR(     1)  COLLATE ISO8859_1,
  LISTAEMPREGADOSCARGO             FLAG_SIM_NAO ,
  ANEXO                            FLAG_SIM_NAO ,
  FK_CIDADES                           SMALLINT,
  ESTADO                                   CHAR(     2)  COLLATE ISO8859_1,
  QBPG3                            FLAG_SIM_NAO ,
  QBPG4                            FLAG_SIM_NAO ,
  QBPG5                            FLAG_SIM_NAO ,
  QBPG6                            FLAG_SIM_NAO ,
  QBPG7                            FLAG_SIM_NAO ,
  QBPG8                            FLAG_SIM_NAO ,
  QBPG9                            FLAG_SIM_NAO ,
  QBPG10                           FLAG_SIM_NAO ,
  QBPG11                           FLAG_SIM_NAO ,
  ANALISERISCOPOSTO                        CHAR(     1)  COLLATE ISO8859_1,
  NIVELACAO                                CHAR(     1)  COLLATE ISO8859_1,
  MENSAGEMCARGO                            CHAR(     1)  COLLATE ISO8859_1,
  CIPA                                     BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  RISCOS                                   CHAR(     1)  COLLATE ISO8859_1,
  ERGONOMIA                                CHAR(     1)  COLLATE ISO8859_1,
  CONCLUSAOPPRA                    FLAG_SIM_NAO ,
  FONTEGERADORA                    FLAG_SIM_NAO ,
  MEIOPROPAGACAO                   FLAG_SIM_NAO ,
  POSSIVEISDANOSSAUDE              FLAG_SIM_NAO ,
  MEDIDASCONTROLE                  FLAG_SIM_NAO ,
  RECOMENDACOES                    FLAG_SIM_NAO ,
  FROBSERVACOES                    FLAG_SIM_NAO ,
  AGENTEFOTO                       FLAG_SIM_NAO ,
  APRESENTACAOFR                   FLAG_SIM_NAO ,
  COMPROMETIMENTOSAUDE             FLAG_SIM_NAO ,
  GLOSSARIO                                BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ATIVIDADE                        FLAG_SIM_NAO ,
  PGNOVABIBLIOGRAFIA                       CHAR(     1)  COLLATE ISO8859_1,
  TABELARISCOS                             CHAR(     1)  COLLATE ISO8859_1,
  TABELARISCOSACIDENTE                     CHAR(     1)  COLLATE ISO8859_1,
  TABELARISCOSERGONOMIA                    CHAR(     1)  COLLATE ISO8859_1,
  EPI                              FLAG_SIM_NAO ,
  CARGOSCOMEMPREGADO               FLAG_SIM_NAO ,
  DETALHESEPIAGENTE                FLAG_SIM_NAO ,
  SETORESSEMCARGO                            C1 
);
CREATE TABLE ST_PPRAANALISEGLCRONOGRAMANO 
(
  FK_EMPRESAS                      SMALLINT,
  FK_FILIAIS                       SMALLINT,
  FK_CRONOGRAMA                    SMALLINT,
  DESCRICAO                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FK_PPRAANALISEGLOBAL             SMALLINT         NOT NULL,
  DATAPREVISTA                         DATA ,
  DATAREALIZACAO                       DATA ,
  IDEMPREGADO                      SMALLINT,
  JANEIRO                              CHAR(     1)  COLLATE ISO8859_1,
  FEVEREIRO                            CHAR(     1)  COLLATE ISO8859_1,
  MARCO                                CHAR(     1)  COLLATE ISO8859_1,
  ABRIL                                CHAR(     1)  COLLATE ISO8859_1,
  MAIO                                 CHAR(     1)  COLLATE ISO8859_1,
  JUNHO                                CHAR(     1)  COLLATE ISO8859_1,
  JULHO                                CHAR(     1)  COLLATE ISO8859_1,
  AGOSTO                               CHAR(     1)  COLLATE ISO8859_1,
  SETEMBRO                             CHAR(     1)  COLLATE ISO8859_1,
  OUTUBRO                              CHAR(     1)  COLLATE ISO8859_1,
  NOVEMBRO                             CHAR(     1)  COLLATE ISO8859_1,
  DEZEMBRO                             CHAR(     1)  COLLATE ISO8859_1,
  OUTRO                             VARCHAR(   200)  COLLATE ISO8859_1,
  TEXTO                                BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_PPRAANALISEGLOBAL 
(
  FK_EMPRESAS                      SMALLINT,
  FK_FILIAIS                       SMALLINT,
  IDEMPRESA                        SMALLINT,
  PK_PPRAANALISEGLOBAL             SMALLINT,
  DATA                                 DATA ,
  COMENTARIOS                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  UTILIZARASSINATURA           FLAG_SIM_NAO ,
  VALIDADE                              V10 ,
  SITUACAO                             CHAR(     1)  COLLATE ISO8859_1,
  FK_CABECALHO                     SMALLINT,
  FK_CIDADE                        SMALLINT,
  ESTADO                               CHAR(     2)  COLLATE ISO8859_1,
  TITULOANTES                       VARCHAR(    50)  COLLATE ISO8859_1,
  TEXTOANTES                           BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  TITULODEPOIS                      VARCHAR(    50)  COLLATE ISO8859_1,
  TEXTODEPOIS                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  TEXTOCAPA                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  DATAANTERIOR                         DATA ,
  TEXTOCRONOGRAMA                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  TEXTOCRONOGRAMANOVO                  BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  TIPO                         FLAG_SIM_NAO ,
  CALCULAEMPREGADOS            FLAG_SIM_NAO ,
  QPGAVALIADOR                 FLAG_SIM_NAO ,
  QPGCRONOGRAMA                FLAG_SIM_NAO ,
  QPGCRONOGRAMANOVO            FLAG_SIM_NAO ,
  QPGRESPEMPRESA               FLAG_SIM_NAO ,
  QPGTEXTOANTES                FLAG_SIM_NAO ,
  QPGTEXTODEPOIS                         C1 
);
CREATE TABLE ST_PPRAANALISEGLOBALCRONOGRAMA 
(
  FK_EMPRESAS                      SMALLINT,
  FK_FILIAIS                       SMALLINT,
  FK_CRONOGRAMA                    SMALLINT,
  DESCRICAO                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FK_PPRAANALISEGLOBAL             SMALLINT         NOT NULL,
  DATAPREVISTA                         DATA ,
  DATAREALIZACAO                       DATA ,
  FK_FUNCIONARIOS                  SMALLINT,
  JANEIRO                              CHAR(     1)  COLLATE ISO8859_1,
  FEVEREIRO                            CHAR(     1)  COLLATE ISO8859_1,
  MARCO                                CHAR(     1)  COLLATE ISO8859_1,
  ABRIL                                CHAR(     1)  COLLATE ISO8859_1,
  MAIO                                 CHAR(     1)  COLLATE ISO8859_1,
  JUNHO                                CHAR(     1)  COLLATE ISO8859_1,
  JULHO                                CHAR(     1)  COLLATE ISO8859_1,
  AGOSTO                               CHAR(     1)  COLLATE ISO8859_1,
  SETEMBRO                             CHAR(     1)  COLLATE ISO8859_1,
  OUTUBRO                              CHAR(     1)  COLLATE ISO8859_1,
  NOVEMBRO                             CHAR(     1)  COLLATE ISO8859_1,
  DEZEMBRO                             CHAR(     1)  COLLATE ISO8859_1,
  OUTRO                             VARCHAR(   200)  COLLATE ISO8859_1,
  TEXTO                                BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_PPRAANALISEGLOBALRESP 
(
  FK_EMPRESAS                          SMALLINT,
  FK_FILIAIS                           SMALLINT,
  FK_PPRAANALISEGLOBAL                 SMALLINT,
  PK_PPRAANALISEGLOBALRESP             SMALLINT,
  FK_FUNCIONARIOS                      SMALLINT,
  OUTRO                                    V200 
);
CREATE TABLE ST_PPRAANGLOBALPROF 
(
  FK_EMPRESAS                      SMALLINT,
  FK_FILIAIS                       SMALLINT,
  FK_PPRAANALISEGLOBAL             SMALLINT,
  FK_PROFISSIONAL                  SMALLINT
);
CREATE TABLE ST_PPRAANGLOBCRON 
(
  FK_EMPRESAS                      SMALLINT,
  FK_FILIAIS                       SMALLINT,
  FK_CRONOGRAMA                    SMALLINT,
  DESCRICAO                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FK_PPRAANALISEGLOBAL             SMALLINT         NOT NULL,
  DATAPREVISTA                         DATA ,
  DATAREALIZACAO                       DATA ,
  IDEMPREGADO                      SMALLINT,
  JANEIRO                              CHAR(     1)  COLLATE ISO8859_1,
  FEVEREIRO                            CHAR(     1)  COLLATE ISO8859_1,
  MARCO                                CHAR(     1)  COLLATE ISO8859_1,
  ABRIL                                CHAR(     1)  COLLATE ISO8859_1,
  MAIO                                 CHAR(     1)  COLLATE ISO8859_1,
  JUNHO                                CHAR(     1)  COLLATE ISO8859_1,
  JULHO                                CHAR(     1)  COLLATE ISO8859_1,
  AGOSTO                               CHAR(     1)  COLLATE ISO8859_1,
  SETEMBRO                             CHAR(     1)  COLLATE ISO8859_1,
  OUTUBRO                              CHAR(     1)  COLLATE ISO8859_1,
  NOVEMBRO                             CHAR(     1)  COLLATE ISO8859_1,
  DEZEMBRO                             CHAR(     1)  COLLATE ISO8859_1,
  OUTRO                             VARCHAR(   200)  COLLATE ISO8859_1,
  TEXTO                                BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
CREATE TABLE ST_PPRAAPARELHAGEM 
(
  FK_EMPRESAS             SMALLINT,
  FK_FILIAIS              SMALLINT,
  FK_APARELHO             SMALLINT,
  FK_PPRA                 SMALLINT
);
CREATE TABLE ST_PPRABIBLIOGRAFIA 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  FK_BIBLIOGRAFIA             SMALLINT,
  FK_PPRA                     SMALLINT
);
CREATE TABLE ST_PPRACONSIDERACOES 
(
  FK_EMPRESAS                      SMALLINT,
  FK_FILIAIS                       SMALLINT,
  FK_PPRA                          SMALLINT,
  FK_CONSIDERACOES                 SMALLINT,
  PK_PPRACONSIDERACOES             SMALLINT
);
CREATE TABLE ST_PPRACRONOGRAMA 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  FK_CRONOGRAMA               SMALLINT,
  DESCRICAO                       BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  FK_PPRA                     SMALLINT         NOT NULL,
  DATAPREVISTA                    DATA ,
  DATAREALIZACAO                  DATA ,
  FK_FUNCIONARIOS             SMALLINT,
  JANEIRO                         CHAR(     1)  COLLATE ISO8859_1,
  FEVEREIRO                       CHAR(     1)  COLLATE ISO8859_1,
  MARCO                           CHAR(     1)  COLLATE ISO8859_1,
  ABRIL                           CHAR(     1)  COLLATE ISO8859_1,
  MAIO                            CHAR(     1)  COLLATE ISO8859_1,
  JUNHO                           CHAR(     1)  COLLATE ISO8859_1,
  JULHO                           CHAR(     1)  COLLATE ISO8859_1,
  AGOSTO                          CHAR(     1)  COLLATE ISO8859_1,
  SETEMBRO                        CHAR(     1)  COLLATE ISO8859_1,
  OUTUBRO                         CHAR(     1)  COLLATE ISO8859_1,
  NOVEMBRO                        CHAR(     1)  COLLATE ISO8859_1,
  DEZEMBRO                        CHAR(     1)  COLLATE ISO8859_1,
  OUTRO                        VARCHAR(   200)  COLLATE ISO8859_1
);
CREATE TABLE ST_PPRAPROFISSIONAIS 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  FK_PPRA                     SMALLINT,
  FK_PROFISSIONAL             SMALLINT
);
CREATE TABLE ST_PPRASETORCARGO 
(
  FK_EMPRESAS             SMALLINT,
  FK_FILIAIS              SMALLINT,
  FK_PPRA                 SMALLINT,
  FK_SETORES              SMALLINT,
  FK_CARGOS               SMALLINT
);
CREATE TABLE ST_PPRATREINAMENTOS 
(
  FK_EMPRESAS                     SMALLINT,
  FK_FILIAIS                      SMALLINT,
  PK_PPRATREINAMENTOS             SMALLINT,
  FK_TREINAMENTO                  SMALLINT,
  FK_TREINAMENTOEPI               SMALLINT,
  FK_PPRA                         SMALLINT
);
CREATE TABLE ST_PROCEDIMENTOS1 
(
  PK_PROCEDIMENTOS1             SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(  2000)  COLLATE ISO8859_1,
  ORDEM                         SMALLINT,
  TIPO                              CHAR(     1)  COLLATE ISO8859_1,
  OBJETIVO                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
 CONSTRAINT PK_ST_PROCEDIMENTOS1 PRIMARY KEY (PK_PROCEDIMENTOS1)
);
CREATE TABLE ST_PROCEDIMENTOS2 
(
  FK_PROCEDIMENTO1              SMALLINT         NOT NULL,
  PK_PROCEDIMENTOS2             SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(  2000)  COLLATE ISO8859_1,
  ORDEM                         SMALLINT,
  OBJETIVO                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
 CONSTRAINT PK_ST_PROCEDIMENTOS2 PRIMARY KEY (FK_PROCEDIMENTO1, PK_PROCEDIMENTOS2)
);
CREATE TABLE ST_PROCEDIMENTOS3 
(
  FK_PROCEDIMENTO1              SMALLINT         NOT NULL,
  FK_PROCEDIMENTOS2             SMALLINT         NOT NULL,
  PK_PROCEDIMENTOS3             SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(  2000)  COLLATE ISO8859_1,
  ORDEM                         SMALLINT,
  OBJETIVO                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
 CONSTRAINT PK_ST_PROCEDIMENTOS3 PRIMARY KEY (FK_PROCEDIMENTO1, FK_PROCEDIMENTOS2, PK_PROCEDIMENTOS3)
);
CREATE TABLE ST_PROCEDIMENTOS4 
(
  FK_PROCEDIMENTO1              SMALLINT         NOT NULL,
  FK_PROCEDIMENTOS2             SMALLINT         NOT NULL,
  FK_PROCEDIMENTOS3             SMALLINT         NOT NULL,
  PK_PROCEDIMENTOS4             SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(  2000)  COLLATE ISO8859_1,
  ORDEM                         SMALLINT,
  OBJETIVO                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
 CONSTRAINT PK_ST_PROCEDIMENTOS4 PRIMARY KEY (FK_PROCEDIMENTO1, FK_PROCEDIMENTOS2, FK_PROCEDIMENTOS3, PK_PROCEDIMENTOS4)
);
CREATE TABLE ST_PROCEDIMENTOS5 
(
  FK_PROCEDIMENTO1              SMALLINT         NOT NULL,
  FK_PROCEDIMENTOS2             SMALLINT         NOT NULL,
  FK_PROCEDIMENTOS3             SMALLINT         NOT NULL,
  FK_PROCEDIMENTOS4             SMALLINT         NOT NULL,
  PK_PROCEDIMENTOS5             SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(  2000)  COLLATE ISO8859_1,
  ORDEM                         SMALLINT,
  OBJETIVO                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
 CONSTRAINT PK_ST_PROCEDIMENTOS5 PRIMARY KEY (FK_PROCEDIMENTO1, FK_PROCEDIMENTOS2, FK_PROCEDIMENTOS3, FK_PROCEDIMENTOS4, PK_PROCEDIMENTOS5)
);
CREATE TABLE ST_PROFISSIONAIS 
(
  PK_PROFISSIONAIS              SMALLINT,
  NOME                               V50 ,
  TITULO                         VARCHAR(    70)  COLLATE ISO8859_1,
  NCONSELHO                      VARCHAR(    15)  COLLATE ISO8859_1,
  DTALT                             DATA ,
  CONSELHO                          CHAR(     1)  COLLATE ISO8859_1,
  ENDERECO                           V50 ,
  FONE                           VARCHAR(    15)  COLLATE ISO8859_1,
  DDD1                                V3 ,
  DDD2                                V3 ,
  FONE2                          VARCHAR(    15)  COLLATE ISO8859_1,
  DDD3                                V3 ,
  FONE3                          VARCHAR(    15)  COLLATE ISO8859_1,
  EMAIL                          VARCHAR(    40)  COLLATE ISO8859_1,
  CURRICULO                         BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  UFCONSELHO                        CHAR(     2)  COLLATE ISO8859_1,
  FK_CIDADE                     SMALLINT,
  NIT                            VARCHAR(    15)  COLLATE ISO8859_1,
  BAIRRO                        SMALLINT,
  UF                                CHAR(     2)  COLLATE ISO8859_1,
  BANCO                         SMALLINT,
  BANCOAGENCIA                   VARCHAR(    15)  COLLATE ISO8859_1,
  BANCOCID                      SMALLINT,
  BANCOCONTA                     VARCHAR(    15)  COLLATE ISO8859_1,
  ASSINATURA                        BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  SEGME                             TIME,
  SEGMS                             TIME,
  SEGTE                             TIME,
  SEGTS                             TIME,
  TERME                             TIME,
  TERMS                             TIME,
  TERTE                             TIME,
  TERTS                             TIME,
  QUAME                             TIME,
  QUAMS                             TIME,
  QUATE                             TIME,
  QUATS                             TIME,
  QUIME                             TIME,
  QUIMS                             TIME,
  QUITE                             TIME,
  QUITS                             TIME,
  SEXME                             TIME,
  SEXMS                             TIME,
  SEXTE                             TIME,
  SEXTS                             TIME,
  OBS                               BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  SITUACAO                  FLAG_SIM_NAO ,
  CPF                            VARCHAR(    15)  COLLATE ISO8859_1,
  SSMT                               V10 ,
  SEGNE                             TIME,
  SEGNS                             TIME,
  TERNE                             TIME,
  TERNS                             TIME,
  QUANE                             TIME,
  QUANS                             TIME,
  QUINE                             TIME,
  QUINS                             TIME,
  SEXNE                             TIME,
  SEXNS                             TIME,
  SABME                             TIME,
  SABMS                             TIME,
  SABTE                             TIME,
  SABTS                             TIME,
  SABNE                             TIME,
  SABNS                             TIME,
  DOMME                             TIME,
  DOMMS                             TIME,
  DOMTE                             TIME,
  DOMTS                             TIME,
  DOMNE                             TIME,
  DOMNS                             TIME,
  BANCO1ID                      SMALLINT,
  CEP                               CHAR(    10)  COLLATE ISO8859_1,
  D1                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  D2                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  D3                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  D4                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  D5                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  E1                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  E2                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  E3                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  E4                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  E5                                BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  SENHACONFIRMACAO                   V50 ,
  CODIGOCARTAO                      V100 ,
  CODIGORFID                        V100 ,
  INTERVALOSTIMERIO                   V3 ,
  IDCONSELHO                    SMALLINT
);
update rdb$relation_fields set rdb$description = '1 = CREA
2 = CRM
3 = CRMFGa
4 = CRC
5 = MTE' where rdb$relation_name = 'ST_PROFISSIONAIS' and rdb$field_name = 'CONSELHO';
update rdb$relation_fields set rdb$description = '0 - Inativo
1 - Ativo' where rdb$relation_name = 'ST_PROFISSIONAIS' and rdb$field_name = 'SITUACAO';
CREATE TABLE ST_PROFISSIONAISVALORASO 
(
  FK_PROFISSIONAL                      SMALLINT,
  PK_PROFISSIONAISVALORASO             SMALLINT,
  DATAINI                                  DATA ,
  VALOR                                 NUMERIC( 15, 2),
  DATAFIM                                  DATA 
);
CREATE TABLE ST_QUADROIII 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  PK_QUADROIII                SMALLINT,
  DATA                            DATA ,
  ANO                         SMALLINT,
  FK_PROFISSIONAL             SMALLINT,
  DIASUTEIS                   SMALLINT
);
CREATE TABLE ST_QUADROIIIESTATISTICAS 
(
  FK_EMPRESAS                          SMALLINT,
  FK_FILIAIS                           SMALLINT,
  FK_SETORES                           SMALLINT,
  FK_QUADROIII                         SMALLINT,
  PK_QUADROIIIESTATISTICAS             SMALLINT,
  NABSOLUTO                            SMALLINT,
  NABSOLUTOMENOR                       SMALLINT,
  NABSOLUTOMAIOR                       SMALLINT,
  NABSOLUTOSEMAFASTAMENTO              SMALLINT,
  INDICEEMPREGADOS                      NUMERIC( 10, 3),
  TAXAFREQUENCIA                        NUMERIC( 10, 3),
  OBITOS                               SMALLINT,
  INDICEGRAVIDADE                       NUMERIC( 10, 3),
  MEDIAEMPREGADOS                       NUMERIC( 10, 3),
  DHPERDIDOS                            NUMERIC( 10, 3)
);
CREATE TABLE ST_QUADROIV 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  PK_QUADROIV                 SMALLINT,
  DATA                            DATA ,
  ANO                         SMALLINT,
  FK_PROFISSIONAL             SMALLINT
);
CREATE TABLE ST_QUADROIVESTATISTICAS 
(
  FK_EMPRESAS                         SMALLINT,
  FK_FILIAIS                          SMALLINT,
  FK_SETORES                          SMALLINT,
  FK_QUADROIV                         SMALLINT,
  PK_QUADROIVESTATISTICAS             SMALLINT,
  NABSOLUTO                           SMALLINT,
  CID                                  VARCHAR(   100)  COLLATE ISO8859_1,
  NRELATIVO                            NUMERIC( 10, 3),
  OBITOS                              SMALLINT,
  NTRANSFERIDOS                       SMALLINT,
  NINCAPACITADOS                      SMALLINT
);
CREATE TABLE ST_QUADROV 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  PK_QUADROV                  SMALLINT,
  DATA                            DATA ,
  ANO                         SMALLINT,
  FK_PROFISSIONAL             SMALLINT
);
CREATE TABLE ST_QUADROVESTATISTICAS 
(
  FK_EMPRESAS                            SMALLINT,
  FK_FILIAIS                             SMALLINT,
  FK_SETOR                               SMALLINT,
  FK_QUADROV                             SMALLINT,
  PK_QUADROVESTATISTICAS                 SMALLINT,
  ANEXO                                  SMALLINT,
  FK_AGENTE11                            SMALLINT,
  FK_AGENTE13                            SMALLINT,
  FK_AGENTE14                            SMALLINT,
  FK_ANEXO1NR16                          SMALLINT,
  FK_ANEXO2NR16                          SMALLINT,
  FK_NR16ELETRICIDADE                    SMALLINT,
  FK_NR16RADIONIZANTES                   SMALLINT,
  FK_NR16ELETRICIDADETAREFA              SMALLINT,
  FK_NR16RADIONIZANTESTAREFA             SMALLINT,
  FK_AGENTE12                            SMALLINT,
  INTENSIDADE                            SMALLINT,
  TRABEXPOSTOS                           SMALLINT,
  INTENSIDADEAGENTE                         V1000 
);
CREATE TABLE ST_QUADROVI 
(
  FK_EMPRESAS                 SMALLINT,
  FK_FILIAIS                  SMALLINT,
  PK_QUADROVI                 SMALLINT,
  DATA                            DATA ,
  ANO                         SMALLINT,
  FK_PROFISSIONAL             SMALLINT
);
CREATE TABLE ST_QUADROVIESTATISTICAS 
(
  FK_EMPRESAS                         SMALLINT,
  FK_FILIAIS                          SMALLINT,
  FK_DEPARTAMENTOS                    SMALLINT,
  FK_SETORES                          SMALLINT,
  FK_QUADROVI                         SMALLINT,
  PK_QUADROVIESTATISTICAS             SMALLINT,
  NABSOLUTO                           SMALLINT,
  PERDAMATERIAL                       SMALLINT,
  MEDIA                                VARCHAR(    50)  COLLATE ISO8859_1,
  OBS                                  VARCHAR(  5000)  COLLATE ISO8859_1,
  MEDIAEMPREGADOS                      NUMERIC( 10, 3)
);
CREATE TABLE ST_REGISTRO2_CONFIG 
(
  ID                                   SMALLINT,
  PPPQUALITATIVO                           CHAR(     1)  COLLATE ISO8859_1,
  PPPQUALITATIVOOBS                     VARCHAR(   200)  COLLATE ISO8859_1,
  PPPQUALITATIVOOBSOC                   VARCHAR(   200)  COLLATE ISO8859_1,
  ASOFRASE1                                BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASORESULTADO1                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASORESULTADO2                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASORESULTADO3                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASOEXPOSICAO1                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASOEXPOSICAO2                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASOEXPOSICAO3                            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASOEXAMES                                BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASOCARGO                                 CHAR(     1)  COLLATE ISO8859_1,
  ASODOCUMENTO                             CHAR(     1)  COLLATE ISO8859_1,
  ASOIDADE                                 CHAR(     1)  COLLATE ISO8859_1,
  ASOLEGENDA                               BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASOENDERECO                              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASODOCCOMPL                           VARCHAR(   100)  COLLATE ISO8859_1,
  ASODATAEXAME                             CHAR(     1)  COLLATE ISO8859_1,
  ASONAOEXPOSICAO1                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASONAOEXPOSICAO2                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASONAOEXPOSICAO3                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  REQEXAMESFRASEAGENTE                     BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  REQEXAMESFRASEEXAMES                     BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  LEMBRAR_MAQUINAS                 FLAG_SIM_NAO ,
  DIAS_MAQUINAS                        SMALLINT,
  LTCATCONDPRELIMINARES                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FORCARASOCARGO                   FLAG_SIM_NAO ,
  CONFIRMACAODIGITAL               FLAG_SIM_NAO ,
  CONFIRMACAOSENHA                 FLAG_SIM_NAO ,
  CONFIRMACAOMAGNETICO             FLAG_SIM_NAO ,
  CONFIRMACAORFID                  FLAG_SIM_NAO ,
  FRASESENHA                               BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASORECIBO                             VARCHAR(   100)  COLLATE ISO8859_1,
  LEMBRAR_EXT_CASC                 FLAG_SIM_NAO ,
  DIAS_EXT_CASC                        SMALLINT,
  FRASEDIGITAL                             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  PROFISSIONALFRASEDIGITAL                 BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  PROFISSIONALFRASESENHA                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  CONFIRMACAOVEIA                  FLAG_SIM_NAO ,
  FRASEVEIA                                BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  PROFISSIONALFRASEVEIA                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  INTENSIDADEQUALITATIVO           FLAG_SIM_NAO ,
  FRASEQUALITATIVO                      VARCHAR(   200)  COLLATE ISO8859_1,
  VALIDADEASO                      FLAG_SIM_NAO ,
  FORMATOVALIDADEASO               FLAG_SIM_NAO ,
  CONCLNESPECIALRISCO                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  CONCLNESPECIALATIV                       BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FRASEASOSEMPCMSO                         V200 
);
CREATE TABLE ST_REGISTRO_CONFIG 
(
  FOTOS                                   V100 ,
  DIVULGAEXAMES                   FLAG_SIM_NAO ,
  PRIMEIROACESSO                  FLAG_SIM_NAO ,
  DIASBACKUP                          SMALLINT,
  CAMINHORELATORIOS                       V100 ,
  CONSETRA                                CHAR(     1)  COLLATE ISO8859_1,
  MENSAGENS                               CHAR(     1)  COLLATE ISO8859_1,
  LTCATLIMITEAGENTE1                      BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LTCATLIMITEAGENTE2                      BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LTCATLIMITEAGENTE3                      BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LTCATCONCLUSAOEPI1                      BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LTCATCONCLUSAOEPI2                      BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LTCATCONCLUSAOGFIP1                     BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LTCATCONCLUSAOGFIP2                     BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LTCATCONCLUSAOGFIP3                     BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LTCATCONCLUSAOGFIP4                     BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  PPRACONCLUSAOINSAL                      BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  UTILIZARAGENTESNOVOS            FLAG_SIM_NAO ,
  EXAMES_RECOMENDADOS             FLAG_SIM_NAO ,
  DATABACKUP                              DATA ,
  BACKUPDIARIO                    FLAG_SIM_NAO ,
  SUBSTITUIRBACKUP                FLAG_SIM_NAO ,
  HORABACKUP                      FLAG_SIM_NAO ,
  ORIGEM                                  V200 ,
  DESTINO                                 V200 ,
  LEMBRAR_CA                      FLAG_SIM_NAO ,
  LEMBRAR_EPI                     FLAG_SIM_NAO ,
  LEMBRAR_EXAMES                  FLAG_SIM_NAO ,
  LEMBRAR_CALIBRACAO              FLAG_SIM_NAO ,
  LEMBRAR_LAUDOS                  FLAG_SIM_NAO ,
  DIAS_CA                             SMALLINT,
  DIAS_EPI                            SMALLINT,
  DIAS_EXAMES                         SMALLINT,
  DIAS_CALIBRACAO                     SMALLINT,
  DIAS_LAUDOS                         SMALLINT,
  VERSAOBANCO                          VARCHAR(    10)  COLLATE ISO8859_1,
  ROOT                            FLAG_SIM_NAO ,
  OBJETIVO1                            VARCHAR( 20000)  COLLATE ISO8859_1,
  OBJETIVO2                            VARCHAR( 20000)  COLLATE ISO8859_1,
  OBJETIVO3                            VARCHAR( 20000)  COLLATE ISO8859_1,
  NROCNPJ                             SMALLINT,
  LEMBRAR_TREINAMENTOS            FLAG_SIM_NAO ,
  DIAS_TREINAMENTOS                   SMALLINT,
  LEMBRAR_TROCAFUNCAO             FLAG_SIM_NAO ,
  PPRACONCLPERIC                       VARCHAR(  2000)  COLLATE ISO8859_1,
  ATIVAS                          FLAG_SIM_NAO ,
  CONSULTORIAS                    FLAG_SIM_NAO ,
  TESTE                           FLAG_SIM_NAO ,
  PROPOSTAS                       FLAG_SIM_NAO ,
  INATIVAS                        FLAG_SIM_NAO ,
  TERCEIROS                       FLAG_SIM_NAO ,
  CONTADORESATIVOS                FLAG_SIM_NAO ,
  CONTADORESINATIVOS              FLAG_SIM_NAO ,
  EXPLPADRAONAOIMPEXAMES                  BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  DTATUALIZACAOEXAMES                     DATA ,
  IMPORTACAODIARIA                        CHAR(     1)  COLLATE ISO8859_1,
  HORAIMPORTACAO                          CHAR(     1)  COLLATE ISO8859_1,
  ORIGEMIMPORTACAO                     VARCHAR(   200)  COLLATE ISO8859_1,
  DATAIMPORTACAO                          DATA ,
  LEMBRAR_CRONOGRAMA                      CHAR(     1)  COLLATE ISO8859_1,
  DIAS_CRONOGRAMA                     SMALLINT,
  EXPORTACAODIARIA                        CHAR(     1)  COLLATE ISO8859_1,
  HORAEXPORTACAO                          CHAR(     1)  COLLATE ISO8859_1,
  DATAEXPORTACAO                          DATA ,
  ORIGEMEXPORTACAO                     VARCHAR(   200)  COLLATE ISO8859_1,
  LEMBRAR_ATESTADOS                       CHAR(     1)  COLLATE ISO8859_1,
  DIAS_ATESTADOS                      SMALLINT,
  EXPORTACAOODBC                          CHAR(     1)  COLLATE ISO8859_1,
  OBJETIVOLTCAT                           BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ESTACAOATUALIZANDO                   VARCHAR(    30)  COLLATE ISO8859_1,
  ATUALIZANDO                             CHAR(     1)  COLLATE ISO8859_1,
  ESTADO                                  CHAR(     2)  COLLATE ISO8859_1,
  INTERVALOSHORARIO                         V3 ,
  PPRACONDPRELIMINARES                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  LAYOUTATUALIZACAO                       CHAR(     1)  COLLATE ISO8859_1,
  LEMBRAR_EXT_INS                 FLAG_SIM_NAO ,
  LEMBRAR_EXT_REC                 FLAG_SIM_NAO ,
  LEMBRAR_EXT_RET                 FLAG_SIM_NAO ,
  DIAS_EXT_INS                        SMALLINT,
  DIAS_EXT_REC                        SMALLINT,
  DIAS_EXT_RET                        SMALLINT,
  DIAS_CHAVE                           VARCHAR(    10)  COLLATE ISO8859_1,
  PPRAABAIXONIVELACAO                     BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  PPRASEMAGENTE                           BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  SOMENTEPPRASEMAGENTE                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  LTCATSEMAGENTE                          BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  DATADIGITAL                          VARCHAR(   100)  COLLATE ISO8859_1,
  ENVIARPOREMAIL                  FLAG_SIM_NAO ,
  DATAULTBACKUP                           DATA ,
  PCMSOABAIXONIVELACAO                    BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LEMBRAR_EXT_VAL                 FLAG_SIM_NAO ,
  DIAS_EXT_VAL                        SMALLINT,
  ATUALIZARFICHAEPI                       CHAR(     1)  COLLATE ISO8859_1,
  LEMBRAR_VACINAS                         CHAR(     1)  COLLATE ISO8859_1,
  DIAS_VACINAS                        SMALLINT,
  EPI_TEXTO                               BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  ALTERAEMPREGADOIMP                      CHAR(     1)  COLLATE ISO8859_1,
  DATAAUDITORIA                           DATA ,
  AUDITORIAMESES                      SMALLINT,
  ASODTREQUISICAO                 FLAG_SIM_NAO ,
  ASOFRASEDTREQUISICAO                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASOFRASE                                BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  ASOOBRIGATORIO                  FLAG_SIM_NAO ,
  ASORECOMENDADO                  FLAG_SIM_NAO ,
  LEMBRAR_GFIP4                           CHAR(     1)  COLLATE ISO8859_1,
  ADMISSOES_ANTERIORES            FLAG_SIM_NAO ,
  ADMISSOES_ANTERIORES_P          FLAG_SIM_NAO ,
  ADMISSOES_ANTERIORES_PD         FLAG_SIM_NAO ,
  PK_SEQUENCIAL                       SMALLINT         DEFAULT 1,
  LEMBRAR_VISITAS                 FLAG_SIM_NAO ,
  DIAS_VISITAS                        SMALLINT
);
CREATE TABLE ST_RELATORIOANUAL 
(
  FK_EMPRESAS                   SMALLINT,
  FK_FILIAIS                    SMALLINT,
  PK_RELATORIOANUAL             SMALLINT,
  DATA                              DATA ,
  FK_PROFISSIONAL               SMALLINT,
  RAZAOSOCIAL                       V100 
);
CREATE TABLE ST_RELATORIOANUALESTATISTICAS 
(
  FK_EMPRESAS                            SMALLINT,
  FK_FILIAIS                             SMALLINT,
  FK_DEPARTAMENTOS                       SMALLINT,
  FK_SETORES                             SMALLINT,
  FK_RELATORIOANUAL                      SMALLINT,
  RELATORIOANUALESTATISTICAS             SMALLINT,
  TIPO                               FLAG_SIM_NAO ,
  FK_EXAMESPCMSO                         SMALLINT,
  EXAMESREALIZADOS                       SMALLINT,
  EXAMESPREVISTOS                        SMALLINT,
  EXAMESANORMAIS                         SMALLINT,
  SETOR                                      V100 
);
CREATE TABLE ST_RESPONSAVELRH 
(
  PK_RESPONSAVELRH             SMALLINT         NOT NULL,
  FK_FUNCIONARIOS              SMALLINT,
  NOME                          VARCHAR(   100)  COLLATE ISO8859_1,
  NIT                           VARCHAR(    20)  COLLATE ISO8859_1
);
CREATE TABLE ST_RESPONSAVELRHEMPRESAS 
(
  FK_EMPRESAS                  SMALLINT,
  FK_FILIAIS                   SMALLINT,
  FK_RESPONSAVELRH             SMALLINT
);
CREATE TABLE ST_RESTRICOES 
(
  PK_RESTRICOES             SMALLINT,
  NOME                          V100 
);
CREATE TABLE ST_SETORES 
(
  FK_EMPRESAS                  SMALLINT,
  FK_FILIAIS                   SMALLINT,
  FK_DEPARTAMENTOS             SMALLINT,
  FK_SETORES                   SMALLINT,
  DESCRICAO                        V100 ,
  DTALT                            DATA ,
  TWA                          NUMERICO ,
  FOTO1                            V200  COLLATE PT_PT,
  FOTO2                            V200  COLLATE PT_PT,
  FOTO3                            V200  COLLATE PT_PT,
  FOTO4                            V200  COLLATE PT_PT,
  DTCADASTRO                       DATA ,
  DATAINI                          DATA ,
  DATAFIM                          DATA ,
  PCMAT                            CHAR(     1)  COLLATE ISO8859_1,
  DESCRITIVO                       BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  VERIFICADO                         C1 
);
CREATE TABLE ST_SETORESAMBIENTE 
(
  FK_EMPRESAS                    SMALLINT,
  FK_FILIAIS                     SMALLINT,
  FK_DEPARTAMENTOS               SMALLINT,
  FK_SETORES                     SMALLINT,
  AREA                            NUMERIC( 10, 2),
  PE                              NUMERIC( 10, 2),
  PISO                            VARCHAR(    40)  COLLATE ISO8859_1,
  FORRO                           VARCHAR(    40)  COLLATE ISO8859_1,
  TELHADO                         VARCHAR(    40)  COLLATE ISO8859_1,
  TELHADOE                        VARCHAR(    40)  COLLATE ISO8859_1,
  JANELA                          VARCHAR(    40)  COLLATE ISO8859_1,
  ILUMINACAO                      VARCHAR(    40)  COLLATE ISO8859_1,
  TEXTO                              BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  PAREDE                          VARCHAR(    40)  COLLATE ISO8859_1,
  DATAINICIO                         DATA ,
  DATAFIM                            DATA ,
  FOTO1                           VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2                           VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3                           VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4                           VARCHAR(   200)  COLLATE ISO8859_1,
  FK_EMPRESAEXTERNA              SMALLINT,
  SETOR                           VARCHAR(   100)  COLLATE ISO8859_1,
  PK_SETORESAMBIENTE             SMALLINT,
  TIPOOBRA                       SMALLINT,
  ENDERECO                        VARCHAR(   100)  COLLATE ISO8859_1,
  FK_CIDADE                      SMALLINT,
  FK_BAIRRO                      SMALLINT,
  CEP                                CHAR(    10)  COLLATE ISO8859_1,
  ESTADO                             CHAR(     2)  COLLATE ISO8859_1,
  FONE                            VARCHAR(    50)  COLLATE ISO8859_1,
  FAX                             VARCHAR(    50)  COLLATE ISO8859_1,
  CONTATO                         VARCHAR(   100)  COLLATE ISO8859_1,
  EMAIL                           VARCHAR(    50)  COLLATE ISO8859_1,
  HP                              VARCHAR(   100)  COLLATE ISO8859_1,
  DDD                                CHAR(     3)  COLLATE ISO8859_1,
  NROEMPREGADOS                  SMALLINT,
  DORMITORIOLOCAL                    CHAR(     1)  COLLATE ISO8859_1,
  TEXTOT0                            BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
  TEXTOT1                            BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
  TEXTOT2                            BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
  TEXTOT3                            BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
  TEXTOT4                            BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
  TEXTOT5                            BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
  TEXTOT6                            BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
  TEXTOT7                            BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
  TEXTOT8                            BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
  TAMANHO                    FLAG_SIM_NAO ,
  PCMAT                      FLAG_SIM_NAO ,
  MEMORIALDESCRITIVO                 BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  FOTO1T0                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2T0                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3T0                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4T0                         VARCHAR(   200)  COLLATE ISO8859_1,
  TAMANHOT0                  FLAG_SIM_NAO ,
  FOTO1T1                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2T1                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3T1                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4T1                         VARCHAR(   200)  COLLATE ISO8859_1,
  TAMANHOT1                  FLAG_SIM_NAO ,
  FOTO1T2                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2T2                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3T2                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4T2                         VARCHAR(   200)  COLLATE ISO8859_1,
  TAMANHOT2                  FLAG_SIM_NAO ,
  FOTO1T3                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2T3                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3T3                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4T3                         VARCHAR(   200)  COLLATE ISO8859_1,
  TAMANHOT3                  FLAG_SIM_NAO ,
  FOTO1T4                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2T4                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3T4                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4T4                         VARCHAR(   200)  COLLATE ISO8859_1,
  TAMANHOT4                  FLAG_SIM_NAO ,
  FOTO1T5                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2T5                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3T5                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4T5                         VARCHAR(   200)  COLLATE ISO8859_1,
  TAMANHOT5                  FLAG_SIM_NAO ,
  FOTO1T6                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2T6                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3T6                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4T6                         VARCHAR(   200)  COLLATE ISO8859_1,
  TAMANHOT6                  FLAG_SIM_NAO ,
  FOTO1T7                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2T7                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3T7                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4T7                         VARCHAR(   200)  COLLATE ISO8859_1,
  TAMANHOT7                  FLAG_SIM_NAO ,
  FOTO1T8                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2T8                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3T8                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4T8                         VARCHAR(   200)  COLLATE ISO8859_1,
  TAMANHOT8                  FLAG_SIM_NAO ,
  LEGENDA1                          V1000 ,
  LEGENDA2                          V1000 ,
  LEGENDA3                          V1000 ,
  LEGENDA4                          V1000 ,
  DESCRICAO                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  FOTO1T9                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO2T9                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO3T9                         VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO4T9                         VARCHAR(   200)  COLLATE ISO8859_1,
  TAMANHOT9                  FLAG_SIM_NAO ,
  TEXTOT9                            BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
  LEGENDAF1T0                       V1000 ,
  LEGENDAF2T0                       V1000 ,
  LEGENDAF3T0                       V1000 ,
  LEGENDAF4T0                       V1000 ,
  LEGENDAF1T1                       V1000 ,
  LEGENDAF2T1                       V1000 ,
  LEGENDAF3T1                       V1000 ,
  LEGENDAF4T1                       V1000 ,
  LEGENDAF1T2                       V1000 ,
  LEGENDAF2T2                       V1000 ,
  LEGENDAF3T2                       V1000 ,
  LEGENDAF4T2                       V1000 ,
  LEGENDAF1T3                       V1000 ,
  LEGENDAF2T3                       V1000 ,
  LEGENDAF3T3                       V1000 ,
  LEGENDAF4T3                       V1000 ,
  LEGENDAF1T4                       V1000 ,
  LEGENDAF2T4                       V1000 ,
  LEGENDAF3T4                       V1000 ,
  LEGENDAF4T4                       V1000 ,
  LEGENDAF1T5                       V1000 ,
  LEGENDAF2T5                       V1000 ,
  LEGENDAF3T5                       V1000 ,
  LEGENDAF4T5                       V1000 ,
  LEGENDAF1T6                       V1000 ,
  LEGENDAF2T6                       V1000 ,
  LEGENDAF3T6                       V1000 ,
  LEGENDAF4T6                       V1000 ,
  LEGENDAF1T7                       V1000 ,
  LEGENDAF2T7                       V1000 ,
  LEGENDAF3T7                       V1000 ,
  LEGENDAF4T7                       V1000 ,
  LEGENDAF1T8                       V1000 ,
  LEGENDAF2T8                       V1000 ,
  LEGENDAF3T8                       V1000 ,
  LEGENDAF4T8                       V1000 ,
  LEGENDAF1T9                       V1000 ,
  LEGENDAF2T9                       V1000 ,
  LEGENDAF3T9                       V1000 ,
  LEGENDAF4T9                       V1000 
);
CREATE TABLE ST_SINTOMAS 
(
  PK_SINTOMAS             SMALLINT,
  NOME                        V200 
);
CREATE TABLE ST_SINTOMAS_MEDICACAO 
(
  FK_SINTOMA               SMALLINT         NOT NULL,
  FK_MEDICACAO             SMALLINT         NOT NULL
);
CREATE TABLE ST_SUBGRUPOSERGONOMIA 
(
  FK_GRUPOSERGONOMIA                SMALLINT,
  PK_SUBGRUPOSERGONONIA             SMALLINT,
  DESCRICAO                          VARCHAR(   200)  COLLATE ISO8859_1
);
CREATE TABLE ST_TECNICAS 
(
  PK_TECNICAS             SMALLINT         NOT NULL,
  DESCRICAO                VARCHAR(   100)  COLLATE ISO8859_1,
  LTCAT               FLAG_SIM_NAO ,
 CONSTRAINT PK_ST_TECNICAS PRIMARY KEY (PK_TECNICAS)
);
CREATE TABLE ST_TECNICASANEXOS 
(
  FK_TECNICA             SMALLINT         NOT NULL,
  FK_ANEXOS              SMALLINT         NOT NULL,
 CONSTRAINT PK_ST_TECNICASANEXOS PRIMARY KEY (FK_TECNICA, FK_ANEXOS)
);
CREATE TABLE ST_TIPOSATENDIMENTO 
(
  PK_TIPOATENDIMENTO             SMALLINT,
  NOME                               V100 ,
  SOMENTEMEDICOS                       C1 
);
CREATE TABLE ST_TIPOSDEOBRAS 
(
  PK_TIPOSDEOBRAS             SMALLINT         NOT NULL,
  NOME                         VARCHAR(   200)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_TIPOSDEOBRAS PRIMARY KEY (PK_TIPOSDEOBRAS)
);
CREATE TABLE ST_TIPO_EXTINTORES 
(
  PK_TIPOEXTINTOR               SMALLINT         NOT NULL,
  NOME                              V100 ,
  VALIDADE_RECARGA              SMALLINT,
  VALIDADE_RETESTE              SMALLINT,
  VALIDADE_INSPECAO             SMALLINT,
  RECARGA_TIPO              FLAG_SIM_NAO ,
  RETESTE_TIPO              FLAG_SIM_NAO ,
  INSPECAO_TIPO             FLAG_SIM_NAO ,
  VALIDADE_CASCO                SMALLINT,
  CASCO_TIPO                          C1 ,
 CONSTRAINT PK_ST_TIPO_EXTINTORES PRIMARY KEY (PK_TIPOEXTINTOR)
);
CREATE TABLE ST_TREINAMENTOS 
(
  PK_TREINAMENTOS                      SMALLINT         NOT NULL,
  TEXTO                                    BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  INCLUIRPPRA                              CHAR(     1)  COLLATE ISO8859_1,
  TITULO                                VARCHAR(   200)  COLLATE ISO8859_1,
  CABECALHO                               V1000 ,
  RODAPE                                   V200 ,
  FOTO                                  VARCHAR(   200)  COLLATE ISO8859_1,
  VALIDADE                             SMALLINT,
  FK_UNIDADEVALIDADE                       CHAR(     1)  COLLATE ISO8859_1,
  FK_GRUPOSTREINAMENTOS                SMALLINT         NOT NULL,
  FK_SUBGRUPOSTREINAMENTOS             SMALLINT         NOT NULL,
  INCLUIRCARGOS                            CHAR(     1)  COLLATE ISO8859_1,
  CABECALHORELATORIO                    VARCHAR(   100)  COLLATE ISO8859_1,
  CAMINHOFLASH                          VARCHAR(  1500)  COLLATE ISO8859_1,
  DESCRITIVO                               BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  DESCRICAO                             VARCHAR(   100)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_TREINAMENTOS PRIMARY KEY (PK_TREINAMENTOS, FK_GRUPOSTREINAMENTOS, FK_SUBGRUPOSTREINAMENTOS)
);
CREATE TABLE ST_TREINAMENTOSGRUPOS 
(
  PK_GRUPOSTREINAMENTOS             SMALLINT         NOT NULL,
  DESCRICAO                          VARCHAR(   200)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_TREINAMENTOSGRUPOS PRIMARY KEY (PK_GRUPOSTREINAMENTOS)
);
CREATE TABLE ST_TREINAMENTOSSUBGRUPOS 
(
  FK_GRUPOSTREINAMENTOS                SMALLINT         NOT NULL,
  PK_SUBGRUPOSTREINAMENTOS             SMALLINT         NOT NULL,
  DESCRICAO                             VARCHAR(   200)  COLLATE ISO8859_1,
 CONSTRAINT PK_ST_TREINAMENTOSSUBGRUPOS PRIMARY KEY (FK_GRUPOSTREINAMENTOS, PK_SUBGRUPOSTREINAMENTOS)
);
CREATE TABLE ST_VACINAS 
(
  PK_VACINAS                      SMALLINT         NOT NULL,
  NOME                             VARCHAR(   100)  COLLATE ISO8859_1,
  NRODOSES                        SMALLINT         DEFAULT 1 NOT NULL,
  PERIODICIDADE                   SMALLINT,
  FK_UNDPERIODICIDADE             SMALLINT,
  EXIGENCIA                   FLAG_SIM_NAO ,
  FINALIDADE                       VARCHAR(  2000)  COLLATE ISO8859_1,
  NRODOSESREFORCO                 SMALLINT,
 CONSTRAINT PK_ST_VACINAS PRIMARY KEY (PK_VACINAS)
);
CREATE TABLE ST_VACINAS_DOSES 
(
  FK_VACINAS                   SMALLINT         NOT NULL,
  PK_VACINAS_DOSES             SMALLINT         NOT NULL,
  NUMERODOSE                   SMALLINT         NOT NULL,
  TEMPODADOSE                  SMALLINT,
  FK_UNIDTEMPO                 SMALLINT,
 CONSTRAINT PK_ST_VACINAS_DOSES PRIMARY KEY (FK_VACINAS, PK_VACINAS_DOSES, NUMERODOSE)
);
CREATE TABLE SUBTIPOPATRIMONIO 
(
  PK_SUBTIPOPATRIMONIO              SMALLINT         NOT NULL,
  FK_SUBGRUPOPATRIMONIO              INTEGER         DEFAULT 1,
  FK_GRUPOPATRIMONIO                 INTEGER         DEFAULT 1,
  DESCRICAO                          VARCHAR(    50)  COLLATE ISO8859_1,
 PRIMARY KEY (PK_SUBTIPOPATRIMONIO)
);
CREATE TABLE TABELAPRECOS 
(
  FK_EMPRESAS                 SMALLINT         NOT NULL,
  FK_FILIAIS                  SMALLINT         NOT NULL,
  PK_TABELAPRECOS             SMALLINT         NOT NULL,
  DESCRICAO                    VARCHAR(   100)  COLLATE ISO8859_1,
  DATAINICIAL                TIMESTAMP,
  DATAFINAL                  TIMESTAMP,
  FK_CONDPAGTO                SMALLINT,
  TIPOHORARIO                  VARCHAR(    10)  COLLATE ISO8859_1,
  TABELATIVA                      CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
 CONSTRAINT PK_TABELAPRECOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, PK_TABELAPRECOS)
);
CREATE TABLE TABELAPRECOSITEM 
(
  FK_EMPRESAS                     SMALLINT         NOT NULL,
  FK_FILIAIS                      SMALLINT         NOT NULL,
  FK_TABELAPRECOS                 SMALLINT         NOT NULL,
  PK_TABELAPRECOSITEM             SMALLINT         NOT NULL,
  FK_PRODUTOS                     SMALLINT,
  PRECOBASE                        DECIMAL( 12, 2),
  ALICOTADESCONTO                  DECIMAL(  6, 2),
  PRECOVENDA                       DECIMAL( 12, 2),
  FATOR                              FLOAT,
  FAMILIAUNICA                        CHAR(     1)  COLLATE ISO8859_1,
  TIPOOPERACAO                     VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_TABELAPRECOSITEM PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_TABELAPRECOS, PK_TABELAPRECOSITEM)
);
CREATE TABLE TAGS 
(
  FK_EMPRESAS                     SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTO                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                      SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                     SMALLINT         DEFAULT 1 NOT NULL,
  PK_TAGS                         SMALLINT         NOT NULL,
  DESCRICAO                        VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
  PRODUTOS                            CHAR(     1) DEFAULT 'N' NOT NULL COLLATE ISO8859_1,
  DATAINICIAL                    TIMESTAMP         DEFAULT CURRENT_DATE,
  FK_CENTROCUSTO                   VARCHAR(    10)  COLLATE ISO8859_1,
  FK_FAMILIAS                      INTEGER,
  FK_PRIORIDADE                    INTEGER,
  TAG_MULTIPLO                        CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  TAG_PARADO                          CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  TAG_PESO                        SMALLINT,
  VALORCRITICIDADE                SMALLINT,
  DIAS_RETRABALHO                 SMALLINT,
  AFETA_PRODUCAO                      CHAR(     1) DEFAULT 'S' NOT NULL COLLATE ISO8859_1,
  HORA_DISPONIVEL                     TIME,
  TEMPO_MAXIMO_PARADA                 TIME,
  MTBF                             INTEGER,
  TAG_DATA                       TIMESTAMP,
  CRIAREQUIPPREDIAL                   CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
 CONSTRAINT PK_TAGS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTO, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, PK_TAGS)
);
CREATE TABLE TAGS_HISTORICOS 
(
  FK_EMPRESAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS              SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                    SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAG                        SMALLINT         DEFAULT 1 NOT NULL,
  PK_TAG_HISTORICOS             SMALLINT         NOT NULL,
  HISTORICO                         BLOB SUB_TYPE 0 SEGMENT SIZE 20,
 CONSTRAINT PK_TAGS_HISTORICOS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, FK_TAG, PK_TAG_HISTORICOS)
);
CREATE TABLE TAGS_SUBTIPOS 
(
  FK_TAGS_TIPOS                SMALLINT         NOT NULL,
  PK_TAGS_SUBTIPOS             SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(    50)  COLLATE ISO8859_1,
  FK_FAMILIAS                  SMALLINT,
 CONSTRAINT PK_TAGS_SUBTIPOS PRIMARY KEY (FK_TAGS_TIPOS, PK_TAGS_SUBTIPOS)
);
CREATE TABLE TAGS_TIPOS 
(
  PK_TAG_TIPO             SMALLINT         NOT NULL,
  DESCRICAO                VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  FK_FAMILIAS             SMALLINT,
 CONSTRAINT PK_TAGS_TIPOS PRIMARY KEY (PK_TAG_TIPO)
);
CREATE TABLE TAG_CODIGOS 
(
  PK_TAGS                  SMALLINT         NOT NULL,
  CODIGOANTIGO              VARCHAR(    10)  COLLATE ISO8859_1,
 CONSTRAINT PK_TAG_CODIGOS PRIMARY KEY (PK_TAGS)
);
CREATE TABLE TAG_IMAGEM 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAGS                      SMALLINT         DEFAULT 1 NOT NULL,
  PK_TAG_IMAGEM                SMALLINT         NOT NULL,
  FK_IMAGEM                    SMALLINT         DEFAULT 1 NOT NULL,
  DESCRICAOIMAGEM               VARCHAR(   250)  COLLATE ISO8859_1,
 CONSTRAINT PK_TAG_IMAGEM PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, FK_TAGS, PK_TAG_IMAGEM)
);
CREATE TABLE TAG_PECAS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAGS                      SMALLINT         DEFAULT 1 NOT NULL,
  PK_TAG_PECAS                 SMALLINT         NOT NULL,
  FK_PECAS                     SMALLINT         DEFAULT 1 NOT NULL,
  QUANTNECESSARIA                 FLOAT,
  FK_FAMILIAS                  SMALLINT         DEFAULT 1 NOT NULL,
 CONSTRAINT PK_TAG_PECAS PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_DEPARTAMENTOS, FK_SETORES, FK_PROCESSOS, FK_CELULAS, FK_MAQUINAS, FK_TAGS, PK_TAG_PECAS)
);
CREATE TABLE TAG_SINTOMAS 
(
  FK_EMPRESAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_DEPARTAMENTOS             SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_PROCESSOS                 SMALLINT         DEFAULT 1 NOT NULL,
  FK_CELULAS                   SMALLINT         DEFAULT 1 NOT NULL,
  FK_MAQUINAS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_TAGS                      SMALLINT         DEFAULT 1 NOT NULL,
  PK_TAG_SINTOMAS              SMALLINT         NOT NULL,
  FK_SINTOMAS                  SMALLINT         DEFAULT 1 NOT NULL,
  TEMPOSOLUCAO                     TIME
);
CREATE TABLE TELEFONES_UTEIS 
(
  PK_NUMEROTELEFONE              VARCHAR(    15) NOT NULL COLLATE ISO8859_1,
  EMPRESA                        VARCHAR(    40)  COLLATE ISO8859_1,
  OBSERVACAO                     VARCHAR(   100)  COLLATE ISO8859_1,
 PRIMARY KEY (PK_NUMEROTELEFONE)
);
CREATE TABLE TEMPPATRI 
(
  BEM                          VARCHAR(    20)  COLLATE ISO8859_1,
  INDICE                       VARCHAR(    20)  COLLATE ISO8859_1,
  CONTA                        VARCHAR(    20)  COLLATE ISO8859_1,
  CODBEM                       VARCHAR(    20)  COLLATE ISO8859_1,
  DESCR1                       VARCHAR(    50)  COLLATE ISO8859_1,
  DESCR2                       VARCHAR(    50)  COLLATE ISO8859_1,
  DESCR3                       VARCHAR(    50)  COLLATE ISO8859_1,
  DESCR4                       VARCHAR(    50)  COLLATE ISO8859_1,
  DESCR5                       VARCHAR(    50)  COLLATE ISO8859_1,
  DATAAQUISICAO                   DATE,
  VALORAQUISICAO      DOUBLE PRECISION,
  FORNECEDOR                   VARCHAR(    50)  COLLATE ISO8859_1,
  RESPONSAVEL                  VARCHAR(    50)  COLLATE ISO8859_1,
  CODPATRIMONIO                VARCHAR(    10)  COLLATE ISO8859_1,
  VALORPATRIMONIO     DOUBLE PRECISION,
  DESCRICAO                    VARCHAR(   100)  COLLATE ISO8859_1,
  GRUPOPATRIMO                 VARCHAR(    10)  COLLATE ISO8859_1,
  CENTROCUSTO                  VARCHAR(    10)  COLLATE ISO8859_1,
  UNIDADES                    SMALLINT         DEFAULT 1,
  NOTAFISCAL                   VARCHAR(    10)  COLLATE ISO8859_1,
  CODFORNECEDOR                VARCHAR(    20)  COLLATE ISO8859_1,
  DATAALOCACAO                    DATE         DEFAULT current_timeStamp,
  SUBGRUPO                     VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODDEPTO                     VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSETOR                     VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSECAO                     VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE TIPOENTRADAS_SAIDAS 
(
  PK_CODIGOTIPO                SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  CREDITA_ICMS             FLAG_SIM_NAO ,
  CREDITA_IPI              FLAG_SIM_NAO ,
  GERADUPLICATAS           FLAG_SIM_NAO ,
  ATUALIZAESTOQUES         FLAG_SIM_NAO ,
  PODERTERCEIROS           FLAG_SIM_NAO DEFAULT 'N',
  ATUALIZAPRECO            FLAG_SIM_NAO ,
  ATUALIZAATIVO            FLAG_SIM_NAO ,
  DESMEMBRAATIVO           FLAG_SIM_NAO ,
  CALCULAICMS              FLAG_SIM_NAO ,
  CALCULAIPI                       CHAR(     1) DEFAULT 'S' NOT NULL COLLATE ISO8859_1,
  FK_CFOP                       VARCHAR(    10)  COLLATE ISO8859_1,
  TEXTOPADRAO                   VARCHAR(   100)  COLLATE ISO8859_1,
  LIVROFISCAL_ICMS                 CHAR(     1) DEFAULT 'T' COLLATE ISO8859_1,
  LIVROFISCAL_IPI                  CHAR(     1) DEFAULT 'T' COLLATE ISO8859_1,
  DESTACA_IPI                      CHAR(     1)  COLLATE ISO8859_1,
  IPI_BASE_ICMS            FLAG_SIM_NAO DEFAULT 'N',
  CALCULADIF_ICMS          FLAG_SIM_NAO DEFAULT 'N',
 PRIMARY KEY (PK_CODIGOTIPO)
);
update rdb$relation_fields set rdb$description = 'SE SIM
Ao registrar o documento de entrada, o sistema calcula o
ICMS respectivo e atualiza o crédito do imposto nos Livros
Fiscais. Este caso, se aplica às empresas que tem direito de
creditar o ICMS na entrada.
O valor do imposto creditado na entrada será compensado
com o valor total do ICMS a recolher (calculado com a
emissão do documento de saída).

SE NÃO
O valor do ICMS da entrada não será creditado, ou seja,
compensado' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'CREDITA_ICMS';
update rdb$relation_fields set rdb$description = 'SE SIM
Ao registrar o documento de entrada, o sistema calcula o IPI
respectivo e atualiza o crédito do imposto nos Livros Fiscais

SE NAO O valor do IPI não é creditado.

' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'CREDITA_IPI';
update rdb$relation_fields set rdb$description = '• GeraDupl. – (F4_DUPLIC) - Indica se devem ser geradas duplicatas de títulos a pagar (se entrada) e a receber (se saída). Exemplo: Ao cadastrar um documento de entrada proveniente de um fornecedor, deve-se gerar um registro de Contas a Pagar (ambiente Financeiro) para retratar a dívida assumida pela aquisição da mercadoria. Já a entrada de um produto para demonstração ou avaliação, não é necessário a geração de duplicatas a pagar, pois, em princípio, haverá a devolução do produto.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'GERADUPLICATAS';
update rdb$relation_fields set rdb$description = '• GeraDupl. – (F4_DUPLIC) - Indica se devem ser geradas duplicatas de títulos a pagar (se entrada) e a receber (se saída). Exemplo: Ao cadastrar um documento de entrada proveniente de um fornecedor, deve-se gerar um registro de Contas a Pagar (ambiente Financeiro) para retratar a dívida assumida pela aquisição da mercadoria. Já a entrada de um produto para demonstração ou avaliação, não é necessário a geração de duplicatas a pagar, pois, em princípio, haverá a devolução do produto.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'ATUALIZAESTOQUES';
update rdb$relation_fields set rdb$description = '• Poder de Terceiros - (F4_PODER3) é utilizado para controlar materias de terceiros ou em terceiros. Geralmente utilizado por empresas que trabalham com operação de beneficiamento e precisam controlar o material que está fora da empresa ou que está em seu poder, porém pertence a outra empresa. Caracteriza-se como beneficiamento, uma das formas de industrialização, que se destina a modificar, aperfeiçoar ou, de qualquer forma, alterar o funcionamento, a utilização, o acabamento ou a aparência do produto por terceiros.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'PODERTERCEIROS';
update rdb$relation_fields set rdb$description = '• At. Pr. Compr. – Atualiza ou não o preço de compra no Cadastro de Produtos. Se S ou branco, atualiza. Se N ,não atualiza o preço de compra.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'ATUALIZAPRECO';
update rdb$relation_fields set rdb$description = '• Atual. Ativo – Indica se o Ativo Imobilizado deve ser atualizado, quando da entrada de uma nota.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'ATUALIZAATIVO';
update rdb$relation_fields set rdb$description = '• Desme. It. – Indica se desmembra os item gerados no Ativo Fixo a partir da NF. Se igual a SIM, quando for lançado um item com quantidade 10 na NF, será gerado 10 itens com quantidade igual a 1 no Ativo Fixo, se igual a NAO será gerado apenas 1 item com quantidade igual a 10. Este parâmetro só terá efeito se o campo "Atual.Ativo "F4_ATUATF" for igual a SIM.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'DESMEMBRAATIVO';
update rdb$relation_fields set rdb$description = 'SE SIM Ao registrar o documento de entrada, o sistema calcula o
ICMS respectivo e atualiza o crédito do imposto, nos
Livros Fiscais

SE NAO Indica a não incidência de ICMS na operação, ou seja, o
valor do ICMS não é calculado.

PADRAO = ''S''' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'CALCULAICMS';
update rdb$relation_fields set rdb$description = 'CALCULA O IPI
SE SIM Calcula o IPI respectivo da operação.
SE NAO N ão incide IPI na operação, ou seja, o valor do IPI não é calculado
SE ''R'' DE REDUCAO 
Comércio Não Atacadista: -
Calcula o IPI com redução de 50% na base de cálculo.
Esta opção é utilizada para a entrada de mercadorias destinadas à
industrialização adquiridas de revendedores, comércios não -atacadistas
equiparados à indústria e demais casos previstos em lei, ou seja, empresas
não contribuintes do IPI.
Neste caso, o adquirente contribuinte do IPI, pode calcular o imposto
devido na operação e creditar 50% do valor cal culado, mesmo que este não
esteja destacado no documento de entrada.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'CALCULAIPI';
update rdb$relation_fields set rdb$description = '• Cod. Fiscal – Código fiscal. Se o tipo da TES for entrada, o primeiro dígito deve ser 1,2 ou 3. Se tipo da TES for saida, deve ser 5,6 ou 7.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'FK_CFOP';
update rdb$relation_fields set rdb$description = '• Txt. Padrão – Código do texto padrão a ser impresso no pedido de compras ou na nota fiscal de saída referente ao TES.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'TEXTOPADRAO';
update rdb$relation_fields set rdb$description = '• L. Fisc. ICMS – Livro fiscal ICMS. "T" para ICMS tribu-tado, "I" para ICMS isento, "O" paraICMS outros, "N" não, "Z" para livro fiscal com colunas de ICMS zeradas.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'LIVROFISCAL_ICMS';
update rdb$relation_fields set rdb$description = '• L. Fisc. IPI – (F4_LFIPI) Livro fiscal IPI. "T" para IPI tributado"I" para IPI isento, "O" para IPI outros"N" não, "Z" para colunas de IPI nos livros fiscais zeradas.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'LIVROFISCAL_IPI';
update rdb$relation_fields set rdb$description = '• Destaca IPI – Destaca IPI na nota fiscal. (S/N).' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'DESTACA_IPI';
update rdb$relation_fields set rdb$description = '• IPI na Base – (F4_INCIDE) Incidência de IPI ou não na base de ICMS.' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'IPI_BASE_ICMS';
update rdb$relation_fields set rdb$description = '• Calc. Dif. ICM – Refere-se à diferença de complemento de ICMS na compra de material de consumo de outros Estados da federação' where rdb$relation_name = 'TIPOENTRADAS_SAIDAS' and rdb$field_name = 'CALCULADIF_ICMS';
CREATE TABLE TIPOLOGRADOUROS 
(
  PK_TIPOLOGRADOURO             SMALLINT         NOT NULL,
  CODIGO                         VARCHAR(     2)  COLLATE PT_BR,
  DESCRICAO                      VARCHAR(    15)  COLLATE PT_BR,
  ABREVIACAO                     VARCHAR(     3)  COLLATE PT_BR,
 CONSTRAINT TIPOLOGRADOUROPK PRIMARY KEY (PK_TIPOLOGRADOURO)
);
CREATE TABLE TIPOMOVIMENTO 
(
  CODTIPOMOVIMENTO                               CHAR(     9) NOT NULL COLLATE ISO8859_1,
  CODIGO                                      VARCHAR(    10) NOT NULL COLLATE PT_BR,
  NOMETIPOMOVIMENTO                           VARCHAR(    60)  COLLATE PT_BR,
  FLAGFORNCLI                                    CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGIMPRIMIRNOTAFISCAL                         CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGREAJUSTAPRECOVENDA                         CHAR(     1) DEFAULT 'Y' COLLATE ISO8859_1,
  FLAGLANCAFINANCEIRO                            CHAR(     1) DEFAULT 'Y' COLLATE ISO8859_1,
  FLAGATUALIZACUSTOPRODUTO                       CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGATUALIZAFORNECEDOR                         CHAR(     1) DEFAULT 'Y' COLLATE ISO8859_1,
  FLAGATUALIZACUSTOMEDIO                         CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGATUALIZAESTOQUE                            CHAR(     1) DEFAULT 'Y' COLLATE ISO8859_1,
  FLAGTIPOMOVIMENTO                              CHAR(     1)  COLLATE ISO8859_1,
  FLAGACERTO                                     CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGCONSIGNACAO                                CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGDEVOLUCAO                                  CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGTRANSFERENCIA                              CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  CODCFOPDENTROUF                                CHAR(     4)  COLLATE ISO8859_1,
  CODCFOPFORAUF                                  CHAR(     4)  COLLATE ISO8859_1,
  CODCFOPEXTERIOR                                CHAR(     4)  COLLATE ISO8859_1,
  FLAGCALCULAIPI                                 CHAR(     1) DEFAULT 'Y' COLLATE ISO8859_1,
  FLAGCALCULAICMS                                CHAR(     1) DEFAULT 'Y' COLLATE ISO8859_1,
  FLAGCALCULASUBSTTRIBUTARIA                     CHAR(     1) DEFAULT 'Y' COLLATE ISO8859_1,
  FLAGCALCULAISS                                 CHAR(     1) DEFAULT 'Y' COLLATE ISO8859_1,
  FLAGSOMAIPIBASEICMS                            CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGPOSSUIREDUCAOBASEICMS                      CHAR(     1) DEFAULT 'Y' COLLATE ISO8859_1,
  SOMAIPIANTESREDUCAOBASEICMS                    CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  CODMENSAGEM1                                   CHAR(     9)  COLLATE ISO8859_1,
  CODMENSAGEM2                                   CHAR(     9)  COLLATE ISO8859_1,
  CODMENSAGEM3                                   CHAR(     9)  COLLATE ISO8859_1,
  FLAGDEDUZICMS                                  CHAR(     1)  COLLATE ISO8859_1,
  FLAGSOMAFRETEBASEICMS                          CHAR(     1)  COLLATE ISO8859_1,
  FLAGSOMASEGUROBASEICMS                         CHAR(     1)  COLLATE ISO8859_1,
  FLAGSOMAOUTRASDESPESASBASEICMS                 CHAR(     1)  COLLATE ISO8859_1,
  FLAGNFPROPRIA                                  CHAR(     1)  COLLATE ISO8859_1,
  FLAGCALCULASUBSTTRIBCUSTO                      CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGINATIVO                                    CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  CODTIPOMOVIMENTODEVOLUCAO                      CHAR(     9)  COLLATE ISO8859_1,
  FLAGDEVOLUCAOCOMPRA                            CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  ALIQICMSFIXA                                NUMERIC( 15, 4),
  FLAGPRIORIDADECFOP                             CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGCUPOMFISCALCONJUGADO                       CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGPIS                                        CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  FLAGSOMAFRETEBASESUBSTTRIB                     CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGCOFINS                                     CHAR(     1) DEFAULT 'S' COLLATE ISO8859_1,
  FLAGDEDUZIPI                                   CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGCALCULACSSL                                CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGCALCULAPIS                                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGSOMAIPIBASEPIS                             CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  ALIQPIS                                     NUMERIC( 15, 4),
  FLAGCALCULACOFINS                              CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGSOMAIPIBASECOFINS                          CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  ALIQCOFINS                                  NUMERIC( 15, 4),
  FLAGCALCULAIRRF                                CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGCALCULAII                                  CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGSOMADESPACESSBASEII                        CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGSOMACOFINSBASEICMS                         CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGSOMAPISBASEICMS                            CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGSOMAIIBASEICMS                             CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  ALIQIRRF                                    NUMERIC( 15, 4),
  VALORMINIMODARF                             NUMERIC( 15, 4),
  ALIQCSLL                                    NUMERIC( 15, 4),
  FLAGIMPORTACAO                                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGVENDACONSUMIDORFINAL                       CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGSOMAIPIBASESUBSTTRIBUTARIA                 CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGSOMAICMS                                   CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FLAGABATEDESCONTOSBASEIPI                      CHAR(     1)  COLLATE ISO8859_1,
 CONSTRAINT PK_TIPOMOVIMENTO PRIMARY KEY (CODTIPOMOVIMENTO)
);
CREATE TABLE TIPOOCORPATRIMONIO 
(
  PK_TIPOOCORRENCIA             SMALLINT         NOT NULL,
  DESCRICAO                      VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  AQUISICAO                 FLAG_SIM_NAO DEFAULT 'N',
  BAIXA                     FLAG_SIM_NAO DEFAULT 'N',
  VENDA                     FLAG_SIM_NAO DEFAULT 'N',
  ENVIOMANUTENCAO           FLAG_SIM_NAO DEFAULT 'N',
  RETORNOMANUTENCAO         FLAG_SIM_NAO DEFAULT 'N',
  TRANSFERENCIA             FLAG_SIM_NAO DEFAULT 'N',
  DOACAO                    FLAG_SIM_NAO DEFAULT 'N',
  EMITIRDOCFISCAL                   CHAR(     1) DEFAULT 'N' COLLATE ISO8859_1,
  FK_TIPODOCUMENTO              SMALLINT,
  DEPRECIACAO               FLAG_SIM_NAO DEFAULT 'N',
  VALORIZACAO               FLAG_SIM_NAO DEFAULT 'N',
 PRIMARY KEY (PK_TIPOOCORRENCIA)
);
update rdb$relation_fields set rdb$description = 'A OCORRENCIA EMITE DOCUMENTO FISCAL?
SIM OU NÃO
PADRAO = ''N''' where rdb$relation_name = 'TIPOOCORPATRIMONIO' and rdb$field_name = 'EMITIRDOCFISCAL';
update rdb$relation_fields set rdb$description = 'SE A OCORRENCIA EMITIR DOC FISCAL, QUAL TIPO DE DOCUMENTO DEVE EMITIR??
' where rdb$relation_name = 'TIPOOCORPATRIMONIO' and rdb$field_name = 'FK_TIPODOCUMENTO';
CREATE TABLE TIPO_CADASTROS 
(
  PK_TIPO_CADASTRO             SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(    20) NOT NULL COLLATE ISO8859_1,
  ATIVO                    FLAG_SIM_NAO ,
 PRIMARY KEY (PK_TIPO_CADASTRO)
);
CREATE TABLE TIPO_DOCUMENTO 
(
  PK_TIPODOCUMENTO             SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
  OBSERVACAO                       BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  DOCFISCAL                FLAG_SIM_NAO DEFAULT 'N',
  USER_INC                USUARIOPADRAO DEFAULT USER,
  USER_ALT                USUARIOPADRAO DEFAULT USER,
  DATA_INC                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
  DATA_ALT                    TIMESTAMP         DEFAULT CURRENT_TIMESTAMP,
 PRIMARY KEY (PK_TIPODOCUMENTO)
);
update rdb$relation_fields set rdb$description = 'SE O TIPO DE DOCUMENTO EH DOCUMENTO FISCAL,
SE FOR ....
O PADRAO EH ''N''' where rdb$relation_name = 'TIPO_DOCUMENTO' and rdb$field_name = 'DOCFISCAL';
CREATE TABLE TIPO_ENDERECO 
(
  PK_TIPO_ENDERECO             SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(    20) NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_TIPO_ENDERECO)
);
CREATE TABLE TIPO_GARANTIA 
(
  PK_TIPO_GARANTIA             SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(    30) NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_TIPO_GARANTIA)
);
CREATE TABLE TIPO_MOVIM_ESTQ 
(
  PK_TIPO_MOVIM_ESTQ               VALORS NOT NULL,
  FK_TIPO_MOVIM_ESTQ               VALORS ,
  DSC_TMOV                 DESCRICAO_30RQ NOT NULL,
  FLAG_TBAIXA        FLAG_TIPO_BAIXA_ESTQ NOT NULL,
  FLAG_TMOV               FLAG_TIPO_SALDO NOT NULL,
  FLAG_OPESTQ               FLAG_OPERACAO NOT NULL,
  FLAG_MVESTQ                FLAG_SIM_NAO ,
  FLAG_OPRSRV               FLAG_OPERACAO NOT NULL,
  FLAG_MVRSRV                FLAG_SIM_NAO ,
  FLAG_OPGRNT               FLAG_OPERACAO NOT NULL,
  FLAG_MVGRNT                FLAG_SIM_NAO ,
  FLAG_TCOD          FLAG_TIPO_CODIGO_PRODUTO NOT NULL,
  FLAG_GENHST                FLAG_SIM_NAO ,
  FLAG_OPQRNT               FLAG_OPERACAO NOT NULL,
  FLAG_MVQRNT                FLAG_SIM_NAO ,
  OPE_ALT                   NOME_OPERADOR ,
  DTHR_ALT                      DATA_HORA ,
  OPE_INC               NOME_OPERADOR_DEF ,
  DTHR_INC                  DATA_HORA_DEF ,
 CONSTRAINT PK_TIPO_MOVIM_ESTQ_1 PRIMARY KEY (PK_TIPO_MOVIM_ESTQ)
);
CREATE TABLE TIPO_PRAZO_ENTREGA 
(
  PK_TIPO_PRAZO_ENTREGA               VALORS NOT NULL,
  DSC_PRZE                    DESCRICAO_30RQ NOT NULL,
  OPE_INC                  NOME_OPERADOR_DEF ,
  DTHR_INC                     DATA_HORA_DEF ,
  OPE_ALT                      NOME_OPERADOR ,
  DTHR_ALT                         DATA_HORA ,
  QTD_PRV                             VALORS ,
 CONSTRAINT PK_TIPO_PRAZO_ENTREGA_1 PRIMARY KEY (PK_TIPO_PRAZO_ENTREGA)
);
CREATE TABLE TIPO_RACA 
(
  CORACA              VARCHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  NORACA              VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE TIPO_STATUS_PEDIDOS 
(
  PK_TIPO_STATUS_PEDIDOS               VALORS NOT NULL,
  DSC_STT                      DESCRICAO_20RQ NOT NULL,
  OPE_INC                   NOME_OPERADOR_DEF ,
  DTHR_INC                      DATA_HORA_DEF ,
  DTHR_ALT                          DATA_HORA ,
  OPE_ALT                       NOME_OPERADOR ,
  FK_TIPO_MOVIM_ESTQ                   VALORS ,
  FK_GRUPOS_MOVIMENTOS                 VALORS ,
  QTD_DAYS_NEXT                        VALORS ,
  FLAG_OPEN                      FLAG_SIM_NAO ,
  FLAG_RECB                      FLAG_SIM_NAO ,
  FLAG_LIB                       FLAG_SIM_NAO ,
  FLAG_CANC                      FLAG_SIM_NAO ,
  FLAG_PROD                      FLAG_SIM_NAO ,
  FLAG_FAT                       FLAG_SIM_NAO ,
  FLAG_LIQ                       FLAG_SIM_NAO ,
 CONSTRAINT PK_TIPO_STATUS_PEDIDOS_1 PRIMARY KEY (PK_TIPO_STATUS_PEDIDOS)
);
CREATE TABLE TRANSP_OCORRENCIA 
(
  ID                       INTEGER,
  DESCRICAO                VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  PROCEDA_COD              INTEGER
);
CREATE TABLE TREINAMENTOS 
(
  ID                              NUMERIC( 10, 0) NOT NULL,
  TEXTO                              BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  INCLUIRPPRA                        CHAR(     1)  COLLATE ISO8859_1,
  TITULO                          VARCHAR(   200)  COLLATE ISO8859_1,
  CABECALHO                       VARCHAR(  1000)  COLLATE ISO8859_1,
  RODAPE                          VARCHAR(   200)  COLLATE ISO8859_1,
  FOTO                            VARCHAR(   200)  COLLATE ISO8859_1,
  VALIDADE                        NUMERIC( 10, 0),
  VALIDADEUN                         CHAR(     1)  COLLATE ISO8859_1,
  IDGRUPO                         NUMERIC( 10, 0),
  IDSUBGRUPO                      NUMERIC( 10, 0),
  INCLUIRCARGOS                      CHAR(     1)  COLLATE ISO8859_1,
  CABECALHORELATORIO              VARCHAR(   100)  COLLATE ISO8859_1,
  CAMINHOFLASH                    VARCHAR(  1500)  COLLATE ISO8859_1,
  DESCRICAO                          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
 CONSTRAINT PK_TREINAMENTOS PRIMARY KEY (ID)
);
CREATE TABLE TREINAMENTOSGRUPOS 
(
  ID                     NUMERIC( 10, 0) NOT NULL,
  DESCRICAO              VARCHAR(   200)  COLLATE ISO8859_1,
 CONSTRAINT PK_TREINAMENTOSGRUPOS PRIMARY KEY (ID)
);
CREATE TABLE TREINAMENTOSSUBGRUPOS 
(
  IDGRUPO                NUMERIC( 10, 0) NOT NULL,
  ID                     NUMERIC( 10, 0) NOT NULL,
  DESCRICAO              VARCHAR(   200)  COLLATE ISO8859_1,
 CONSTRAINT PK_TREINAMENTOSSUBGRUPOS PRIMARY KEY (IDGRUPO, ID)
);
CREATE TABLE UF 
(
  IDUF                           UF NOT NULL,
  NOME                    DESCRICAO NOT NULL,
  NATURALIDADE            DESCRICAO ,
  CAPITAL                 DESCRICAO ,
  REGIAO                   SITUACAO ,
  CODIGOIBGE               SMALLINT,
 CONSTRAINT PK_UF_1 PRIMARY KEY (IDUF)
);
CREATE TABLE UF_FAIXACEP 
(
  UF                      CHAR(     2) CHARACTER SET NONE  COLLATE NONE,
  INICIAL              VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  FINAL                VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE
);
CREATE TABLE UNIDADES 
(
  PK_UNIDADES               VALORS NOT NULL,
  DESCRICAO         DESCRICAO_30RQ NOT NULL,
  FRACIONADO          FLAG_SIM_NAO DEFAULT 'N',
  SIGLA            CODIGO_UNIDADES NOT NULL,
  OPE_INC        NOME_OPERADOR_DEF DEFAULT user,
  DTHR_INC           DATA_HORA_DEF DEFAULT current_timestamp,
  OPE_ALT            NOME_OPERADOR ,
  DTHR_ALT               DATA_HORA ,
  QUANTIDADE          FLAG_SIM_NAO DEFAULT 'N',
  ALTURA              FLAG_SIM_NAO DEFAULT 'N',
  LARGURA             FLAG_SIM_NAO DEFAULT 'N',
  COMPRIMENTO         FLAG_SIM_NAO DEFAULT 'N',
  UNIDADE                     FLAG ,
  TEMPO               FLAG_SIM_NAO DEFAULT 'N',
 CONSTRAINT PK_UNIDADES_1 PRIMARY KEY (PK_UNIDADES)
);
CREATE TABLE UNIDADE_TESTE 
(
  CODIGO               INTEGER         NOT NULL,
  UNIDADE              VARCHAR(    25) CHARACTER SET NONE  COLLATE NONE,
  ESPECIE              VARCHAR(    75) CHARACTER SET NONE  COLLATE NONE,
 CONSTRAINT PK_UNIDADE_TESTE_1 PRIMARY KEY (CODIGO)
);
CREATE TABLE USUARIOS 
(
  FK_EMPRESAS                       SMALLINT         DEFAULT 1 NOT NULL,
  FK_FILIAIS                        SMALLINT         DEFAULT 1 NOT NULL,
  PK_USUARIOS                       SMALLINT         NOT NULL,
  FK_FUNCIONARIOS                   SMALLINT         NOT NULL,
  NOMEUSUARIO                        VARCHAR(    20) NOT NULL COLLATE ISO8859_1,
  SENHAUSUARIO                       VARCHAR(    20) NOT NULL COLLATE ISO8859_1,
  MAT_SOLICITAMATERIAIS         FLAG_SIM_NAO DEFAULT 'N',
  MAT_APROVASOLICITACAO         FLAG_SIM_NAO DEFAULT 'N',
  MAT_REQUISITAMATERIAL         FLAG_SIM_NAO DEFAULT 'N',
  FK_DEPARTAMENTOS                  SMALLINT         DEFAULT 1 NOT NULL,
  FK_SETORES                        SMALLINT         DEFAULT 1 NOT NULL,
  FK_CENTROCUSTO                     VARCHAR(    10)  COLLATE ISO8859_1,
  FK_COMPUTADOR                      VARCHAR(    20)  COLLATE ISO8859_1,
  MAT_APROVAREQUISICAO          FLAG_SIM_NAO DEFAULT 'N',
  MENU_ACESSACADASTROS          FLAG_SIM_NAO ,
  MENU_ACESSAPRODUCAO           FLAG_SIM_NAO DEFAULT 'N',
  MENU_ACESSAMATERIAIS          FLAG_SIM_NAO DEFAULT 'N',
  MENU_ACESSAFINANCEIRO         FLAG_SIM_NAO DEFAULT 'N',
  MENU_CONTROLADORIA            FLAG_SIM_NAO DEFAULT 'N',
  MENU_LOGISTICA                FLAG_SIM_NAO DEFAULT 'N',
  MENU_SEGTRABALHO              FLAG_SIM_NAO DEFAULT 'N',
  MENU_RECHUMANOS               FLAG_SIM_NAO DEFAULT 'N',
  NIVELUSUARIO                      SMALLINT         DEFAULT 1 NOT NULL,
 PRIMARY KEY (PK_USUARIOS)
);
update rdb$relation_fields set rdb$description = 'PODE SOLICITAR MATERIAIS AOS DIVERSOS ALMOXARIFADOS' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MAT_SOLICITAMATERIAIS';
update rdb$relation_fields set rdb$description = 'PODE APROVAR SOLICITAÇÃO DE MATERIAL' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MAT_APROVASOLICITACAO';
update rdb$relation_fields set rdb$description = 'PODE REQUISITAR MATERIAL AO DEPTO DE COMPRAS' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MAT_REQUISITAMATERIAL';
update rdb$relation_fields set rdb$description = 'SETOR DO QUE FAZ PARTE O USUARIO' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'FK_SETORES';
update rdb$relation_fields set rdb$description = 'CENTRO DE CUSTO AO QUAL PERTENCE O USUARIO' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'FK_CENTROCUSTO';
update rdb$relation_fields set rdb$description = 'COMPUTADOR QUE O USUARIO  NORMALMENTE USA
' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'FK_COMPUTADOR';
update rdb$relation_fields set rdb$description = 'PODE APROVAR REQUISIÇOES DE COMPRAS' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MAT_APROVAREQUISICAO';
update rdb$relation_fields set rdb$description = 'O USUARIO PODE ACESSAR MENU DE CADASTROS
' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MENU_ACESSACADASTROS';
update rdb$relation_fields set rdb$description = 'O USUARIO ACESSA MENU DE PRODUCAO' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MENU_ACESSAPRODUCAO';
update rdb$relation_fields set rdb$description = 'USUARIO ACESSA MENU DE MATERIAIS' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MENU_ACESSAMATERIAIS';
update rdb$relation_fields set rdb$description = 'USUARIO ACESSA MENU FINANCEIRO' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MENU_ACESSAFINANCEIRO';
update rdb$relation_fields set rdb$description = 'ACESSA MENU CONTROLADORIA' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MENU_CONTROLADORIA';
update rdb$relation_fields set rdb$description = 'ACESSA MENU LOGISTICA' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MENU_LOGISTICA';
update rdb$relation_fields set rdb$description = 'ACESSA MENU SEGURANCA DO TRABALHO' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MENU_SEGTRABALHO';
update rdb$relation_fields set rdb$description = 'ACESSA MENU RECURSOS HUMANOS' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'MENU_RECHUMANOS';
update rdb$relation_fields set rdb$description = 'NIVEL DE USUARIO
1 = NORMAL COM POUCOS PRIVILEGIOS
5 = NIVEL MEDIO - COMRADORES, APROVADORES, ENCARREGADOS, SETOR MEDICO, SEG. TRABALHO ETC
9 = ADMINISTRADOR - TODOS OS PRIVILEGIOS
PADRAO = 1' where rdb$relation_name = 'USUARIOS' and rdb$field_name = 'NIVELUSUARIO';
CREATE TABLE VACINAS 
(
  ID                           NUMERIC( 10, 0) NOT NULL,
  NOME                         VARCHAR(   100)  COLLATE ISO8859_1,
  NRODOSES                     NUMERIC( 10, 0),
  SEGUNDADOSE                  NUMERIC( 10, 0),
  UNSEGUNDADOSE                   CHAR(     1)  COLLATE ISO8859_1,
  TERCEIRADOSE                 NUMERIC( 10, 0),
  UNTERCEIRADOSE                  CHAR(     1)  COLLATE ISO8859_1,
  QUARTADOSE                   NUMERIC( 10, 0),
  UNQUARTADOSE                    CHAR(     1)  COLLATE ISO8859_1,
  QUINTADOSE                   NUMERIC( 10, 0),
  UNQUINTADOSE                    CHAR(     1)  COLLATE ISO8859_1,
  PERIODICIDADE                NUMERIC( 10, 0),
  UNPERIODICIDADE                 CHAR(     1)  COLLATE ISO8859_1,
  EXIGENCIA                       CHAR(     1)  COLLATE ISO8859_1,
  FINALIDADE                   VARCHAR(  2000)  COLLATE ISO8859_1,
  NRODOSESREFORCO              NUMERIC( 10, 0),
 CONSTRAINT PK_VACINAS PRIMARY KEY (ID)
);
CREATE TABLE VEICITEM_TESTE 
(
  CODVEICITEM                INTEGER,
  DESCRICAO                  VARCHAR(    30) CHARACTER SET NONE  COLLATE NONE,
  UNIDADEMEDIDA              VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CUSTOUNITARIO              NUMERIC( 15, 2),
  TIPOITEM                   VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  ESTOQUEATUAL               INTEGER,
  ESTDISPONIVEL              INTEGER
);
CREATE TABLE VEICMOVIMENTO_TESTE 
(
  EMPRESA                  SMALLINT         NOT NULL,
  FILIAL                   SMALLINT         NOT NULL,
  PLACAVEICULO                 CHAR(     7) CHARACTER SET NONE NOT NULL COLLATE NONE,
  DATASAIDA               TIMESTAMP         DEFAULT CURRENT_TIMESTAMP  NOT NULL,
  KMSAIDA                   NUMERIC( 15, 4),
  DATAENTRADA             TIMESTAMP,
  KMENTRADA                 NUMERIC( 15, 4),
  MOTORISTA                 VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  DESTINO                   VARCHAR(   100) CHARACTER SET NONE  COLLATE NONE,
  OBSERVACAO                   BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  SEQUENCIAL                INTEGER,
 CONSTRAINT PK_VEICMOVIMENTO_TESTE_1 PRIMARY KEY (EMPRESA, FILIAL, PLACAVEICULO, DATASAIDA)
);
CREATE TABLE VEICULOS 
(
  ID                                INTEGER         NOT NULL,
  CODIGO                            INTEGER         NOT NULL,
  EMPRESA                           INTEGER,
  DESCRICAO                         VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  PLACA                             VARCHAR(     7) CHARACTER SET WIN1252  COLLATE WIN1252,
  MOTORISTA                         INTEGER,
  ANO                               VARCHAR(     5) CHARACTER SET WIN1252  COLLATE WIN1252,
  COR                               VARCHAR(    30) CHARACTER SET WIN1252  COLLATE WIN1252,
  MODELO                            VARCHAR(    30) CHARACTER SET WIN1252  COLLATE WIN1252,
  CIDADE                            VARCHAR(    30) CHARACTER SET WIN1252  COLLATE WIN1252,
  ESTADO                               CHAR(     2) CHARACTER SET WIN1252  COLLATE WIN1252,
  RENAVAN                           VARCHAR(    30) CHARACTER SET WIN1252  COLLATE WIN1252,
  CHASSI                            VARCHAR(    60) CHARACTER SET WIN1252  COLLATE WIN1252,
  FIPE                              VARCHAR(    60) CHARACTER SET WIN1252  COLLATE WIN1252,
  OBS                                  BLOB SUB_TYPE 1 SEGMENT SIZE 80 CHARACTER SET WIN1252,
  SEGURADORA                        VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  CORRETORA                         VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  APOLICE                           VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  CI                                VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  VIGDATA1                             DATE,
  VIGDATA2                             DATE,
  VIGHORA1                          VARCHAR(     5) CHARACTER SET WIN1252  COLLATE WIN1252,
  VIGHORA2                          VARCHAR(     5) CHARACTER SET WIN1252  COLLATE WIN1252,
  COLISAO                           NUMERIC( 15, 3),
  INCENDIO                          NUMERIC( 15, 3),
  ROUBO                             NUMERIC( 15, 3),
  RAIO                              NUMERIC( 15, 3),
  EXPLOSAO                          NUMERIC( 15, 3),
  OUTR                              VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  OUTRVAL                           NUMERIC( 15, 3),
  DANMATER                          NUMERIC( 15, 3),
  DANCORP                           NUMERIC( 15, 3),
  TERCEIROS                         NUMERIC( 15, 3),
  OUTRSEG                              BLOB SUB_TYPE 1 SEGMENT SIZE 80 CHARACTER SET WIN1252,
  VALSEGTOT                         NUMERIC( 15, 3),
  AQUISICAO                            DATE,
  INFAQUI                              BLOB SUB_TYPE 1 SEGMENT SIZE 80 CHARACTER SET WIN1252,
  VENDA                                DATE,
  INFVENDA                             BLOB SUB_TYPE 1 SEGMENT SIZE 80 CHARACTER SET WIN1252,
  ATIVO                                CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  TEMSEG                               CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  TIPO                              VARCHAR(    60) CHARACTER SET WIN1252  COLLATE WIN1252,
  TIPO2                                CHAR(     1) CHARACTER SET WIN1252  COLLATE WIN1252,
  CODPRIN                           INTEGER,
  HODATUAL                          NUMERIC( 15, 3),
  VEI_PROP                          VARCHAR(    60) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEI_END                           VARCHAR(    60) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEI_BAIRRO                        VARCHAR(    40) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEI_CIDADE                        VARCHAR(    50) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEI_UF                               CHAR(     2) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEI_CNPJCPF                       VARCHAR(    25) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEI_INSSPROP                      VARCHAR(    30) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEI_FONE                          VARCHAR(    20) CHARACTER SET WIN1252  COLLATE WIN1252,
  CIDADES_GERAL_ID                  INTEGER,
  VEI_CIDADES_GERAL_ID              INTEGER,
  VEI_RG                            VARCHAR(    20) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEI_UF_RG                            CHAR(     2) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEI_CONTATO                       VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  QUANTIDADE_EIXOS                  INTEGER,
  TAMANHO_CARROCERIA                NUMERIC( 15, 2),
  ID_LOTACAO                        INTEGER,
  CARGA_UTIL                        NUMERIC( 15, 3),
  PROP_CEP                             CHAR(     8) CHARACTER SET WIN1252  COLLATE WIN1252,
  PROP_ORGAO_EXP                    VARCHAR(    30) CHARACTER SET WIN1252  COLLATE WIN1252,
  TARA                              NUMERIC( 15, 3),
  RASTREAMENTO                      VARCHAR(   100) CHARACTER SET WIN1252  COLLATE WIN1252,
  VEI_COD_IBGE                      INTEGER,
  COD_IBGE                          INTEGER,
  VELOCIDADEMAXIMA                 SMALLINT,
  QUANTUNITIZADORES                SMALLINT         DEFAULT 12,
  FK_GRUPOSVEICULOS                SMALLINT,
  CUBAGEMMAXIMA                     DECIMAL( 12, 2),
 CONSTRAINT PK_VEICULOS_1 PRIMARY KEY (ID)
);
CREATE TABLE VEICULOS_TESTE 
(
  EMPRESA                       SMALLINT         DEFAULT 1 NOT NULL,
  FILIAL                        SMALLINT         DEFAULT 1 NOT NULL,
  PLACAVEICULO                      CHAR(     7) CHARACTER SET NONE NOT NULL COLLATE NONE,
  DESCRICAO                      VARCHAR(   100) CHARACTER SET NONE NOT NULL COLLATE NONE,
  MARCA                          VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  MODELO                         VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  ANOFABRICAMODELO               VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CORPREDOMINANTE                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  RENAVAM                        VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CHASSI                         VARCHAR(    20) CHARACTER SET NONE  COLLATE NONE,
  DATAAQUISICAO                     DATE,
  NUMPATRIMONIO                  VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  COMBUSTIVEL                    VARCHAR(    20) CHARACTER SET NONE DEFAULT 'GASOLINA' COLLATE NONE,
  CENTROCUSTO                    VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  GRUPOPATRIMONIO                VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODDEPTO                       VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  CODSETOR                       VARCHAR(     1) CHARACTER SET NONE  COLLATE NONE,
  CODSECAO                       VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  ULTIMAREVISAO                     DATE,
  PROXIMAREVISAO                    DATE,
  ULTIMOCHECKLIST                   DATE,
  CHECKLISTPOR                   VARCHAR(    10) CHARACTER SET NONE  COLLATE NONE,
  ULTIMAMANUTENCAO                  DATE,
  KILOMETRAGEMATUAL              NUMERIC( 15, 4),
  VEICULOFLEX                       CHAR(     3) CHARACTER SET NONE DEFAULT 'SIM' COLLATE NONE,
  VALORAQUISICAO                 NUMERIC( 15, 2),
  TIPOMODELO                     VARCHAR(    20) CHARACTER SET NONE DEFAULT 'PASSAGEIRO' COLLATE NONE,
  QUANTEIXOS                    SMALLINT         DEFAULT 2,
  ARORODAS                      SMALLINT         DEFAULT 13,
  NAEMPRESA                      VARCHAR(     3) CHARACTER SET NONE DEFAULT 'SIM' COLLATE NONE,
 CONSTRAINT PK_VEICULOS_TESTE_1 PRIMARY KEY (EMPRESA, FILIAL, PLACAVEICULO)
);
update rdb$relation_fields set rdb$description = 'PASSAGEIRO
CAMINHONETA
FURGAO
CAM TOCO CARROCERIA
CAM TRUCK CARROCERIA
CAM TOCO BAU
CAM TOCO CARROCERIA' where rdb$relation_name = 'VEICULOS_TESTE' and rdb$field_name = 'TIPOMODELO';
update rdb$relation_fields set rdb$description = 'VEICULO DENTRO DA EMPRESA

SIM
NAO' where rdb$relation_name = 'VEICULOS_TESTE' and rdb$field_name = 'NAEMPRESA';
CREATE TABLE VEN_REPR_CIDADES 
(
  FK_REPRESENTANTE              INTEGER         NOT NULL,
  FK_CIDADES                    INTEGER         NOT NULL,
  DATAINICIO                       DATE,
 PRIMARY KEY (FK_REPRESENTANTE, FK_CIDADES)
);
CREATE TABLE VIEUCLOS_GRUPOS 
(
  PK_GRUPOVEICULOS             SMALLINT         NOT NULL,
  DESCRICAO                     VARCHAR(   100) NOT NULL COLLATE ISO8859_1,
 PRIMARY KEY (PK_GRUPOVEICULOS)
);
CREATE TABLE PRODUTOS_FISCAL 
(
  FK_EMPRESAS              SMALLINT         NOT NULL,
  FK_FILIAIS               SMALLINT         NOT NULL,
  FK_PRODUTOS               INTEGER         NOT NULL,
  ICMS_ALICOTA              DECIMAL(  6, 2),
 CONSTRAINT PK_PRODUTOS_FISCAL PRIMARY KEY (FK_EMPRESAS, FK_FILIAIS, FK_PRODUTOS)
);
update rdb$relation_fields set rdb$description = 'Alíq. ICMS – Alíquota do Imposto sobre Circulação de Mercadorias e Serviços, que atribui o percentual de ICMS utilizado nas operações realizadas com este produto, caso este campo não seja atribuído o ambiente LIVROS FISCAIS irá utilizar a configuração padrão do Protheus.' where rdb$relation_name = 'PRODUTOS_FISCAL' and rdb$field_name = 'ICMS_ALICOTA';
/*******************************************************************************
 * Indices
 * -------
 * Extracted at 11/08/2011 08:34:16
 ******************************************************************************/

CREATE ASC INDEX AGENCIACORREIO_INDEX01 ON AGENCIACORREIO (CODIGO);
CREATE ASC INDEX AGENCIACORREIO_INDEX02 ON AGENCIACORREIO (NOME);
CREATE ASC INDEX ALMOXARIFADOS_IDX1 ON ALMOXARIFADOS (NOMEALMOXARIFADO);
CREATE ASC INDEX AREA_DESCR ON MAN_AREAEXEC (AREA_DESCR);
CREATE ASC INDEX BANCOS_AGENCIAS_IDX1 ON FIN_BANCOS_AGENCIAS (DSC_AGE);
CREATE ASC INDEX BANCOS_IDX1 ON FIN_BANCOS (BANCONOME);
CREATE ASC INDEX BOLETODETALHADO_IDX1 ON BOLETODETALHADO (BOLETO);
CREATE ASC INDEX BRANCO_INI ON MAN_PESOS (BRANCO_INI);
CREATE ASC INDEX BYDESCRIPTION ON PROD_FARMA_TESTE (DESCRIPTION);
CREATE ASC INDEX CADASTRO_IDX1 ON CADASTROS (RAZAOSOCIAL);
CREATE ASC INDEX CALE_CERTI ON MAN_CALIB_APARELHOS (CALE_CERTI);
CREATE ASC INDEX CD_CAMPO ON MAN_PARAMHELP (CD_CAMPO);
CREATE ASC INDEX CELULAS_DESCRICAO_A ON CELULAS (DESCRICAO);
CREATE ASC INDEX CEP0_IDX1 ON CEP0 (DESCRICAO);
CREATE ASC INDEX CEP1_IDX1 ON CEP1 (DESCRICAO);
CREATE ASC INDEX CEP2_IDX1 ON CEP2 (DESCRICAO);
CREATE ASC INDEX CEP3_IDX1 ON CEP3 (DESCRICAO);
CREATE ASC INDEX CEP_IDX ON LOGRADOURO (CEP);
CREATE ASC INDEX CIDADES_IDX1 ON CIDADES (NOMECIDADE);
CREATE ASC INDEX CIDADES_IDX2 ON CIDADES (UF, NOMECIDADE);
CREATE ASC INDEX CLIENTES_IDX1 ON CLIENTES (RAZAOSOCIAL);
CREATE ASC INDEX CLIENTES_IDX2 ON CLIENTES (APELIDO);
CREATE UNIQUE ASC INDEX CLIENTES_IDX3 ON CLIENTES (CNPJ);
CREATE ASC INDEX CLIENTES_IDX4 ON CLIENTES (TELEFONE);
CREATE ASC INDEX CLIENTES_IDX5 ON CLIENTES (EMAIL);
CREATE ASC INDEX CLS_CODIGO ON MAN_EQUIP_CLASSE (CLS_CODIGO);
CREATE ASC INDEX CLS_DESCRI ON MAN_EQUIP_CLASSE (CLS_DESCRI);
CREATE UNIQUE DESC INDEX CNJ0 ON NATUREZAJURIDICA (CD_NJ);
ALTER INDEX CNJ0 INACTIVE;
CREATE ASC INDEX CODFISINDEX1 ON FIS_CODFISCFOP (COD, DIVIS);
CREATE ASC INDEX CODIGO ON MAN_FERRAMENTAS (CODIGO);
CREATE ASC INDEX CODIGODEBARRAS_IDX1 ON CODIGODEBARRAS (CODIGOPRODUTO);
CREATE ASC INDEX COD_FERRAM ON MAN_FERRAMEN_FUNC (COD_FERRAM);
CREATE ASC INDEX COD_FUNC ON MAN_FERRAMEN_FUNC (COD_FUNC);
CREATE ASC INDEX COD_PROGRA ON MAN_LUBRIFICACAO (COD_PROGRA);
CREATE ASC INDEX COMP_COMPRADORE_NOMECOMPRADOR_A ON COMP_COMPRADORES (NOMECOMPRADOR);
CREATE ASC INDEX COMP_GRUPOSCOMPRADO_DESCRICAO_A ON COMP_GRUPOSCOMPRADORES (DESCRICAO);
CREATE ASC INDEX CONT_GRPATRIMO_DESCRICAO_A ON CONT_GRPATRIMO (DESCRICAO);
CREATE ASC INDEX COTACAOCOMPRA_IDX1 ON MAT_COTACAOCOMPRA (DESCRICAO);
CREATE ASC INDEX DATA ON MAN_PECA_COTA (DATA);
ALTER INDEX DATA INACTIVE;
CREATE ASC INDEX DATA_INI ON MAN_PROGDIARIA (DATA_INI);
CREATE ASC INDEX DEPOSITOS_DESCRICAO_A ON DEPOSITOS (DESCRICAO);
CREATE ASC INDEX DESCRICAO ON MAN_FICHATECNICA (DESCRICAO);
CREATE UNIQUE DESC INDEX EMPRESAS0 ON EMPRESAS_TESTE (CODIGO);
ALTER INDEX EMPRESAS0 INACTIVE;
CREATE ASC INDEX EMPRESA_IDX1 ON EMPRESA (RAZAOSOCIAL);
CREATE ASC INDEX ENDERECOS_INDEX01 ON ENDERECOS (PK_ENDERECO);
CREATE ASC INDEX ENDERECOS_INDEX02 ON ENDERECOS (CEP);
CREATE ASC INDEX EQUIPAMENTOS_DESCRICAO_A ON EQUIPAMENTOS (DESCRICAO);
CREATE ASC INDEX EQUI_CODIG ON MAN_EQUIP_DESENHOS (EQUI_CODIG);
CREATE UNIQUE DESC INDEX ESTATUS ON MAN_CALIB_CERT_RESULT (ESTATUS);
ALTER INDEX ESTATUS INACTIVE;
CREATE ASC INDEX EXTINTORES_INDEX01 ON EXTINTORES (DESCRICAO);
CREATE ASC INDEX FCALE_ITEM ON MAN_CALIB_FICHA (FCALE_ITEM);
CREATE UNIQUE ASC INDEX FERRAMCOMPL_IDX1 ON MAN_FERRAMCOMPL (CODIFICACAO);
CREATE ASC INDEX FIN_ALINEA_CHEQUES_INDEX01 ON FIN_ALINEA_CHEQUES (DESCRICAO);
CREATE ASC INDEX FIN_BANCOS_BOLETOS_IDX1 ON FIN_BANCOS_BOLETOS (NOME);
CREATE ASC INDEX FIN_CARTAOCREDITO_INDEX01 ON FIN_CARTAOCREDITO (NOMECARTAOCREDITO);
CREATE ASC INDEX FIN_CONDPAGTO_ITEM_INDEX01 ON FIN_CONDPAGTO_ITEM (FK_EMPRESAS, FK_FILIAIS, FK_CONDICAOPAGTO, PK_CONDPAGTO_ITEM);
CREATE ASC INDEX FIN_INDICESFINANCEIROS_INDEX01 ON FIN_INDICESFINANCEIROS (DESCRICAO);
CREATE ASC INDEX FIS_ATIVIDADES_SERVICOS_INDEX01 ON FIS_ATIVIDADES_SERVICOS (DESCRICAO);
CREATE ASC INDEX FIS_PLANOCONTASSUB_DESCRICAO_A ON FIS_PLANOCONTASSUB (DESCRICAO);
CREATE ASC INDEX FIS_PLANOCONTAS_CLASSIFCONTAB_A ON FIS_PLANOCONTAS (CLASSIFCONTAB);
CREATE ASC INDEX FIS_PLANOCONTAS_DESCRICAO_A ON FIS_PLANOCONTAS (DESCRICAO);
CREATE ASC INDEX FIS_PLANOCONTAS_NOMEFANTASIA_A ON FIS_PLANOCONTAS (NOMEFANTASIA);
CREATE ASC INDEX FIS_TABELANCM_DESCRICAO_A ON FIS_TABELANCM (DESCRICAO);
CREATE ASC INDEX FORNECEDORES_IDX1 ON FORNECEDORES (RAZAOSOCIAL);
CREATE ASC INDEX FORNECEDORES_IDX2 ON FORNECEDORES (APELIDO);
CREATE ASC INDEX FORNECEDOR_IDX1 ON FORNSIGMA (FOR_DESCRI);
CREATE ASC INDEX FORNECEDOR_IDX2 ON FORNSIGMA (FOR_FONE);
CREATE ASC INDEX FORNECEDOR_IDX3 ON FORNSIGMA (FOR_CGC);
CREATE ASC INDEX FOR_CODIG ON FORNSIGMA (FOR_CODIGO);
CREATE ASC INDEX FOR_CODIGO ON MAN_EQUI_FORNECEDOR (FOR_CODIGO);
CREATE ASC INDEX FOR_CODIGO1 ON MAN_GARANTIAS (FOR_CODIGO);
CREATE UNIQUE DESC INDEX GPSCODPG0 ON RH_GPSCODPG (CODIGO);
ALTER INDEX GPSCODPG0 INACTIVE;
CREATE ASC INDEX GRP_CODIGO1 ON MAN_FICHATEC_CONJ (GRP_CODIGO);
CREATE ASC INDEX GRP_CODIGO5 ON MAN_FICHATEC_MAQUINAS (GRP_CODIGO);
CREATE ASC INDEX GRP_CODIGO7 ON MAN_FICHATEC_TAG (GRP_CODIGO);
CREATE ASC INDEX HORASTRAB_IDX1 ON MAN_HORASTRABALHADAS (OS_CODIGO);
CREATE ASC INDEX HT_DATA1 ON MAN_HORASTRABDIA (HT_DATA);
CREATE ASC INDEX IBE$LOG_BLOB_FIELDS_IDX1 ON IBE$LOG_BLOB_FIELDS (LOG_TABLES_ID);
CREATE ASC INDEX IBE$LOG_FIELDS_IDX1 ON IBE$LOG_FIELDS (LOG_TABLES_ID);
CREATE ASC INDEX IBE$LOG_KEYS_IDX1 ON IBE$LOG_KEYS (LOG_TABLES_ID);
CREATE ASC INDEX ICALE_CERT ON MAN_CALIB_AUXLEITURA (CALE_CERTI);
CREATE ASC INDEX ICHECK_COD ON MAN_CHECKLIST_PROGRAMACAO (CHECK_COD);
CREATE ASC INDEX IDATA ON MAN_PROG_PARADAS (DATA);
CREATE UNIQUE ASC INDEX IDXPONTO_DIGITAIS001 ON RH_PONTOS_DIGITAIS (FK_EMPRESAS, FK_FILIAIS, FK_FUNCIONARIOS, TIPODEDO, FK_LEITORDIGITAL);
CREATE ASC INDEX IDXSIMPLES_EMPRESA001 ON FIS_SIMPLES_EMPRESA (FK_EMPRESAS);
CREATE ASC INDEX IDXSIMPLES_EMPRESA002 ON FIS_SIMPLES_EMPRESA (FK_FILIAIS);
CREATE ASC INDEX IDXSIMPLES_EMPRESA004 ON FIS_SIMPLES_EMPRESA (DATA);
CREATE ASC INDEX IDXTAB_FPAS001 ON RH_TABELA_FPAS (PK_CODIGOFPAS);
CREATE ASC INDEX IDXTAB_HORARIOS001 ON RH_TABELA_HORARIOS (PK_HORARIOS);
CREATE ASC INDEX IDX_ACOMPANHEMENTO ON MAN_ACOMPANHAMENTO (OS_CODIGO);
CREATE ASC INDEX IDX_CIDADE_NOMECIDADE ON CIDADE (NOMECIDADE);
CREATE ASC INDEX IDX_CONT_PATRIMONIO_1 ON CONT_PATRIMONIO (NUMPATRIMONIO);
CREATE ASC INDEX IDX_CONT_PATRIMONIO_2 ON CONT_PATRIMONIO (DESCRICAO, DATAAQUISICAO);
CREATE ASC INDEX IDX_CONT_PAT_OCOR_1 ON CONT_PAT_OCOR (EMPRESA, FILIAL, DATAOCORRENCIA, CODOCORRENCIA);
CREATE UNIQUE DESC INDEX IDX_FIN_VENCTOIMPOSTOS_1 ON FIS_VENCTOIMPOSTOS (COD, NUM, DTFIAP);
ALTER INDEX IDX_FIN_VENCTOIMPOSTOS_1 INACTIVE;
CREATE ASC INDEX IDX_GRMATERIAL ON GRMATERIAL (DESCRICAO);
CREATE UNIQUE ASC INDEX IDX_GRPATRIMO ON PATRIMONIO_GRUPOS (DESCRICAO);
CREATE ASC INDEX IDX_HORATRAB ON MAN_HORASTRABALHADAS (OS_CODIGO, HT_DATA);
CREATE ASC INDEX IDX_PRODUTOSSNGPC_1 ON PRODUTOSSNGPC (FORNECEDOR);
CREATE ASC INDEX IDX_PRODUTOSSNGPC_2 ON PRODUTOSSNGPC (SECAO);
CREATE UNIQUE DESC INDEX IDX_PRODUTOS_CODIGOS_01 ON PRODUTOS_CODIGOS (COD_REF, FLAG_TCODE);
ALTER INDEX IDX_PRODUTOS_CODIGOS_01 INACTIVE;
CREATE ASC INDEX IDX_PRODUTOS_PECAS_HIST_01 ON PRODUTOS_PECAS_HISTORICOS (COD_REF, MAJ_VER, MIN_VER);
CREATE ASC INDEX IDX_PRODUTOS_VENDAS_02 ON PRODUTOS_VENDAS (FK_PRODUTOS, FK_LINHAS);
CREATE UNIQUE ASC INDEX IDX_TIPOLOGRADOURO1 ON TIPOLOGRADOUROS (CODIGO);
CREATE ASC INDEX IEQUI_CODI ON CONT_HOSTORICOPATRIMONIO (EQUI_CODIG);
CREATE ASC INDEX IFUNCI_COD ON FUNCIONARIOS_TESTE (FUNCI_CODI);
CREATE ASC INDEX IGRP_CODIG ON MAN_FICHATEC_CAMPOS (FK_FAMILIAS);
CREATE ASC INDEX ILEG_CODIG ON MAN_CHECKLIST_LEGENDAS (LEG_CODIGO);
CREATE ASC INDEX ILEG_DESCR ON MAN_CHECKLIST_LEGENDAS (LEG_DESCRI);
CREATE ASC INDEX ILUB_CODIG ON MAT_LUBRIFICANTES (LUB_CODIGO);
CREATE ASC INDEX INOME3 ON FIN_BOLETOMSG (NOME);
CREATE ASC INDEX INSUMOS_IDX1 ON PROD_INSUMOS (INSUMO);
CREATE ASC INDEX INSUMOS_IDX2 ON PROD_INSUMOS (LISTA);
CREATE ASC INDEX IORDEM ON MAN_SERVICOS (ORDEM);
CREATE ASC INDEX IPEND_CODI ON MAN_PENDENCIAS (PEND_CODIG);
CREATE ASC INDEX IPNTS_CODI ON MAN_LUBRIF_PONTOS (PNTS_CODIG);
CREATE ASC INDEX IPROC_CODI ON MAN_PROCESSOS (PROC_CODIG);
CREATE ASC INDEX IPRODUTO ON PRODUTOSSNGPC (PRODUTO);
CREATE ASC INDEX ISERV_CODI ON MAN_SERVICOS1 (SERV_CODIG);
CREATE ASC INDEX ISET_CODIG ON MAN_SETORES (SET_CODIGO);
CREATE ASC INDEX ITEM_CODIG ON MAN_CHECKLIST_ITENS (ITEM_CODIG);
CREATE ASC INDEX ITEM_CODIG2 ON MAN_FICHATEC_MAQUINAS (ITEM_CODIG);
CREATE ASC INDEX ITEM_CODIG3 ON MAN_FICHATEC_TAG (ITEM_CODIG);
CREATE ASC INDEX ITEM_CODIG4 ON MAN_FICHATECNICA (PK_FICHATECNICA);
CREATE ASC INDEX IVENCIMENTO1 ON BOLETODETALHADO (VENCIMENTO);
CREATE ASC INDEX IXITEM_ORD2 ON MAN_FICHATEC_MAQUINAS (ITEM_ORDEM);
CREATE ASC INDEX IXITEM_ORD3 ON MAN_FICHATEC_TAG (ITEM_ORDEM);
CREATE ASC INDEX I_ST_ACIDENTESSUBGRUPOS_ ON ST_ACIDENTESSUBGRUPOS (DESCRICAO);
CREATE ASC INDEX LABORATORIOS_IDX1 ON FORN_LABORATORIOS (NOME);
CREATE UNIQUE DESC INDEX LIMITEICMS0 ON LIMITEICMS (ANO, MES, SEQ);
ALTER INDEX LIMITEICMS0 INACTIVE;
CREATE ASC INDEX LOCALESTOQUEENDEREC_DESCRICAO_A ON LOCALESTOQUEENDERECOS (DESCRICAO);
CREATE ASC INDEX LOCALESTOQUE_DESCRICAO_A ON LOCALESTOQUE (DESCRICAO);
CREATE ASC INDEX LOG_ROTAS_INDEX01 ON LOG_ROTAS (DESCRICAO);
CREATE ASC INDEX MAN_CAUSAS_INDEX01 ON MAN_CAUSAS (DESCRICAO);
CREATE ASC INDEX MAN_CHECKLIST_INDEX01 ON MAN_CHECKLIST (DESCRICAO);
CREATE ASC INDEX MAN_EQUIPES_FUNC_INDEX01 ON MAN_EQUIPES_FUNC (FK_EQUIPES, PK_EQUIPES_FUNC);
CREATE ASC INDEX MAN_FAMILIAS_NEW_INDEX01 ON MAN_FAMILIAS_NEW (FAM_DESCRICAO);
CREATE UNIQUE ASC INDEX MAN_FAMILIA_NORMAS_INDEX01 ON MAN_FAMILIA_NORMAS (FK_FAMILIAS, FK_NORMAS, KF_FAM_NORMAS);
CREATE ASC INDEX MAN_INSPECAO_N_INDEX01 ON MAN_INSPECAO_N (DESCRICAO);
CREATE ASC INDEX MAN_ORIGEM_NEW_INDEX01 ON MAN_ORIGEM_NEW (ORIGEM_DESCRICAO);
CREATE ASC INDEX MAN_PRIORIDADE_N_INDEX01 ON MAN_PRIORIDADE_N (DESCRICAO);
CREATE ASC INDEX MAN_SERVICOSPADRAO_INDEX01 ON MAN_SERVICOSPADRAO (DESCRICAO);
CREATE ASC INDEX MAN_SERVICOS_FUNCAO_INDEX01 ON MAN_SERVICOS_FUNCAO (DESCRICAO);
CREATE ASC INDEX MAN_SERVICOS_N_INDEX01 ON MAN_SERVICOS_N (DESCRICAO);
CREATE ASC INDEX MAN_SERVICOS_N_INDEX02 ON MAN_SERVICOS_N (DESCRICAO);
CREATE ASC INDEX MAN_SINTOMAS_PECAS_INDEX01 ON MAN_SINTOMAS_PECAS (FK_SINTOMAS, PK_SINTOMA_PECAS);
ALTER INDEX MAN_SINTOMAS_PECAS_INDEX01 INACTIVE;
CREATE ASC INDEX MAN_SINT_CODIG1 ON MAN_SINTOMAS_N (PK_SINTOMAS);
CREATE ASC INDEX MAN_SINT_DESCRICAO1 ON MAN_SINTOMAS_N (DESCRICAO);
CREATE ASC INDEX MAN_SOLUCAO_INDEX01 ON MAN_SOLUCAO (DESCRICAO);
CREATE ASC INDEX MAQUINAS_CARACTERIS_DESCRICAO_A ON MAQUINAS_CARACTERISTICAS (DESCRICAO);
CREATE ASC INDEX MAQUINAS_DESCRICAO_A ON MAQUINAS (DESCRICAO);
CREATE ASC INDEX MAQUINAS_IMAGENS_DESCRICAO_A ON MAQUINAS_IMAGENS (DESCRICAO);
CREATE ASC INDEX NC_ETAPASPASSOS_DESCRICAO_A ON NC_ETAPASPASSOS (DESCRICAO);
CREATE ASC INDEX NC_TABELACAUSAS_DESCRICAO_A ON NC_TABELACAUSAS (DESCRICAO);
CREATE ASC INDEX NOMELOGRADOURO_IDX ON LOGRADOURO (DESCRICAO);
CREATE ASC INDEX NORMAS_INDEX01 ON MAN_NORMAS (NORMAS_DESCRICAO);
CREATE ASC INDEX NORMA_COD ON NORMAS (NORMA_CODI);
CREATE ASC INDEX ORDEM ON MAN_CALIB_TEXTUAL (ORDEM);
CREATE ASC INDEX OS_CODIGO ON MAN_GARANTIAS (OS_CODIGO);
CREATE ASC INDEX OS_CODIGO1 ON MAN_PROGPERIO (OS_CODIGO);
CREATE ASC INDEX OS_CODIGO3 ON PCP_PROGRAMAPROD (OS_CODIGO);
CREATE ASC INDEX PAISES_IDX1 ON PAISES (NOMEPAIS);
CREATE ASC INDEX PATRIMONIO_IDX1 ON PATRIMONIO_TESTE (DESCRICAO, DATAAQUISICAO);
CREATE ASC INDEX PATRIMONIO_IDX2 ON PATRIMONIO_TESTE (NUMPATRIMONIO);
CREATE ASC INDEX PATRIMONIO_INDEX01 ON PATRIMONIO (DESCRICAO);
CREATE ASC INDEX PAT_OCOR_IDX1 ON PAT_OCOR_TESTE (EMPRESA, FILIAL, DATAOCORRENCIA, CODOCORRENCIA);
CREATE ASC INDEX PC_CODIGO ON MAN_GARANTIAS (PC_CODIGO);
CREATE ASC INDEX PC_CODIGO2 ON MAN_PCCONSUMIDAS (PC_CODIGO);
CREATE ASC INDEX PC_CODIGO3 ON MAN_PECA_COTA (PC_CODIGO);
ALTER INDEX PC_CODIGO3 INACTIVE;
CREATE ASC INDEX PECAS_DESCRICAO_A ON PECAS (DESCRICAO);
CREATE ASC INDEX PECA_SAIDA_IDX1 ON MAN_PECA_SAIDA (OS_CODIGO);
CREATE ASC INDEX PEND_DESCR ON MAN_HORASTRABALHADAS (PEND_DESCR);
CREATE ASC INDEX PLANT_DESC ON MAN_PLANTAOHH (PLANT_DESC);
CREATE ASC INDEX PRESCRITORES_IDX1 ON PROD_PRESCRITORES (NOME);
CREATE ASC INDEX PRESCRITORES_IDX2 ON PROD_PRESCRITORES (ESTADO, REGISTRO);
CREATE ASC INDEX PREV_CODI ON MAN_PREVENTIVA (PREV_CODIG);
CREATE ASC INDEX PROCESSOS_DESCRICAO_A ON PROCESSOS (DESCRICAO);
CREATE ASC INDEX PROC_CUSTO ON MAN_CTRLPROC_CUSTO (PROC_CUSTO);
CREATE ASC INDEX PRODUTOS_APRESENTACAO_INDEX01 ON PRODUTOS_APRESENTACAO (DESCRICAO);
CREATE ASC INDEX PRODUTOS_IDX1 ON PRODUTOS (PRODUTOATIVO, DESCRICAO);
CREATE ASC INDEX PRODUTOS_IDX2 ON PRODUTOS (CODBARRA);
CREATE ASC INDEX PRODUTOS_IDX3 ON PRODUTOSSNGPC (SUBSECAO);
CREATE ASC INDEX PRODUTOS_IDX4 ON PRODUTOSSNGPC (REGMS);
CREATE UNIQUE ASC INDEX PRODUTOS_MARCAS_IDX1 ON PRODUTOS_MARCAS (DESCRICAO);
CREATE ASC INDEX PRODUTOS_MODELOS_INDEX01 ON PRODUTOS_MODELOS (DESCRICAO);
CREATE ASC INDEX PRODUTOS_TOLERANCIA_DESCRICAO_A ON PRODUTOS_TOLERANCIA_REC (DESCRICAO);
CREATE ASC INDEX PROD_ARMAZENAMENTO_IDX1 ON PROD_ARMAZENAMENTO (PK_EMPRESA, PK_FILIAL, PK_ARMAZEM, RUA, ENDERECO, ANDAR, APARTAMENTO, SALA);
CREATE ASC INDEX PROD_ARMAZ_TAMANHO_IDX1 ON PROD_ARMAZ_TAMANHO (DESCRICAO);
CREATE ASC INDEX PROD_PRECO_MOTIVO_IDX1 ON PROD_PRECO_MOTIVO (DESCRICAO);
CREATE ASC INDEX PROG_CODIG ON MAN_PROGPERIO (PROG_CODIG);
CREATE ASC INDEX PROG_PERIO ON MAN_LUBRIFICACAO (PROG_PER_D);
CREATE ASC INDEX REGRADESCONTOSCLIEN_DESCRICAO_A ON REGRADESCONTOSCLIENTES (DESCRICAO);
CREATE ASC INDEX REPRESENTANTES_INDEX01 ON REPRESENTANTES (RAZAOSOCIAL);
CREATE ASC INDEX REPRESENTANTES_INDEX02 ON REPRESENTANTES (NOMEFANTASIA);
CREATE ASC INDEX REPRESENTANTES_INDEX03 ON REPRESENTANTES (CNPJ_CPF);
CREATE UNIQUE DESC INDEX RESCISAO0 ON RH_TIPO_RESCISAO (CODIGO);
ALTER INDEX RESCISAO0 INACTIVE;
CREATE ASC INDEX RES_DESCRI ON MAN_RESUMOS_OS (RES_DESCRI);
CREATE ASC INDEX RET_CHECKLIST_IDX1 ON MAN_CHECKLIST_RETORNO (CHECK_COD);
CREATE ASC INDEX RH_CARGOS_DESCRICAO_A ON RH_CARGOS (DESCRICAO);
CREATE ASC INDEX RH_CBO_IDX1 ON RH_CBO (NOME);
CREATE ASC INDEX RH_IDXTAB_FERIAS001 ON RH_TABELAFERIAS (FK_EMPRESAS);
CREATE ASC INDEX RH_IDXTAB_FERIAS002 ON RH_TABELAFERIAS (FK_FUNCIONARIOS);
CREATE ASC INDEX RH_IDXTAB_FERIAS003 ON RH_TABELAFERIAS (AQUISICAO_INICIO);
CREATE ASC INDEX RH_IDXTAB_FERIAS004 ON RH_TABELAFERIAS (GOZO_INICIO);
CREATE ASC INDEX SEGUROS_APOLICES_DESCRICAO_A ON SEGUROS_APOLICES (DESCRICAO);
CREATE ASC INDEX SEGUROS_APOLIC_DATAVENCIMENTO_A ON SEGUROS_APOLICES (DATAVENCIMENTO);
CREATE ASC INDEX SEGUROS_APOLIC_NUMEROAPOLICES_A ON SEGUROS_APOLICES (NUMEROAPOLICES);
CREATE ASC INDEX SEGUROS_TIPOS_DESCRICAO_A ON SEGUROS_TIPOS (DESCRICAO);
CREATE ASC INDEX SERV_CODIG ON MAN_SERVICOS1 (SERV_CODIG);
CREATE ASC INDEX SERV_CODIG1 ON MAN_CALIB_SERVICOS (SERV_CODIG);
CREATE ASC INDEX SET_CODIGO1 ON PCP_PROGRAMAPROD (SET_CODIGO);
CREATE ASC INDEX SIT_CODIGO ON MAN_EQUIPAM_STUACAO (SIT_CODIGO);
CREATE ASC INDEX SIT_DESCRI ON MAN_EQUIPAM_STUACAO (SIT_DESCRI);
CREATE ASC INDEX ST_ACIDENTESGRUPOS_DESCRICAO_A ON ST_ACIDENTESGRUPOS (DESCRICAO);
CREATE ASC INDEX ST_ACIDENTESSUBGRUP_DESCRICAO_A ON ST_ACIDENTESSUBGRUPOS (DESCRICAO);
CREATE ASC INDEX ST_ACIDENTES_TITULO_A ON ST_ACIDENTES (TITULO);
CREATE ASC INDEX ST_AGENTES_DESCRICAO_A ON ST_AGENTES (DESCRICAO);
CREATE ASC INDEX ST_ANANEXO13_DESCRICAO_A ON ST_ANANEXO13 (DESCRICAO);
CREATE ASC INDEX ST_APARELHAGEM_DESCRICAO_A ON ST_APARELHAGEM (DESCRICAO);
CREATE ASC INDEX ST_APOSENTADORIA_RISCO_NOME_A ON ST_APOSENTADORIA_RISCO (NOME);
CREATE ASC INDEX ST_APOSENTADORI_PK_APOS_RISCO_A ON ST_APOSENTADORIA_RISCO (PK_APOS_RISCO);
CREATE ASC INDEX ST_APOSENTADOR_DESCRICAO_AGEN_A ON ST_APOSENTADORIA_RISCO_DESC (DESCRICAO_AGENTE);
CREATE ASC INDEX ST_APOSENTADOR_DESCRICAO_ATIV_A ON ST_APOSENTADORIA_RISCO_ATIV (DESCRICAO_ATIV);
CREATE ASC INDEX ST_BIBLIOGRAFIA_TITULO_A ON ST_BIBLIOGRAFIA (TITULO);
CREATE ASC INDEX ST_CARGOSDESCR_PK_CARGOSDESCR_A ON ST_CARGOSDESCRICAO (PK_CARGOSDESCRICAO);
CREATE ASC INDEX ST_CARGOSPROCEDIMEN_DESCRICAO_A ON ST_CARGOSPROCEDIMENTOS1 (DESCRICAO);
CREATE ASC INDEX ST_FILIAISCRONOGRAMA_TITULO_A ON ST_FILIAISCRONOGRAMA (TITULO);
CREATE ASC INDEX ST_FILIAISINCIDENTE_DESCRICAO_A ON ST_FILIAISINCIDENTES (DESCRICAO);
CREATE ASC INDEX ST_NRS_NORMAS_A ON ST_NRS (NORMAS);
CREATE ASC INDEX ST_PROCEDIMENTOS1_DESCRICAO_A ON ST_PROCEDIMENTOS1 (DESCRICAO);
CREATE ASC INDEX ST_PROCEDIMENTOS2_DESCRICAO_A ON ST_PROCEDIMENTOS2 (DESCRICAO);
CREATE ASC INDEX ST_PROCEDIMENTOS3_DESCRICAO_A ON ST_PROCEDIMENTOS3 (DESCRICAO);
CREATE ASC INDEX ST_PROCEDIMENTOS4_DESCRICAO_A ON ST_PROCEDIMENTOS4 (DESCRICAO);
CREATE ASC INDEX ST_PROCEDIMENTOS5_DESCRICAO_A ON ST_PROCEDIMENTOS5 (DESCRICAO);
CREATE ASC INDEX ST_TECNICAS_DESCRICAO_A ON ST_TECNICAS (DESCRICAO);
CREATE ASC INDEX ST_TIPOSDEOBRAS_NOME_A ON ST_TIPOSDEOBRAS (NOME);
CREATE ASC INDEX ST_TIPO_EXTINTORES_NOME_A ON ST_TIPO_EXTINTORES (NOME);
CREATE ASC INDEX ST_TREINAMENTOSGRUP_DESCRICAO_A ON ST_TREINAMENTOSGRUPOS (DESCRICAO);
CREATE ASC INDEX ST_TREINAMENTOSSUBG_DESCRICAO_A ON ST_TREINAMENTOSSUBGRUPOS (DESCRICAO);
CREATE ASC INDEX ST_TREINAMENTOS_DESCRICAO_A ON ST_TREINAMENTOS (DESCRICAO);
CREATE ASC INDEX ST_VACINAS_NOME_A ON ST_VACINAS (NOME);
CREATE ASC INDEX SUBTIPOPATRIMONIO_INDEX01 ON SUBTIPOPATRIMONIO (DESCRICAO);
CREATE ASC INDEX TABELAPRECOS_DESCRICAO_A ON TABELAPRECOS (DESCRICAO);
CREATE ASC INDEX TAB_VERBAS_CODIGO_X ON RH_VERBAS (PK_VERBAS);
CREATE ASC INDEX TAB_VERBAS_FORMULA_X ON RH_VERBAS (FORMULA);
CREATE ASC INDEX TAB_VERBAS_NOME_X ON RH_VERBAS (DESCRICAO);
CREATE ASC INDEX TAB_VERBAS_SEQ_CALCULO_X ON RH_VERBAS (SEQ_CALCULO);
CREATE ASC INDEX TAGS_DESCRICAO_A ON TAGS (DESCRICAO);
CREATE ASC INDEX TAG_PAI ON MAN_HIERARQUIA (TAG_PAI);
CREATE ASC INDEX TAG_PECAS_PK_TAG_PECAS_A ON TAG_PECAS (PK_TAG_PECAS);
CREATE DESC INDEX TAG_PECAS_PK_TAG_PECAS_D ON TAG_PECAS (PK_TAG_PECAS);
CREATE UNIQUE DESC INDEX TBRACA0 ON TIPO_RACA (CORACA);
ALTER INDEX TBRACA0 INACTIVE;
CREATE ASC INDEX TEMPPATRI_IDX2 ON TEMPPATRI (DESCRICAO);
CREATE ASC INDEX TIPOENTRADAS_SAIDAS_INDEX01 ON TIPOENTRADAS_SAIDAS (DESCRICAO);
CREATE ASC INDEX TIPOOCORPATRIMONIO_INDEX01 ON TIPOOCORPATRIMONIO (DESCRICAO);
CREATE ASC INDEX TIPO_CADASTROS_INDEX01 ON TIPO_CADASTROS (DESCRICAO);
CREATE ASC INDEX TIPO_DOCUMENTO_INDEX01 ON TIPO_DOCUMENTO (DESCRICAO);
CREATE UNIQUE ASC INDEX TIPO_ENDERECO_INDEX01 ON TIPO_ENDERECO (PK_TIPO_ENDERECO);
CREATE ASC INDEX TIPO_ENDERECO_INDEX02 ON TIPO_ENDERECO (DESCRICAO);
CREATE ASC INDEX TIPO_GARANTIA_INDEX01 ON TIPO_GARANTIA (DESCRICAO);
CREATE ASC INDEX TIP_OS_COD ON MAN_TIPO_OS (TIP_OS_COD);
CREATE UNIQUE ASC INDEX UNIDADES_INDEX01 ON UNIDADES (SIGLA);
CREATE UNIQUE ASC INDEX USUARIOS_INDEX01 ON USUARIOS (NOMEUSUARIO);
CREATE UNIQUE ASC INDEX VEICULOS_IDX1 ON VEICULOS_TESTE (PLACAVEICULO);
CREATE ASC INDEX VEICULOS_IDX2 ON VEICULOS_TESTE (DESCRICAO);
CREATE ASC INDEX VEN_REPR_CIDADES_INDEX01 ON VEN_REPR_CIDADES (FK_REPRESENTANTE, FK_CIDADES);
/*******************************************************************************
 * Unique Constraints
 * ------------------
 * Extracted at 11/08/2011 08:34:16
 ******************************************************************************/

ALTER TABLE CIDADE ADD CONSTRAINT UNQ_CIDADE_CODIGO UNIQUE 
  (CODIGO);

ALTER TABLE TIPOMOVIMENTO ADD CONSTRAINT UNQ_TIPOMOVIMENTO_CODIGO UNIQUE 
  (CODIGO);

/*******************************************************************************
 * Foreign Key Constraints
 * -----------------------
 * Extracted at 11/08/2011 08:34:16
 ******************************************************************************/

ALTER TABLE MAN_SERVICOS_N ADD CONSTRAINT FK_MAN_SERVICOS_N_1 
  FOREIGN KEY (FK_SERVICOSPADRAO) REFERENCES MAN_SERVICOSPADRAO
  (PK_SERVICOPADRAO) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE MAN_SERVICOS_FUNCAO ADD CONSTRAINT FK_MAN_SERV_FUNCAO_01 
  FOREIGN KEY (FK_FUNCAO) REFERENCES RH_FUNCOES
  (PK_FUNCOES) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE CONT_PLANOSCONTAS ADD CONSTRAINT FK_PLANOPAI 
  FOREIGN KEY (FK_PLANOCONTASPAI) REFERENCES CONT_PLANOSCONTAS
  (PK_PLANOCONTAS) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE CONT_PLANOSCONTAS ADD CONSTRAINT FK_PLANOSUPERIOR 
  FOREIGN KEY (FK_CONTASUPERIOR) REFERENCES CONT_PLANOSCONTAS
  (PK_PLANOCONTAS) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE CONT_PLANOSCONTAS ADD CONSTRAINT FK_PLANO_PLANO2 
  FOREIGN KEY (FK_PLANOCONTASCTB) REFERENCES CONT_PLANOSCONTAS
  (PK_PLANOCONTAS) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE PRODUTOS_TOLERANCIA_REC ADD CONSTRAINT FK_PRODUTOS_TOLERANC_FILIAL 
  FOREIGN KEY (FK_EMPRESAS, FK_FILIAIS) REFERENCES FILIAL
  (PK_EMPRESA, PK_FILIAL) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE PRODUTOS_TOLERANCIA_REC ADD CONSTRAINT FK_PRODUTOS_TOLERA_PRODUTOS 
  FOREIGN KEY (FK_PRODUTOS) REFERENCES PRODUTOS
  (PK_PRODUTOS) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE MAN_SERVICOS_FUNCAO ADD CONSTRAINT FK_SERV_FUNCAO_1 
  FOREIGN KEY (FK_SERVICOS) REFERENCES MAN_SERVICOS_N
  (PK_SERVICOS) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE ST_ANAMNESE ADD CONSTRAINT FK_ST_ANAMNESE_EMPRESA 
  FOREIGN KEY (FK_EMPRESAS) REFERENCES EMPRESA
  (PK_EMPRESA) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE ST_ANAMNESE ADD CONSTRAINT FK_ST_ANAMNESE_FILIAL 
  FOREIGN KEY (FK_EMPRESAS, FK_FILIAIS) REFERENCES FILIAL
  (PK_EMPRESA, PK_FILIAL) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE ST_ATESTADOSRISCOS ADD CONSTRAINT FK_ST_ATESTADO_ST_ATESTADO 
  FOREIGN KEY (FK_EMPRESAS, FK_FILIAIS, FK_FUNCIONARIOS, FK_ATESTADOS) REFERENCES ST_ATESTADOS
  (FK_EMPRESAS, FK_FILIAIS, FK_FUNCIONARIOS, PK_ATESTADOS) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE ST_TECNICASANEXOS ADD CONSTRAINT FK_ST_TECNICASA_ST_TECNICAS 
  FOREIGN KEY (FK_TECNICA) REFERENCES ST_TECNICAS
  (PK_TECNICAS) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE ST_VACINAS_DOSES ADD CONSTRAINT FK_ST_VACINAS_DO_ST_VACINAS 
  FOREIGN KEY (FK_VACINAS) REFERENCES ST_VACINAS
  (PK_VACINAS) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE ST_VACINAS ADD CONSTRAINT FK_ST_VACINAS_UNIDADES 
  FOREIGN KEY (FK_UNDPERIODICIDADE) REFERENCES UNIDADES
  (PK_UNIDADES) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE TREINAMENTOSSUBGRUPOS ADD CONSTRAINT FK_TREINAMENTOSSUBGRUPOS_1 
  FOREIGN KEY (IDGRUPO) REFERENCES TREINAMENTOSGRUPOS
  (ID) 
  ON DELETE CASCADE
  ON UPDATE CASCADE
;

ALTER TABLE TREINAMENTOS ADD CONSTRAINT FK_TREINAMENTOS_1 
  FOREIGN KEY (IDGRUPO, IDSUBGRUPO) REFERENCES TREINAMENTOSSUBGRUPOS
  (IDGRUPO, ID) 
  ON DELETE SET NULL
  ON UPDATE CASCADE
;

ALTER TABLE VEN_REPR_CIDADES ADD CONSTRAINT FOREIGN_KEY01 
  FOREIGN KEY (FK_REPRESENTANTE) REFERENCES REPRESENTANTES
  (PK_REPRESENTANTES) 
  ON DELETE CASCADE
  ON UPDATE CASCADE
;

ALTER TABLE PRODUTOS_LOGISTICA ADD CONSTRAINT FOREIGN_KEY01_A 
  FOREIGN KEY (FK_PRODUTOS) REFERENCES PRODUTOS
  (PK_PRODUTOS) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

ALTER TABLE FIN_INDICESVALORES ADD  
  FOREIGN KEY (FK_INDICES) REFERENCES FIN_INDICESFINANCEIROS
  (PK_INDICES) 
  ON DELETE NO ACTION
  ON UPDATE NO ACTION
;

/*******************************************************************************
 * Triggers
 * --------
 * Extracted at 11/08/2011 08:34:16
 ******************************************************************************/

/*******************************************************************************
 * Trigger ALMOXARIFADOS_BI on table/view ALMOXARIFADOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ALMOXARIFADOS_BI FOR ALMOXARIFADOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_almoxarifado is null) then
    new.pk_almoxarifado = gen_id(gen_almoxarifados_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ALM_SOLICITACAO_BI on table/view ALM_SOLICITACAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ALM_SOLICITACAO_BI FOR ALM_SOLICITACAO ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_solicitacao is null) then
    new.pk_solicitacao = gen_id(gen_alm_solicitacao_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ALM_SOLIC_ITENS_BI on table/view ALM_SOLIC_ITENS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ALM_SOLIC_ITENS_BI FOR ALM_SOLIC_ITENS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_item_solicitacao is null) then
    new.pk_item_solicitacao = gen_id(gen_alm_solic_itens_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger APRESENTACAO_ID on table/view APRESENTACAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER APRESENTACAO_ID FOR APRESENTACAO ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PROD_APRESENTACAO is null) or (new.PK_PROD_APRESENTACAO = 0) )
  then new.PK_PROD_APRESENTACAO = gen_id(APRESENTACAO_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger BI_EXTINTORES_CODEXTINTOR_NEW on table/view EXTINTORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER BI_EXTINTORES_CODEXTINTOR_NEW FOR EXTINTORES ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.CODEXTINTOR IS NULL) THEN
      NEW.CODEXTINTOR = GEN_ID(EXTINTORES_CODEXTINTOR_GEN_NEW, 1);
      if (NEW.empresa IS NULL ) then
      NEW.EMPRESA = 1;
      if (NEW.FILIAL IS NULL) then
      NEW.FILIAL = 1;
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger BI_MAN_FERRAMCOMPL_SEQUENCIAL on table/view MAN_FERRAMCOMPL
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER BI_MAN_FERRAMCOMPL_SEQUENCIAL FOR MAN_FERRAMCOMPL ACTIVE BEFORE INSERT POSITION 1 AS
BEGIN /*$$IBE$$ 
  IF (NEW.SEQUENCIAL IS NULL) THEN
        NEW.SEQUENCIAL = GEN_ID(FERRAMCOMPL_SEQUENCIAL_GEN, 1);
   IF (NEW.EMPRESA IS NULL) THEN
        NEW.EMPRESA = 1;
   IF (NEW.FILIAL IS NULL) THEN
        NEW.FILIAL = 1;
    $$IBE$$*/ /* adiciona o registro no arquivo de FERRAMENTAS DO SIGMA */ /*$$IBE$$ 

   if (inserting) then
   begin

   INSERT INTO FERRAMENTAS (
   CODIGO,
   DESCRICAO,
   QUANTIDADE,
   CUS_UNIT,
   area_codig, 
   set_codigo ) VALUES
   (
   NEW.CODIFICACAO,
   NEW.DESCRICAO,
   NEW.estatual,
   NEW.CUSTOAQUISICAO,
   NEW.CODAREA,
   NEW.CODSETOR);

   end
 $$IBE$$*/ POST_EVENT '$$IBE$$';
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CADASTROS_BI on table/view CADASTROS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CADASTROS_BI FOR CADASTROS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_cadastro is null) then
    new.pk_cadastro = gen_id(gen_cadastro_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CELULAS_ID on table/view CELULAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CELULAS_ID FOR CELULAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CELULAS is null) or (new.PK_CELULAS = 0) )
  then new.PK_CELULAS = gen_id(CELULAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CELULAS_MAQUINAS on table/view CELULAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CELULAS_MAQUINAS FOR CELULAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  trigger para inclusao de registros na tabela MAQUINAS 
  quando for PREDIAL, e o campo PREDIAL estiver setado para 
  SIM, entao fazer os lancamentos na tabela MAQUINAS dos registros
  de predial
  "CELULA" - ESTRUTURAL 
  "CELULA" -  ELETRICA
  "CELULA" -  HIDRAULICA
  "CELULA" - AR CONDICIONADO
  "CELULA" - COMB. INCENDIO
  "CELULA" - TELEFONIA
  "CELULA" - OUTROS
  
  
  You can change this template in the template editor:
  File | Preferences | Object Templates

  Trigger:

  Author   : , 
  Date     : 04/08/2011 13:37:36
  Purpose  :
*/
begin 
  /* VERIFICA SE O CAMPO PREDIAL esta setado para sim*/    
  if (new.predial = 'S') then
  begin                               
     INSERT INTO MAQUINAS /* lanca       "CELULA" - ESTRUTURAL */
(
 FK_EMPRESAS,
 FK_FILIAIS,
 FK_DEPARTAMENTOS,
 FK_SETORES,
 FK_PROCESSOS,
 FK_CELULAS,
 DESCRICAO,
 FK_FAMILIAS, 
 SITUACAO,
 FK_CENTROCUSTOS,
 MAQ_ATIVA,
 TIPOMAQUINAS,
 CRIAREQUIPPREDIAL
 )
VALUES
(
 new.FK_EMPRESAS,
 NEW.FK_FILIAIS,
 NEW.FK_DEPARTAMENTOS,
 NEW.FK_SETORES,
 NEW.FK_PROCESSOS,
 NEW.PK_CELULAS,
 TRIM(NEW.DESCRICAO) || ' - ' || 'ESTRUTURAL'  /*DESCRICAO*/,
 NEW.FK_FAMILIAS, 
 'A'  /*SITUACAO*/,
 NEW.FK_CENTROCUSTO   /*FK_CENTROCUSTOS*/,
 'S'  /*MAQ_ATIVA*/,
 'P'  /*TIPOMAQUINAS = PREDIAL */,
 'S'
);

/* INCLUI "CELULA" -  ELETRICA */ 

     INSERT INTO MAQUINAS /* lanca       "CELULA" - ESTRUTURAL */
(
 FK_EMPRESAS,
 FK_FILIAIS,
 FK_DEPARTAMENTOS,
 FK_SETORES,
 FK_PROCESSOS,
 FK_CELULAS,
 DESCRICAO,
 FK_FAMILIAS, 
 SITUACAO,
 FK_CENTROCUSTOS,
 MAQ_ATIVA,
 TIPOMAQUINAS,
 CRIAREQUIPPREDIAL
 )
VALUES
(
 new.FK_EMPRESAS,
 NEW.FK_FILIAIS,
 NEW.FK_DEPARTAMENTOS,
 NEW.FK_SETORES,
 NEW.FK_PROCESSOS,
 NEW.PK_CELULAS,
 TRIM(NEW.DESCRICAO) || ' - ' || 'ELETRICA'  /*DESCRICAO*/,
 NEW.FK_FAMILIAS, 
 'A'  /*SITUACAO*/,
 NEW.FK_CENTROCUSTO   /*FK_CENTROCUSTOS*/,
 'S'  /*MAQ_ATIVA*/,
 'P'  /*TIPOMAQUINAS = PREDIAL */,
 'S'
);
 
     INSERT INTO MAQUINAS /* lanca       "CELULA" - ESTRUTURAL */
(
 FK_EMPRESAS,
 FK_FILIAIS,
 FK_DEPARTAMENTOS,
 FK_SETORES,
 FK_PROCESSOS,
 FK_CELULAS,
 DESCRICAO,
 FK_FAMILIAS, 
 SITUACAO,
 FK_CENTROCUSTOS,
 MAQ_ATIVA,
 TIPOMAQUINAS,
 CRIAREQUIPPREDIAL
 )
VALUES
(
 new.FK_EMPRESAS,
 NEW.FK_FILIAIS,
 NEW.FK_DEPARTAMENTOS,
 NEW.FK_SETORES,
 NEW.FK_PROCESSOS,
 NEW.PK_CELULAS,
 TRIM(NEW.DESCRICAO) || ' - ' || 'HIDRAULICA'  /*DESCRICAO*/,
 NEW.FK_FAMILIAS, 
 'A'  /*SITUACAO*/,
 NEW.FK_CENTROCUSTO   /*FK_CENTROCUSTOS*/,
 'S'  /*MAQ_ATIVA*/,
 'P'  /*TIPOMAQUINAS = PREDIAL */,
 'S'
);

     INSERT INTO MAQUINAS /* lanca       "CELULA" - ESTRUTURAL */
(
 FK_EMPRESAS,
 FK_FILIAIS,
 FK_DEPARTAMENTOS,
 FK_SETORES,
 FK_PROCESSOS,
 FK_CELULAS,
 DESCRICAO,
 FK_FAMILIAS, 
 SITUACAO,
 FK_CENTROCUSTOS,
 MAQ_ATIVA,
 TIPOMAQUINAS,
 CRIAREQUIPPREDIAL
 )
VALUES
(
 new.FK_EMPRESAS,
 NEW.FK_FILIAIS,
 NEW.FK_DEPARTAMENTOS,
 NEW.FK_SETORES,
 NEW.FK_PROCESSOS,
 NEW.PK_CELULAS,
 TRIM(NEW.DESCRICAO) || ' - ' || 'AR COND'  /*DESCRICAO*/,
 NEW.FK_FAMILIAS, 
 'A'  /*SITUACAO*/,
 NEW.FK_CENTROCUSTO   /*FK_CENTROCUSTOS*/,
 'S'  /*MAQ_ATIVA*/,
 'P'  /*TIPOMAQUINAS = PREDIAL */,
 'S'
);

     INSERT INTO MAQUINAS /* lanca       "CELULA" - ESTRUTURAL */
(
 FK_EMPRESAS,
 FK_FILIAIS,
 FK_DEPARTAMENTOS,
 FK_SETORES,
 FK_PROCESSOS,
 FK_CELULAS,
 DESCRICAO,
 FK_FAMILIAS, 
 SITUACAO,
 FK_CENTROCUSTOS,
 MAQ_ATIVA,
 TIPOMAQUINAS,
 CRIAREQUIPPREDIAL
 )
VALUES
(
 new.FK_EMPRESAS,
 NEW.FK_FILIAIS,
 NEW.FK_DEPARTAMENTOS,
 NEW.FK_SETORES,
 NEW.FK_PROCESSOS,
 NEW.PK_CELULAS,
 TRIM(NEW.DESCRICAO) || ' - ' || 'COMB INCENDIO'  /*DESCRICAO*/,
 NEW.FK_FAMILIAS, 
 'A'  /*SITUACAO*/,
 NEW.FK_CENTROCUSTO   /*FK_CENTROCUSTOS*/,
 'S'  /*MAQ_ATIVA*/,
 'P'  /*TIPOMAQUINAS = PREDIAL */,
 'S'
);

     INSERT INTO MAQUINAS /* lanca       "CELULA" - ESTRUTURAL */
(
 FK_EMPRESAS,
 FK_FILIAIS,
 FK_DEPARTAMENTOS,
 FK_SETORES,
 FK_PROCESSOS,
 FK_CELULAS,
 DESCRICAO,
 FK_FAMILIAS, 
 SITUACAO,
 FK_CENTROCUSTOS,
 MAQ_ATIVA,
 TIPOMAQUINAS,
 CRIAREQUIPPREDIAL
 )
VALUES
(
 new.FK_EMPRESAS,
 NEW.FK_FILIAIS,
 NEW.FK_DEPARTAMENTOS,
 NEW.FK_SETORES,
 NEW.FK_PROCESSOS,
 NEW.PK_CELULAS,
 TRIM(NEW.DESCRICAO) || ' - ' || 'TELEFONIA'  /*DESCRICAO*/,
 NEW.FK_FAMILIAS, 
 'A'  /*SITUACAO*/,
 NEW.FK_CENTROCUSTO   /*FK_CENTROCUSTOS*/,
 'S'  /*MAQ_ATIVA*/,
 'P'  /*TIPOMAQUINAS = PREDIAL */,
 'S'
);

     INSERT INTO MAQUINAS /* lanca       "CELULA" - ESTRUTURAL */
(
 FK_EMPRESAS,
 FK_FILIAIS,
 FK_DEPARTAMENTOS,
 FK_SETORES,
 FK_PROCESSOS,
 FK_CELULAS,
 DESCRICAO,
 FK_FAMILIAS, 
 SITUACAO,
 FK_CENTROCUSTOS,
 MAQ_ATIVA,
 TIPOMAQUINAS,
 CRIAREQUIPPREDIAL
 )
VALUES
(
 new.FK_EMPRESAS,
 NEW.FK_FILIAIS,
 NEW.FK_DEPARTAMENTOS,
 NEW.FK_SETORES,
 NEW.FK_PROCESSOS,
 NEW.PK_CELULAS,
 TRIM(NEW.DESCRICAO) || ' - ' || 'OUTROS'  /*DESCRICAO*/,
 NEW.FK_FAMILIAS, 
 'A'  /*SITUACAO*/,
 NEW.FK_CENTROCUSTO   /*FK_CENTROCUSTOS*/,
 'S'  /*MAQ_ATIVA*/,
 'P'  /*TIPOMAQUINAS = PREDIAL */,
 'S'
);



  end /* if (new.predial = 'S') then*/
  
  /* code */
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CENTROCUSTO_BI on table/view CENTROCUSTO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CENTROCUSTO_BI FOR CENTROCUSTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.SEQUENCIAL IS NULL) THEN
  NEW.SEQUENCIAL = GEN_ID(GEN_CENTROCUSTO_ID,1);
  NEW.CC_CODIGO = NEW.FK_EMPRESAS || NEW.FK_FILIAIS || NEW.FK_DEPARTAMENTOS || NEW.FK_SETORES || NEW.SEQUENCIAL;
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CEP0_BI on table/view CEP0
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CEP0_BI FOR CEP0 ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_logradouro is null) then
    new.pk_logradouro = gen_id(gen_cep0_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CIDADES_TRANSPORTADORAS_ID on table/view CIDADES_TRANSPORTADORAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CIDADES_TRANSPORTADORAS_ID FOR CIDADES_TRANSPORTADORAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CID_TRANSPORTADORA is null) or (new.PK_CID_TRANSPORTADORA = 0) )
  then new.PK_CID_TRANSPORTADORA = gen_id(CIDADES_TRANSPORTADORAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CLIENTES_BI on table/view CLIENTES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CLIENTES_BI FOR CLIENTES ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_cliente is null) then
    new.pk_cliente = gen_id(gen_clientes_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CLIENTES_CTABCO_BI on table/view CLIENTES_CTABCO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CLIENTES_CTABCO_BI FOR CLIENTES_CTABCO ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_ctabcocliente is null) then
    new.pk_ctabcocliente = gen_id(gen_ctabcocliente_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger COMP_COMPRADORES_ID on table/view COMP_COMPRADORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER COMP_COMPRADORES_ID FOR COMP_COMPRADORES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_COMPRADOR is null) or (new.PK_COMPRADOR = 0) )
  then new.PK_COMPRADOR = gen_id(COMP_COMPRADORES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger COMP_GRUPOSCOMPRADORES_ID on table/view COMP_GRUPOSCOMPRADORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER COMP_GRUPOSCOMPRADORES_ID FOR COMP_GRUPOSCOMPRADORES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_GRUPOSCOMPRADORES is null) or (new.PK_GRUPOSCOMPRADORES = 0) )
  then new.PK_GRUPOSCOMPRADORES = gen_id(COMP_GRUPOSCOMPRADORES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger COMP_ORCAMENTOS_BI on table/view COMP_ORCAMENTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER COMP_ORCAMENTOS_BI FOR COMP_ORCAMENTOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_orcamento is null) then
    new.pk_orcamento = gen_id(gen_orcamentos_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CONT_GRPATRIMO_ID on table/view CONT_GRPATRIMO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CONT_GRPATRIMO_ID FOR CONT_GRPATRIMO ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.FK_GRUPOSPATRIMONIO is null) or (new.FK_GRUPOSPATRIMONIO = 0) )
  then new.FK_GRUPOSPATRIMONIO = gen_id(CONT_GRPATRIMO_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CONT_PATMOVIMENTO_BI on table/view CONT_PATMOVIMENTO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CONT_PATMOVIMENTO_BI FOR CONT_PATMOVIMENTO ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.nummovimento is null) then
    new.nummovimento = gen_id(gen_patmovimento_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CONT_PATRIMONIO_BI on table/view CONT_PATRIMONIO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CONT_PATRIMONIO_BI FOR CONT_PATRIMONIO ACTIVE BEFORE INSERT POSITION 1 AS
begin
/* sempre usar o PATRIMONIO_SEQUENCIAL_GEN, incondicionalmente */ /*$$IBE$$ 
  new.SEQUENCIAL = gen_id(PATRIMONIO_SEQUENCIAL_GEN,1);

  if (new.empresa is null) then
    new.empresa = 1;
  if (new.FILIAL is null) then
    new.FILIAL = 1;

   $$IBE$$*/ /* ESCREVE O REGISTRO EM TEMPPATRI  */
  /*  se for extintor escreve em EXTINTORES */ /*$$IBE$$ 
    if (new.lancartemporario = 'SIM') then
    BEGIN
  insert into temppatri (
    BEM              ,
    INDICE           ,
    CONTA            ,
    CODBEM           ,
    DESCR1           ,
    DESCR2           ,
    DESCR3           ,
    DESCR4           ,
    DESCR5           ,
    DATAAQUISICAO    ,
    VALORAQUISICAO   ,
    FORNECEDOR       ,
    RESPONSAVEL      ,
    CODPATRIMONIO    ,
    VALORPATRIMONIO  ,
    DESCRICAO        ,
    GRUPOPATRIMO     ,
    CENTROCUSTO      ,
    UNIDADES         ,
    NOTAFISCAL       ,
    CODFORNECEDOR    ,
    DATAALOCACAO     ,
    SUBGRUPO         ,
    CODDEPTO         ,
    CODSETOR         ,
    CODSECAO         )
    values (
    '1',
    '1',
    '1',
    '1',
    new.DESCRICAO,
    new.descricao,
    new.DESCRICAO,
    new.DESCRICAO,
    new.DESCRICAO,
    new.DATAAQUISICAO,
    new.VALORCONTABIL,
    new.DESCRICAO,
    new.DESCRICAO,
    new.numpatrimonio,
    new.VALORCONTABIL,
    new.DESCRICAO,
    new.CODGRUPO,
    new.CENTROCUSTO,
    1,
    new.NOTAFISCAL,
    new.CODFORNECEDOR,
    new.DATAAQUISICAO,
    new.CODSGRUPO,
    new.CODDEPTO,
    new.CODSETOR,
    new.codsecao );

    END

     $$IBE$$*/ /* ao cadastrar um novo registro,
    lanÃ§ar o um registro em  movimentaÃ§Ã£o de patrimonio  */ /*$$IBE$$ 

    insert into patmovimento (

    EMPRESA           ,
    FILIAL            ,
    DATAMOVIMENTO     ,
    TIPOMOVIMENTO     ,
    SENTIDOMOVIMENTO  ,
    MOTIVOMOVIMENTO   ,
    EMITIRDOCFISCAL   ,
    CCUSTOORIGEM      ,
    CODDEPTOORIGEM    ,
    CODSETORORIGEM    ,
    CODSECAOORIGEM    ,
    CODFORNORIGEM     ,
    CCUSTODESTINO     ,
    CODDEPTODESTINO   ,
    CODSETORDESTINO   ,
    CODSECAODESTINO   ,
    CODFORNDESTINO    ,
    NUMPATRIMONIO
    )

    values (
    new.empresa,
    new.filial,
    new.dataaquisicao,
    'EXTENO',
    'ENTRADA',
    'AQUISICAO',
    'N',
    NEW.centrocusto, 
    NEW.CODDEPTO,
    NEW.CODSETOR,
    NEW.CODSECAO,
    NEW.CODFORNECEDOR,
    NEW.centrocusto, 
    NEW.coddepto, 
    NEW.CODSETOR,
    NEW.CODSECAO,
    NEW.CODFORNECEDOR,
    NEW.codfornecedor );

 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CONT_PATTIPOOCOR_BI on table/view CONT_PATTIPOOCOR
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CONT_PATTIPOOCOR_BI FOR CONT_PATTIPOOCOR ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.codocorrencia is null) then
    new.codocorrencia = gen_id(gen_pattipoocor_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger CONT_PAT_OCOR_BI on table/view CONT_PAT_OCOR
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER CONT_PAT_OCOR_BI FOR CONT_PAT_OCOR ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.sequencial is null) then
    new.sequencial = gen_id(gen_pat_ocor_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger DEPARTAMENTOS_BI on table/view DEPARTAMENTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER DEPARTAMENTOS_BI FOR DEPARTAMENTOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_departamento is null) then
    new.pk_departamento = gen_id(gen_departamentos_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger DEPOSITOS_ID on table/view DEPOSITOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER DEPOSITOS_ID FOR DEPOSITOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.FK_DEPOSITOS is null) or (new.FK_DEPOSITOS = 0) )
  then new.FK_DEPOSITOS = gen_id(DEPOSITOS_GEN, 1);  
  if (inserting) then
  begin
     new.fk_empresas = 1;
     new.fk_filiais = 1;
  end
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger DOCUMENTOS_BI on table/view DOCUMENTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER DOCUMENTOS_BI FOR DOCUMENTOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_documento is null) then
    new.pk_documento = gen_id(gen_documentos_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger EMPRESA_BI on table/view EMPRESA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER EMPRESA_BI FOR EMPRESA ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_empresa is null) then
    new.pk_empresa = gen_id(gen_empresa_id,1);
  /* verifica se existe os dados de DDD na sistema de CEP 
     se nao houver, cadastra novo ddd na tabela de cep */  
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ENDERECOS_BI on table/view ENDERECOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ENDERECOS_BI FOR ENDERECOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_ENDERECO IS NULL) THEN
  NEW.PK_ENDERECO = GEN_ID(GEN_ENDERECOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger EQUIPAMENTOS_FUNCIONARIOS_ID on table/view EQUIPAMENTOS_FUNCIONARIOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER EQUIPAMENTOS_FUNCIONARIOS_ID FOR EQUIPAMENTOS_FUNCIONARIOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_EQUIP_FUNCIONARIOS is null) or (new.PK_EQUIP_FUNCIONARIOS = 0) )
  then new.PK_EQUIP_FUNCIONARIOS = gen_id(EQUIPAMENTOS_FUNCIONARIOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger EQUIPAMENTOS_ID on table/view EQUIPAMENTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER EQUIPAMENTOS_ID FOR EQUIPAMENTOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_EQUIPAMENTOS is null) or (new.PK_EQUIPAMENTOS = 0) )
  then new.PK_EQUIPAMENTOS = gen_id(EQUIPAMENTOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger EQUIPAMENTOS_IMAGEM_ID on table/view EQUIPAMENTOS_IMAGEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER EQUIPAMENTOS_IMAGEM_ID FOR EQUIPAMENTOS_IMAGEM ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_EQUIP_IMAGEM is null) or (new.PK_EQUIP_IMAGEM = 0) )
  then new.PK_EQUIP_IMAGEM = gen_id(EQUIPAMENTOS_IMAGEM_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger EQUIPAMENTOS_NORMAS_ID on table/view EQUIPAMENTOS_NORMAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER EQUIPAMENTOS_NORMAS_ID FOR EQUIPAMENTOS_NORMAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_EQUIP_NORMAS is null) or (new.PK_EQUIP_NORMAS = 0) )
  then new.PK_EQUIP_NORMAS = gen_id(EQUIPAMENTOS_NORMAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger EQUIPAMENTOS_PECAS_ID on table/view EQUIPAMENTOS_PECAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER EQUIPAMENTOS_PECAS_ID FOR EQUIPAMENTOS_PECAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_EQUIP_PECAS is null) or (new.PK_EQUIP_PECAS = 0) )
  then new.PK_EQUIP_PECAS = gen_id(EQUIPAMENTOS_PECAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger EQUIPAMENTOS_SERVICOS_ID on table/view EQUIPAMENTOS_SERVICOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER EQUIPAMENTOS_SERVICOS_ID FOR EQUIPAMENTOS_SERVICOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_EQUIP_SERVICOS is null) or (new.PK_EQUIP_SERVICOS = 0) )
  then new.PK_EQUIP_SERVICOS = gen_id(EQUIPAMENTOS_SERVICOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger EQUIPAMENTOS_SINTOMAS_ID on table/view EQUIPAMENTOS_SINTOMAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER EQUIPAMENTOS_SINTOMAS_ID FOR EQUIPAMENTOS_SINTOMAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_EQUIP_SINTOMAS is null) or (new.PK_EQUIP_SINTOMAS = 0) )
  then new.PK_EQUIP_SINTOMAS = gen_id(EQUIPAMENTOS_SINTOMAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FERIADO_BI on table/view FERIADO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FERIADO_BI FOR FERIADO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_FERIADOS IS NULL) THEN
  NEW.PK_FERIADOS = GEN_ID(GEN_FERIADO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FILIAL_BI on table/view FILIAL
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FILIAL_BI FOR FILIAL ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_filial is null) then
    new.pk_filial = gen_id(gen_filial_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_BANCOS_BOLETOS_BI on table/view FIN_BANCOS_BOLETOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_BANCOS_BOLETOS_BI FOR FIN_BANCOS_BOLETOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.sequencial is null) then
    new.sequencial = gen_id(gen_fin_bancos_boletos_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_BOLETOMSG_BI on table/view FIN_BOLETOMSG
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_BOLETOMSG_BI FOR FIN_BOLETOMSG ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_boleto_msg is null) then
    new.pk_boleto_msg = gen_id(gen_fin_boletomsg_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_CARTAOCREDITO_BI on table/view FIN_CARTAOCREDITO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_CARTAOCREDITO_BI FOR FIN_CARTAOCREDITO ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_cartaocredito is null) then
    new.pk_cartaocredito = gen_id(gen_cartaocredito_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_CONDICAOPAGTOS_BI on table/view FIN_CONDICAOPAGTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_CONDICAOPAGTOS_BI FOR FIN_CONDICAOPAGTOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_CONDICAOPAGTO IS NULL) THEN
  NEW.PK_CONDICAOPAGTO = GEN_ID(GEN_FIN_CONDICAOPAGTOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_CONDPAGTO_ITEM_BI on table/view FIN_CONDPAGTO_ITEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_CONDPAGTO_ITEM_BI FOR FIN_CONDPAGTO_ITEM ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_CONDPAGTO_ITEM IS NULL) THEN
  NEW.PK_CONDPAGTO_ITEM = GEN_ID(GEN_FIN_CONDPAGTO_ITEM_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_INDICESFINANCEIROS_BI on table/view FIN_INDICESFINANCEIROS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_INDICESFINANCEIROS_BI FOR FIN_INDICESFINANCEIROS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_INDICES IS NULL) THEN
  NEW.PK_INDICES = GEN_ID(GEN_FIN_INDICESFINANCEIROS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_NATUREZAS_BI on table/view FIN_NATUREZAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_NATUREZAS_BI FOR FIN_NATUREZAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_NATUREZAS IS NULL) THEN
  NEW.PK_NATUREZAS = GEN_ID(GEN_FIN_NATUREZAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_ORCAMENTOS_BI on table/view FIN_ORCAMENTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_ORCAMENTOS_BI FOR FIN_ORCAMENTOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_ORCAMENTOS IS NULL) THEN
  NEW.PK_ORCAMENTOS = GEN_ID(GEN_FIN_ORCAMENTOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_TIPOEMPRESTIMOS_BI on table/view FIN_TIPOEMPRESTIMOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_TIPOEMPRESTIMOS_BI FOR FIN_TIPOEMPRESTIMOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TIPOEMPRESTIMOS IS NULL) THEN
  NEW.PK_TIPOEMPRESTIMOS = GEN_ID(GEN_FIN_TIPOEMPRESTIMOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_TIPOINSTRUCACOBRANCA_BI on table/view FIN_TIPOINSTRUCACOBRANCA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_TIPOINSTRUCACOBRANCA_BI FOR FIN_TIPOINSTRUCACOBRANCA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TIPOINSTRUCAO IS NULL) THEN
  NEW.PK_TIPOINSTRUCAO = GEN_ID(GEN_FIN_TIPOINSTRUCACOBRANCA_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIN_TIPOOCORCOBRANCA_BI on table/view FIN_TIPOOCORCOBRANCA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIN_TIPOOCORCOBRANCA_BI FOR FIN_TIPOOCORCOBRANCA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TIPOOCORCOBRANCA IS NULL) THEN
  NEW.PK_TIPOOCORCOBRANCA = GEN_ID(GEN_FIN_TIPOOCORCOBRANCA_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIS_BANCOS_CONTRATOS_BI on table/view FIS_BANCOS_CONTRATOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIS_BANCOS_CONTRATOS_BI FOR FIS_BANCOS_CONTRATOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_BANCOCONTRATO IS NULL) THEN
  NEW.PK_BANCOCONTRATO = GEN_ID(GEN_FIS_BANCOS_CONTRATOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIS_PLANOCONTASSUB_ID on table/view FIS_PLANOCONTASSUB
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIS_PLANOCONTASSUB_ID FOR FIS_PLANOCONTASSUB ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PLANOCONTASUB is null) or (new.PK_PLANOCONTASUB = 0) )
  then new.PK_PLANOCONTASUB = gen_id(FIS_PLANOCONTASSUB_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FIS_PLANOCONTAS_ID on table/view FIS_PLANOCONTAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FIS_PLANOCONTAS_ID FOR FIS_PLANOCONTAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PLANOSCONTAS is null) or (new.PK_PLANOSCONTAS = 0) )
  then new.PK_PLANOSCONTAS = gen_id(FIS_PLANOCONTAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FORNECEDORES_AI0 on table/view FORNECEDORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FORNECEDORES_AI0 FOR FORNECEDORES ACTIVE AFTER INSERT POSITION 0 AS
begin
  /* Trigger text */
  /*apos a inserçao de novo registro, atualizar
   QUANTFORNECEDORES em LOGRADOUROS */ /*$$IBE$$ 

  update LOGRADOURO
  set QUANTFORNECEDORES = QUANTFORNECEDORES + 1
  where LOGRADOURO.CEP = new.CEP;
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FORNECEDORES_APELIDO1 on table/view FORNECEDORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FORNECEDORES_APELIDO1 FOR FORNECEDORES ACTIVE BEFORE INSERT POSITION 0 AS
begin 
  new.APELIDO = UPPER(new.APELIDO);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FORNECEDORES_APELIDO2 on table/view FORNECEDORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FORNECEDORES_APELIDO2 FOR FORNECEDORES ACTIVE BEFORE UPDATE POSITION 0 AS
begin 
  new.APELIDO = UPPER(new.APELIDO);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FORNECEDORES_BI on table/view FORNECEDORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FORNECEDORES_BI FOR FORNECEDORES ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_fornecedor is null) then
    new.pk_fornecedor = gen_id(gen_fornecedores_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FORNECEDORES_RAZAOSOCIAL1 on table/view FORNECEDORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FORNECEDORES_RAZAOSOCIAL1 FOR FORNECEDORES ACTIVE BEFORE INSERT POSITION 0 AS
begin 
  new.RAZAOSOCIAL = UPPER(new.RAZAOSOCIAL);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FORNECEDORES_RAZAOSOCIAL2 on table/view FORNECEDORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FORNECEDORES_RAZAOSOCIAL2 FOR FORNECEDORES ACTIVE BEFORE UPDATE POSITION 0 AS
begin 
  new.RAZAOSOCIAL = UPPER(new.RAZAOSOCIAL);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger FORN_CONTATOS_BI on table/view FORN_CONTATOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER FORN_CONTATOS_BI FOR FORN_CONTATOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_contatos is null) then
    new.pk_contatos = gen_id(gen_forn_contatos_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger IBE$LOG_TABLES_BD on table/view IBE$LOG_TABLES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER IBE$LOG_TABLES_BD FOR IBE$LOG_TABLES ACTIVE BEFORE DELETE POSITION 0 AS
BEGIN
  DELETE FROM IBE$LOG_FIELDS WHERE LOG_TABLES_ID = OLD.ID;
  DELETE FROM IBE$LOG_BLOB_FIELDS WHERE LOG_TABLES_ID = OLD.ID;
  DELETE FROM IBE$LOG_KEYS WHERE LOG_TABLES_ID = OLD.ID;
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger IDIOMAS_BI on table/view IDIOMAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER IDIOMAS_BI FOR IDIOMAS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_idioma is null) then
    new.pk_idioma = gen_id(gen_idiomas_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOCALESTOQUEENDERECOS_ID on table/view LOCALESTOQUEENDERECOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOCALESTOQUEENDERECOS_ID FOR LOCALESTOQUEENDERECOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_LOCALESTOQUEENDERECO is null) or (new.PK_LOCALESTOQUEENDERECO = 0) )
  then new.PK_LOCALESTOQUEENDERECO = gen_id(LOCALESTOQUEENDERECOS_GEN, 1);   
  if (inserting) then
  begin
    new.fk_empresa = 1;
    new.fk_filial = 1;
  end           

  new.enderecompleto = 
  new.fk_empresa || '.' || new.fk_filial || '.' || NEW.FK_LOCALESTOQUE || '.' || ( new.PK_LOCALESTOQUEENDERECO) || '.' ||
  new.END_RUA || '.' || new.END_ENDERECO || '.' || NEW.END_ANDAR || '.' || NEW.END_APARTAMENTO || '.' || NEW.END_SALA;

end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOCALESTOQUE_ID on table/view LOCALESTOQUE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOCALESTOQUE_ID FOR LOCALESTOQUE ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_LOCALESTOQUE is null) or (new.PK_LOCALESTOQUE = 0) )
  then new.PK_LOCALESTOQUE = gen_id(LOCALESTOQUE_GEN, 1);  

end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOCESTOQUE_CRIAENDERECOS on table/view LOCALESTOQUE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOCESTOQUE_CRIAENDERECOS FOR LOCALESTOQUE ACTIVE AFTER INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates

  Trigger:

  Author   : , 
  Date     : 31/07/2011 01:07:53
  Purpose  :
*/
declare status char(1);
begin
        select * from criaenderecos(new.PK_LOCALESTOQUE)    into :status;
  /* code */
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOGRADOURO_BI on table/view LOGRADOURO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOGRADOURO_BI FOR LOGRADOURO ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_logradouro is null) then
    new.pk_logradouro = gen_id(gen_logradouro_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_CALENDARIOS_BI on table/view LOG_CALENDARIOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_CALENDARIOS_BI FOR LOG_CALENDARIOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_CALENDARIOS IS NULL) THEN
  NEW.PK_CALENDARIOS = GEN_ID(GEN_LOG_CALENDARIOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_CALENDARIOS_ITEM_BI on table/view LOG_CALENDARIOS_ITEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_CALENDARIOS_ITEM_BI FOR LOG_CALENDARIOS_ITEM ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_CALEND_ITEM IS NULL) THEN
  NEW.PK_CALEND_ITEM = GEN_ID(GEN_LOG_CALENDARIOS_ITEM_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_REGRAENTREGA_BI on table/view LOG_REGRAENTREGA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_REGRAENTREGA_BI FOR LOG_REGRAENTREGA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_REGRAENTREGA IS NULL) THEN
  NEW.PK_REGRAENTREGA = GEN_ID(GEN_LOG_REGRAENTREGA_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_REGRAENTREGA_ITEM_BI on table/view LOG_REGRAENTREGA_ITEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_REGRAENTREGA_ITEM_BI FOR LOG_REGRAENTREGA_ITEM ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_REGRAENTREGAITEM IS NULL) THEN
  NEW.PK_REGRAENTREGAITEM = GEN_ID(GEN_LOG_REGRAENTREGA_ITEM_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_ROTAS_BI on table/view LOG_ROTAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_ROTAS_BI FOR LOG_ROTAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_ROTAS IS NULL) THEN
  NEW.PK_ROTAS = GEN_ID(GEN_LOG_ROTAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_TEMPOSERVICO_BI on table/view LOG_TEMPOSERVICO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_TEMPOSERVICO_BI FOR LOG_TEMPOSERVICO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TEMPOSERVICO IS NULL) THEN
  NEW.PK_TEMPOSERVICO = GEN_ID(GEN_LOG_TEMPOSERVICO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_TEMPOSERVICO_ITEM_BI on table/view LOG_TEMPOSERVICO_ITEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_TEMPOSERVICO_ITEM_BI FOR LOG_TEMPOSERVICO_ITEM ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TEMPOSERVICOITEM IS NULL) THEN
  NEW.PK_TEMPOSERVICOITEM = GEN_ID(GEN_LOG_TEMPOSERVICO_ITEM_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_TIPOSCARGAS_BI on table/view LOG_TIPOSCARGAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_TIPOSCARGAS_BI FOR LOG_TIPOSCARGAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TIPOSCARGAS IS NULL) THEN
  NEW.PK_TIPOSCARGAS = GEN_ID(GEN_LOG_TIPOSCARGAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_TIPOZONAARMAZENAGEM_BI on table/view LOG_TIPOZONAARMAZENAGEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_TIPOZONAARMAZENAGEM_BI FOR LOG_TIPOZONAARMAZENAGEM ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_ZONAARMAZENAGEM IS NULL) THEN
  NEW.PK_ZONAARMAZENAGEM = GEN_ID(GEN_LOG_TIPOZONAARMAZENAGEM_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_UNITIZADORES_BI on table/view LOG_UNITIZADORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_UNITIZADORES_BI FOR LOG_UNITIZADORES ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_UNITIZADOR IS NULL) THEN
  NEW.PK_UNITIZADOR = GEN_ID(GEN_LOG_UNITIZADORES_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_VEICMOVIMENTO_BI on table/view LOG_VEICMOVIMENTO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_VEICMOVIMENTO_BI FOR LOG_VEICMOVIMENTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.SEQUENCIAL IS NULL) THEN
    NEW.SEQUENCIAL = GEN_ID(GEN_VEICMOVIMENTO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_ZONAS_BI on table/view LOG_ZONAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_ZONAS_BI FOR LOG_ZONAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_ZONAS IS NULL) THEN
  NEW.PK_ZONAS = GEN_ID(GEN_LOG_ZONAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_ZONAS_SETORES_BI on table/view LOG_ZONAS_SETORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_ZONAS_SETORES_BI FOR LOG_ZONAS_SETORES ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_ZONAS_SETORES IS NULL) THEN
  NEW.PK_ZONAS_SETORES = GEN_ID(GEN_LOG_ZONAS_SETORES_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger LOG_ZONA_SETOR_PONTOS_BI on table/view LOG_ZONA_SETOR_PONTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER LOG_ZONA_SETOR_PONTOS_BI FOR LOG_ZONA_SETOR_PONTOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_ZONA_SETOR_PONTOS IS NULL) THEN
  NEW.PK_ZONA_SETOR_PONTOS = GEN_ID(GEN_LOG_ZONA_SETOR_PONTOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAIL_LANC_HORAS_AIU0 on table/view MAN_HORASTRABALHADAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAIL_LANC_HORAS_AIU0 FOR MAN_HORASTRABALHADAS ACTIVE AFTER INSERT OR UPDATE POSITION 0 AS
 /*$$IBE$$ declare variable pss varchar(30);
declare variable pstatus varchar(16);
declare variable pemail varchar(100);
declare variable ptodos char(1); $$IBE$$*/ 
begin /*$$IBE$$ 
  -- posiÃ§Ã£o 4 = enviar email apÃ³s lanÃ§amento de horas trabalhadas (insert / update)

  begin
    -- verifica se esta os foi gerada por uma ss
    select
      os.ss_codigo
    from
      os
    where
      os.os_codigo = new.OS_CODIGO
    into
      :pss;

    --if (:pss is not null) then
    begin
      -- pega a ss gerada e atualiza a tabela historico_email
      select
        h.status
      from
        historico_email h
      where
        cast(h.ss_codigo as varchar(30)) = :pss
      into
        :pstatus;
      if (row_count > 0) then
        begin
          -- Seta 1 na 4a posicao da string
          pstatus = substring(pstatus from 1 for 3) || '1' || substring(pstatus from 5 for 16);
          update
            historico_email
          set
            status = :pstatus, funcao = 'LANHT'
          where
            cast(ss_codigo as varchar(30)) = :pss;
        end
      else
        begin
          select cfgsigma.sigmamail_todos from cfgsigma into :ptodos;
          if (:ptodos = 'S') then
          begin
            pstatus = '0001000000000000';
            select u.email from os, usuario u
             where os.os_solicit = u.nome
               and os.os_codigo = new.os_codigo into :pemail;
            -- se encontrou o email pode incluir a linha no historico
            if (row_count > 0) then
            begin
              insert into historico_email (
                indice, ss_codigo, os_codigo, status, enviado, funcao, data_hora, email_remetente)
              values (
                0, cast(:pss as numeric(15,0)), new.OS_CODIGO, :pstatus, 'N', 'LANHT', current_timestamp, :pemail);
            end
        end
      end
    end
  end
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_5W2H_PECAS_BI on table/view MAN_5W2H_PECAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_5W2H_PECAS_BI FOR MAN_5W2H_PECAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_OSR_PECAS IS NULL) THEN
  NEW.PK_OSR_PECAS = GEN_ID(GEN_MAN_5W2H_PECAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_ACOMPANHAMENTO on table/view MAN_ACOMPANHAMENTO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_ACOMPANHAMENTO FOR MAN_ACOMPANHAMENTO ACTIVE BEFORE INSERT POSITION 0 AS
begin
new.codigo = gen_id(GNR_ACOMPANHAMENTO, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_AREAEXEC_ANEXO_BI on table/view MAN_AREAEXEC_ANEXO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_AREAEXEC_ANEXO_BI FOR MAN_AREAEXEC_ANEXO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.FK_AREAEXEC IS NULL) THEN
  NEW.FK_AREAEXEC = GEN_ID(GEN_MAN_AREAEXEC_ANEXO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_AREAEXEC_BI on table/view MAN_AREAEXEC
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_AREAEXEC_BI FOR MAN_AREAEXEC ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_AREAEXEC IS NULL) THEN
  NEW.PK_AREAEXEC = GEN_ID(GEN_MAN_AREAEXEC_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_AS_BUILT_BI on table/view MAN_AS_BUILT
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_AS_BUILT_BI FOR MAN_AS_BUILT ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_AS_BUILT IS NULL) THEN
  NEW.PK_AS_BUILT = GEN_ID(GEN_MAN_AS_BUILT_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_AUSENCIAS_BI on table/view MAN_AUSENCIAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_AUSENCIAS_BI FOR MAN_AUSENCIAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_AUSENCIAS IS NULL) THEN
  NEW.PK_AUSENCIAS = GEN_ID(GEN_MAN_AUSENCIAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_BANCO_AUSENCIAS_BI on table/view MAN_BANCO_AUSENCIAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_BANCO_AUSENCIAS_BI FOR MAN_BANCO_AUSENCIAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_BANCOAUSENCIA IS NULL) THEN
  NEW.PK_BANCOAUSENCIA = GEN_ID(GEN_MAN_BANCO_AUSENCIAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_BANCO_HORAS_EXTRAS_BI on table/view MAN_BANCO_HORAS_EXTRAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_BANCO_HORAS_EXTRAS_BI FOR MAN_BANCO_HORAS_EXTRAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_BCOHORASEXTRAS IS NULL) THEN
  NEW.PK_BCOHORASEXTRAS = GEN_ID(GEN_MAN_BANCO_HORAS_EXTRAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_CALIB_FICHAPADRAO_BI0 on table/view MAN_CALIB_FICHAPADRAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_CALIB_FICHAPADRAO_BI0 FOR MAN_CALIB_FICHAPADRAO ACTIVE BEFORE INSERT POSITION 0 AS
begin
new.codigo = gen_id(gnr_codficcalpadrao, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_CALIB_TEXTUAL_BI0 on table/view MAN_CALIB_TEXTUAL
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_CALIB_TEXTUAL_BI0 FOR MAN_CALIB_TEXTUAL ACTIVE BEFORE INSERT POSITION 0 AS
begin
new.codigo = gen_id(gnr_codcal_textual, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_CAUSAS_BI on table/view MAN_CAUSAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_CAUSAS_BI FOR MAN_CAUSAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_CAUSAS IS NULL) THEN
  NEW.PK_CAUSAS = GEN_ID(GEN_MAN_CAUSAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_CAUSAS_LISTA_BI on table/view MAN_CAUSAS_LISTA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_CAUSAS_LISTA_BI FOR MAN_CAUSAS_LISTA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_CAUSASLISTAS IS NULL) THEN
  NEW.PK_CAUSASLISTAS = GEN_ID(GEN_MAN_CAUSAS_LISTA_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_CELULUAS_CODIGOS_ID on table/view MAN_CELULUAS_CODIGOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_CELULUAS_CODIGOS_ID FOR MAN_CELULUAS_CODIGOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CELULAS is null) or (new.PK_CELULAS = 0) )
  then new.PK_CELULAS = gen_id(MAN_CELULUAS_CODIGOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_CHECKLIST_BI on table/view MAN_CHECKLIST
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_CHECKLIST_BI FOR MAN_CHECKLIST ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_CHECKLIST IS NULL) THEN
  NEW.PK_CHECKLIST = GEN_ID(GEN_MAN_CHECKLIST_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_DEFEITOS_BI on table/view MAN_DEFEITOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_DEFEITOS_BI FOR MAN_DEFEITOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_DEFEITOS IS NULL) THEN
  NEW.PK_DEFEITOS = GEN_ID(GEN_MAN_DEFEITOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_DISPAROS_BI on table/view MAN_DISPAROS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_DISPAROS_BI FOR MAN_DISPAROS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_DISPAROS IS NULL) THEN
  NEW.PK_DISPAROS = GEN_ID(GEN_MAN_DISPAROS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_EQUIPES_BI on table/view MAN_EQUIPES_N
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_EQUIPES_BI FOR MAN_EQUIPES_N ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_EQUIPES IS NULL) THEN
  NEW.PK_EQUIPES = GEN_ID(GEN_MAN_EQUIPES_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_EQUIPES_FUNC_BI on table/view MAN_EQUIPES_FUNC
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_EQUIPES_FUNC_BI FOR MAN_EQUIPES_FUNC ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_EQUIPES_FUNC IS NULL) THEN
  NEW.PK_EQUIPES_FUNC = GEN_ID(GEN_MAN_EQUIPES_FUNC_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_FAMILIAS_NEW_BI on table/view MAN_FAMILIAS_NEW
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_FAMILIAS_NEW_BI FOR MAN_FAMILIAS_NEW ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_FAMILIAS IS NULL) THEN
  NEW.PK_FAMILIAS = GEN_ID(GEN_MAN_FAMILIAS_NEW_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_FAMILIA_NORMAS_BI on table/view MAN_FAMILIA_NORMAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_FAMILIA_NORMAS_BI FOR MAN_FAMILIA_NORMAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.KF_FAM_NORMAS IS NULL) THEN
  NEW.KF_FAM_NORMAS = GEN_ID(GEN_MAN_FAMILIA_NORMAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_FERRAMCOMPL_BU0 on table/view MAN_FERRAMCOMPL
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_FERRAMCOMPL_BU0 FOR MAN_FERRAMCOMPL ACTIVE BEFORE UPDATE POSITION 1 AS
begin /*$$IBE$$ 
   update   FERRAMENTAS
   SET CODIGO = NEW.CODIFICACAO,
   DESCRICAO =NEW.DESCRICAO,
   QUANTIDADE = NEW.estatual,
   CUS_UNIT = NEW.CUSTOAQUISICAO,
   area_codig = NEW.CODAREA,
   set_codigo = NEW.CODSETOR
   WHERE FERRAMENTAS.codigo = NEW.codificacao;

 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_FICHATECNICA_BI on table/view MAN_FICHATECNICA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_FICHATECNICA_BI FOR MAN_FICHATECNICA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_FICHATECNICA IS NULL) THEN
  NEW.PK_FICHATECNICA = GEN_ID(GEN_MAN_FICHATECNICA_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_FUNCOES_BI on table/view MAN_FUNCOES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_FUNCOES_BI FOR MAN_FUNCOES ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_FUNCAO IS NULL) THEN
  NEW.PK_FUNCAO = GEN_ID(GEN_MAN_FUNCOES_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_HISTORICOS_BI on table/view MAN_HISTORICOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_HISTORICOS_BI FOR MAN_HISTORICOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_HISTORICOS IS NULL) THEN
  NEW.PK_HISTORICOS = GEN_ID(GEN_MAN_HISTORICOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_INSPECAO_N_BI on table/view MAN_INSPECAO_N
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_INSPECAO_N_BI FOR MAN_INSPECAO_N ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_INSPECAO IS NULL) THEN
  NEW.PK_INSPECAO = GEN_ID(GEN_MAN_INSPECAO_N_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_INTERVENCAO_N_BI on table/view MAN_INTERVENCAO_N
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_INTERVENCAO_N_BI FOR MAN_INTERVENCAO_N ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_INTERVENCAO IS NULL) THEN
  NEW.PK_INTERVENCAO = GEN_ID(GEN_MAN_INTERVENCAO_N_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_ORIGEM_NEW_BI on table/view MAN_ORIGEM_NEW
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_ORIGEM_NEW_BI FOR MAN_ORIGEM_NEW ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_ORIGEM IS NULL) THEN
  NEW.PK_ORIGEM = GEN_ID(GEN_MAN_ORIGEM_NEW_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_OS_BI on table/view MAN_OS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_OS_BI FOR MAN_OS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_OS IS NULL) THEN
  NEW.PK_OS = GEN_ID(GEN_MAN_OS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_PECA_ALMOXARIFADO_AIUD0 on table/view MAN_PECA_ALMOXARIFADO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_PECA_ALMOXARIFADO_AIUD0 FOR MAN_PECA_ALMOXARIFADO ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 0 AS
 /*$$IBE$$ declare variable vmulti_estoq char(1);
declare variable vmulti_dep char(1);
declare variable vtotal_pecas numeric(15,3);
declare variable vestoq_min numeric(15,3);
declare variable vestoq_max numeric(15,3); $$IBE$$*/ 
begin
  /* se multiestoque estÃ¡ ativo */ /*$$IBE$$ 
  select multi_estoq, multi_dep from cfgsigma into :vmulti_estoq, :vmulti_dep;
  if ((:vmulti_estoq = 'S') and (:vmulti_dep = 'S')) then
  begin
     $$IBE$$*/ /* pega a soma da peca atual independente de depto*/ /*$$IBE$$ 
    select sum(pc_estoatu), min(pc_estomin), max(pc_estomax) from peca_depto
     where pc_codigo = coalesce(new.pc_codigo, old.pc_codigo)
      into :vtotal_pecas, vestoq_min, vestoq_max;
     $$IBE$$*/ /* atribui a tabela pecas */ /*$$IBE$$ 
    update pecas
       set pc_estoatu = coalesce(:vtotal_pecas, 0),
           pc_estomin = coalesce(:vestoq_min, 0),
           pc_estomax = coalesce(:vestoq_max, 0)
     where pc_codigo = coalesce(new.pc_codigo, old.pc_codigo);
  end
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_PECA_DEVOLUCAO_AI0 on table/view MAN_PECA_DEVOLUCAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_PECA_DEVOLUCAO_AI0 FOR MAN_PECA_DEVOLUCAO ACTIVE AFTER INSERT POSITION 0 AS
 /*$$IBE$$ declare variable vmulti_estoq char(1);
declare variable vmulti_dep char(1); $$IBE$$*/ 
begin
  /* se multiestoque estÃ¡ ativo */ /*$$IBE$$ 
  select multi_estoq, multi_dep from cfgsigma into :vmulti_estoq, :vmulti_dep;
  if ((:vmulti_estoq = 'S') and (:vmulti_dep = 'S')) then
  begin
    if (not((new.dep_codigo is null) or (new.dep_codigo = '')))  then
    begin
      update peca_depto set pc_estoatu = pc_estoatu + coalesce(new.qts, 0)
       where pc_codigo = new.pc_codigo and dep_codigo = new.dep_codigo;
    end
  end
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_PECA_ENTRADAS_AI0 on table/view MAN_PECA_ENTRADAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_PECA_ENTRADAS_AI0 FOR MAN_PECA_ENTRADAS ACTIVE AFTER INSERT POSITION 0 AS
 /*$$IBE$$ declare variable vmulti_estoq char(1);
declare variable vmulti_dep char(1); $$IBE$$*/ 
begin
  /* se multiestoque estÃ¡ ativo */ /*$$IBE$$ 
  select multi_estoq, multi_dep from cfgsigma into :vmulti_estoq, :vmulti_dep;
  if ((:vmulti_estoq = 'S') and (:vmulti_dep = 'S')) then
  begin
    if (not((new.dep_codigo is null) or (new.dep_codigo = '')))  then
    begin
      update peca_depto set pc_estoatu = pc_estoatu + coalesce(new.qts, 0)
       where pc_codigo = new.pc_codigo and dep_codigo = new.dep_codigo;
    end
  end
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_PECA_SAIDA_AI0 on table/view MAN_PECA_SAIDA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_PECA_SAIDA_AI0 FOR MAN_PECA_SAIDA ACTIVE AFTER INSERT POSITION 0 AS
 /*$$IBE$$ declare variable vmulti_estoq char(1);
declare variable vmulti_dep char(1); $$IBE$$*/ 
begin
  /* se multiestoque estÃ¡ ativo */ /*$$IBE$$ 
  select multi_estoq, multi_dep from cfgsigma into :vmulti_estoq, :vmulti_dep;
  if ((:vmulti_estoq = 'S') and (:vmulti_dep = 'S')) then
  begin
    if (not((new.dep_codigo is null) or (new.dep_codigo = '')))  then
    begin
      update peca_depto set pc_estoatu = pc_estoatu - coalesce(new.qts, 0)
       where pc_codigo = new.pc_codigo and dep_codigo = new.dep_codigo;
    end
  end
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_PECA_TRANSF_BI0 on table/view MAN_PECA_TRANSF
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_PECA_TRANSF_BI0 FOR MAN_PECA_TRANSF ACTIVE BEFORE INSERT POSITION 0 AS
begin
  NEW.id = GEN_ID(codpeca_transf, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_PRIORIDADE_BI on table/view MAN_PRIORIDADE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_PRIORIDADE_BI FOR MAN_PRIORIDADE ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_PRIORIDADE IS NULL) THEN
  NEW.PK_PRIORIDADE = GEN_ID(GEN_MAN_PRIORIDADE_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_PRIORIDADE_N_BI on table/view MAN_PRIORIDADE_N
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_PRIORIDADE_N_BI FOR MAN_PRIORIDADE_N ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_PRIORIDADE IS NULL) THEN
  NEW.PK_PRIORIDADE = GEN_ID(GEN_MAN_PRIORIDADE_N_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_PROCESSOS_CODIGOS_ID on table/view MAN_PROCESSOS_CODIGOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_PROCESSOS_CODIGOS_ID FOR MAN_PROCESSOS_CODIGOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PROCESSOS is null) or (new.PK_PROCESSOS = 0) )
  then new.PK_PROCESSOS = gen_id(MAN_PROCESSOS_CODIGOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SECAO_BI on table/view MAN_SECAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SECAO_BI FOR MAN_SECAO ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.sequencial is null) then
    new.sequencial = gen_id(gen_secao_id,1);
  if (new.empresa is null) then
  new.empresa =1;
  if (new.filial is null) then
  new.filial = 1;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SERVICOSPADRAO_BI on table/view MAN_SERVICOSPADRAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SERVICOSPADRAO_BI FOR MAN_SERVICOSPADRAO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_SERVICOPADRAO IS NULL) THEN
  NEW.PK_SERVICOPADRAO = GEN_ID(GEN_MAN_SERVICOSPADRAO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SERVICOS_FUNCAO_BI on table/view MAN_SERVICOS_FUNCAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SERVICOS_FUNCAO_BI FOR MAN_SERVICOS_FUNCAO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_SERVICO_FUNCAO IS NULL) THEN
  NEW.PK_SERVICO_FUNCAO = GEN_ID(GEN_MAN_SERVICOS_FUNCAO_ID,1);
  /* AJUSTA O VALOR DO SERVIÇO BASEADO NO ((FUNCAO.SALARIO BASE) / 240 ) * TEMPO DE EXECUÇÃO */ 
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SERVICOS_N_BI on table/view MAN_SERVICOS_N
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SERVICOS_N_BI FOR MAN_SERVICOS_N ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_SERVICOS IS NULL) THEN
  NEW.PK_SERVICOS = GEN_ID(GEN_MAN_SERVICOS_N_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SINTOMAS_FERR_BI on table/view MAN_SINTOMAS_FERR
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SINTOMAS_FERR_BI FOR MAN_SINTOMAS_FERR ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.FK_SINTOMAS_FERR IS NULL) THEN
  NEW.FK_SINTOMAS_FERR = GEN_ID(GEN_MAN_SINTOMAS_FERR_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SINTOMAS_INTERV_BI on table/view MAN_SINTOMAS_INTERV
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SINTOMAS_INTERV_BI FOR MAN_SINTOMAS_INTERV ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_SINTOMA_INTERV IS NULL) THEN
  NEW.PK_SINTOMA_INTERV = GEN_ID(GEN_MAN_SINTOMAS_INTERV_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SINTOMAS_NORMAS_BI on table/view MAN_SINTOMAS_NORMAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SINTOMAS_NORMAS_BI FOR MAN_SINTOMAS_NORMAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.FK_SINT_NORMAS IS NULL) THEN
  NEW.FK_SINT_NORMAS = GEN_ID(GEN_MAN_SINTOMAS_NORMAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SINTOMAS_N_BI on table/view MAN_SINTOMAS_N
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SINTOMAS_N_BI FOR MAN_SINTOMAS_N ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_SINTOMAS IS NULL) THEN
  NEW.PK_SINTOMAS = GEN_ID(GEN_MAN_SINTOMAS_N_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SINTOMAS_PECAS_BI on table/view MAN_SINTOMAS_PECAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SINTOMAS_PECAS_BI FOR MAN_SINTOMAS_PECAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_SINTOMA_PECAS IS NULL) THEN
  NEW.PK_SINTOMA_PECAS = GEN_ID(GEN_MAN_SINTOMAS_PECAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SINTOMA_DETALHAMENTO_BI on table/view MAN_SINTOMA_DETALHAMENTO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SINTOMA_DETALHAMENTO_BI FOR MAN_SINTOMA_DETALHAMENTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.INDICE IS NULL) THEN
  NEW.INDICE = GEN_ID(GEN_MAN_SINTOMA_DETALHAMENTO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SITUACAO_ID on table/view MAN_SITUACAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SITUACAO_ID FOR MAN_SITUACAO ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_SITUACAO is null) or (new.PK_SITUACAO = 0) )
  then new.PK_SITUACAO = gen_id(MAN_SITUACAO_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SOLUCAO_BI on table/view MAN_SOLUCAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SOLUCAO_BI FOR MAN_SOLUCAO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_SOLUCAO IS NULL) THEN
  NEW.PK_SOLUCAO = GEN_ID(GEN_MAN_SOLUCAO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAN_SS_MEDICAO_ITENS_BI0 on table/view MAN_SS_MEDICAO_ITENS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAN_SS_MEDICAO_ITENS_BI0 FOR MAN_SS_MEDICAO_ITENS ACTIVE BEFORE INSERT POSITION 0 AS
begin
new.codigo = gen_id(gnr_itens_ss_medicao, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAQUINAS_ANEXOS_ID on table/view MAQUINAS_ANEXOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAQUINAS_ANEXOS_ID FOR MAQUINAS_ANEXOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_MAQUINAS_ANEXOS is null) or (new.PK_MAQUINAS_ANEXOS = 0) )
  then new.PK_MAQUINAS_ANEXOS = gen_id(MAQUINAS_ANEXOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAQUINAS_CODIGO_ID on table/view MAQUINAS_CODIGO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAQUINAS_CODIGO_ID FOR MAQUINAS_CODIGO ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_MAQUINAS is null) or (new.PK_MAQUINAS = 0) )
  then new.PK_MAQUINAS = gen_id(MAQUINAS_CODIGO_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAQUINAS_HITORICOS_ID on table/view MAQUINAS_HITORICOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAQUINAS_HITORICOS_ID FOR MAQUINAS_HITORICOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_MAQ_HISTORICOS is null) or (new.PK_MAQ_HISTORICOS = 0) )
  then new.PK_MAQ_HISTORICOS = gen_id(MAQUINAS_HITORICOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAQUINAS_ID on table/view MAQUINAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAQUINAS_ID FOR MAQUINAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_MAQUINAS is null) or (new.PK_MAQUINAS = 0) )
  then new.PK_MAQUINAS = gen_id(MAQUINAS_GEN, 1);     
  if (new.fk_familias is null) then 
     new.fk_familias = 1;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAQUINAS_IMAGENS_ID on table/view MAQUINAS_IMAGENS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAQUINAS_IMAGENS_ID FOR MAQUINAS_IMAGENS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_MAQ_IMAGENS is null) or (new.PK_MAQ_IMAGENS = 0) )
  then new.PK_MAQ_IMAGENS = gen_id(MAQUINAS_IMAGENS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAQUINAS_PECAS_ID on table/view MAQUINAS_PECAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAQUINAS_PECAS_ID FOR MAQUINAS_PECAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_MAQUINAS_PECAS is null) or (new.PK_MAQUINAS_PECAS = 0) )
  then new.PK_MAQUINAS_PECAS = gen_id(MAQUINAS_PECAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAQUINAS_SINTOMAS_ID on table/view MAQUINAS_SINTOMAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAQUINAS_SINTOMAS_ID FOR MAQUINAS_SINTOMAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_MAQ_SINTOMAS is null) or (new.PK_MAQ_SINTOMAS = 0) )
  then new.PK_MAQ_SINTOMAS = gen_id(MAQUINAS_SINTOMAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAQUINAS_TAGS on table/view MAQUINAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAQUINAS_TAGS FOR MAQUINAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
  AO inserir uma maquinas, se for TIPOMAQUINAS = I = INDUSTRIAL
  lancar junto um registro na tabela TAGS, ]
  COMO DIVERSOS
  
  Trigger:

  Author   : , 
  Date     : 04/08/2011 23:44:11
  Purpose  :
*/
begin
  
  
     INSERT INTO TAGS
(
 FK_EMPRESAS,
 FK_FILIAIS,
 FK_DEPARTAMENTO,
 FK_SETORES,
 FK_PROCESSOS,
 FK_CELULAS,
 FK_MAQUINAS,

 DESCRICAO,
 PRODUTOS,
 DATAINICIAL,
 FK_CENTROCUSTO,
 FK_FAMILIAS,
 FK_PRIORIDADE,
 TAG_MULTIPLO,
 TAG_PARADO,
 TAG_PESO,
 VALORCRITICIDADE,
 DIAS_RETRABALHO,
 AFETA_PRODUCAO,
 HORA_DISPONIVEL,
 TEMPO_MAXIMO_PARADA,
 MTBF,
 TAG_DATA
)
VALUES
(
 new.FK_EMPRESAS,
 new.FK_FILIAIS,
 new.FK_DEPARTAMENTOS,
 new.FK_SETORES,
 new.FK_PROCESSOS,
 new.FK_CELULAS,
 new.PK_MAQUINAS,
 trim(new.descricao) || ' - ' || 'DIVERSOS',
 'N'  /*PRODUTOS*/,
 NULL  /*DATAINICIAL*/,
 NEW.FK_CENTROCUSTOS,
 NEW.FK_FAMILIAS,
 NEW.FK_PRIORIDADE,
 'N'  /*TAG_MULTIPLO*/,
 'N'  /*TAG_PARADO*/,
 0  /*TAG_PESO*/,
 NEW.VALORCRITICIDADE,
 0  /*DIAS_RETRABALHO*/,
 'S'  /*AFETA_PRODUCAO*/,
 NULL  /*HORA_DISPONIVEL*/,
 NULL  /*TEMPO_MAXIMO_PARADA*/,
 0  /*MTBF*/,
 NULL  /*TAG_DATA*/
);



         
  
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAT_COTACAOCOMPRA_BI on table/view MAT_COTACAOCOMPRA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAT_COTACAOCOMPRA_BI FOR MAT_COTACAOCOMPRA ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_cotacoes is null) then
    new.pk_cotacoes = gen_id(gen_cotacaocompra_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MAT_VEICITEM_BI on table/view MAT_VEICITEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MAT_VEICITEM_BI FOR MAT_VEICITEM ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.codveicitem is null) then
    new.codveicitem = gen_id(gen_veicitem_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger MOTORISTAS_BI on table/view MOTORISTAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER MOTORISTAS_BI FOR MOTORISTAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN                                          
   IF (NEW.ID IS NULL) THEN          
      NEW.ID = GEN_ID(GEN_MOTORISTAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger NC_ETAPASPASSOS_ID on table/view NC_ETAPASPASSOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER NC_ETAPASPASSOS_ID FOR NC_ETAPASPASSOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_NC_ETAPAS is null) or (new.PK_NC_ETAPAS = 0) )
  then new.PK_NC_ETAPAS = gen_id(NC_ETAPASPASSOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger NC_TABELACAUSAS_ID on table/view NC_TABELACAUSAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER NC_TABELACAUSAS_ID FOR NC_TABELACAUSAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CODIGOCAUSAS is null) or (new.PK_CODIGOCAUSAS = 0) )
  then new.PK_CODIGOCAUSAS = gen_id(NC_TABELACAUSAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger NORMAS_BI on table/view MAN_NORMAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER NORMAS_BI FOR MAN_NORMAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_NORMAS IS NULL) THEN
  NEW.PK_NORMAS = GEN_ID(GEN_NORMAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PATMOVIMENTO_BI on table/view PATMOVIMENTO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PATMOVIMENTO_BI FOR PATMOVIMENTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_MOVIMENTO IS NULL) THEN
  NEW.PK_MOVIMENTO = GEN_ID(GEN_PATMOVIMENTO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PATRIMONIO_BI on table/view PATRIMONIO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PATRIMONIO_BI FOR PATRIMONIO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_PATRIMONIO IS NULL) THEN
  NEW.PK_PATRIMONIO = GEN_ID(GEN_PATRIMONIO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PATRIMONIO_GRUPOS_BI on table/view PATRIMONIO_GRUPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PATRIMONIO_GRUPOS_BI FOR PATRIMONIO_GRUPOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.CODGRUPO IS NULL) THEN
    NEW.CODGRUPO = GEN_ID(GEN_GRPATRIMO_ID,1);
    if (NEW.empresa IS NULL ) then
    NEW.EMPRESA =1;
    if (NEW.FILIAL IS NULL ) then
    NEW.FILIAL = 1;
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PATRIMONIO_TESTE_BI on table/view PATRIMONIO_TESTE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PATRIMONIO_TESTE_BI FOR PATRIMONIO_TESTE ACTIVE BEFORE INSERT POSITION 1 AS
begin
/* sempre usar o PATRIMONIO_SEQUENCIAL_GEN, incondicionalmente */ /*$$IBE$$ 
  new.SEQUENCIAL = gen_id(PATRIMONIO_SEQUENCIAL_GEN,1);

  if (new.empresa is null) then
    new.empresa = 1;
  if (new.FILIAL is null) then
    new.FILIAL = 1;

   $$IBE$$*/ /* ESCREVE O REGISTRO EM TEMPPATRI  */
  /*  se for extintor escreve em EXTINTORES */ /*$$IBE$$ 
    if (new.lancartemporario = 'SIM') then
    BEGIN
  insert into temppatri (
    BEM              ,
    INDICE           ,
    CONTA            ,
    CODBEM           ,
    DESCR1           ,
    DESCR2           ,
    DESCR3           ,
    DESCR4           ,
    DESCR5           ,
    DATAAQUISICAO    ,
    VALORAQUISICAO   ,
    FORNECEDOR       ,
    RESPONSAVEL      ,
    CODPATRIMONIO    ,
    VALORPATRIMONIO  ,
    DESCRICAO        ,
    GRUPOPATRIMO     ,
    CENTROCUSTO      ,
    UNIDADES         ,
    NOTAFISCAL       ,
    CODFORNECEDOR    ,
    DATAALOCACAO     ,
    SUBGRUPO         ,
    CODDEPTO         ,
    CODSETOR         ,
    CODSECAO         )
    values (
    '1',
    '1',
    '1',
    '1',
    new.DESCRICAO,
    new.descricao,
    new.DESCRICAO,
    new.DESCRICAO,
    new.DESCRICAO,
    new.DATAAQUISICAO,
    new.VALORCONTABIL,
    new.DESCRICAO,
    new.DESCRICAO,
    new.numpatrimonio,
    new.VALORCONTABIL,
    new.DESCRICAO,
    new.CODGRUPO,
    new.CENTROCUSTO,
    1,
    new.NOTAFISCAL,
    new.CODFORNECEDOR,
    new.DATAAQUISICAO,
    new.CODSGRUPO,
    new.CODDEPTO,
    new.CODSETOR,
    new.codsecao );

    END

     $$IBE$$*/ /* ao cadastrar um novo registro,
    lançar o um registro em  movimentação de patrimonio  */ /*$$IBE$$ 

    insert into patmovimento (

    EMPRESA           ,
    FILIAL            ,
    DATAMOVIMENTO     ,
    TIPOMOVIMENTO     ,
    SENTIDOMOVIMENTO  ,
    MOTIVOMOVIMENTO   ,
    EMITIRDOCFISCAL   ,
    CCUSTOORIGEM      ,
    CODDEPTOORIGEM    ,
    CODSETORORIGEM    ,
    CODSECAOORIGEM    ,
    CODFORNORIGEM     ,
    CCUSTODESTINO     ,
    CODDEPTODESTINO   ,
    CODSETORDESTINO   ,
    CODSECAODESTINO   ,
    CODFORNDESTINO    ,
    NUMPATRIMONIO
    )

    values (
    new.empresa,
    new.filial,
    new.dataaquisicao,
    'EXTENO',
    'ENTRADA',
    'AQUISICAO',
    'N',
    NEW.centrocusto, 
    NEW.CODDEPTO,
    NEW.CODSETOR,
    NEW.CODSECAO,
    NEW.CODFORNECEDOR,
    NEW.centrocusto, 
    NEW.coddepto, 
    NEW.CODSETOR,
    NEW.CODSECAO,
    NEW.CODFORNECEDOR,
    NEW.codfornecedor );

 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PAT_MOVIMENTO_TESTE_BI on table/view PAT_MOVIMENTO_TESTE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PAT_MOVIMENTO_TESTE_BI FOR PAT_MOVIMENTO_TESTE ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.nummovimento is null) then
    new.nummovimento = gen_id(gen_patmovimento_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PAT_OCOR_TESTE_BI on table/view PAT_OCOR_TESTE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PAT_OCOR_TESTE_BI FOR PAT_OCOR_TESTE ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.sequencial is null) then
    new.sequencial = gen_id(gen_pat_ocor_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PAT_TIPOOCOR_TESTE_BI on table/view PAT_TIPOOCOR_TESTE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PAT_TIPOOCOR_TESTE_BI FOR PAT_TIPOOCOR_TESTE ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.codocorrencia is null) then
    new.codocorrencia = gen_id(gen_pattipoocor_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PCP_FORMULACAO_BI on table/view PCP_FORMULACAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PCP_FORMULACAO_BI FOR PCP_FORMULACAO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_FORMULACAO IS NULL) THEN
  NEW.PK_FORMULACAO = GEN_ID(GEN_PCP_FORMULACAO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PCP_PROD_MAQUINAS_BI on table/view PCP_PROD_MAQUINAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PCP_PROD_MAQUINAS_BI FOR PCP_PROD_MAQUINAS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_PROD_MAQUINAS IS NULL) THEN
  NEW.PK_PROD_MAQUINAS = GEN_ID(GEN_PCP_PROD_MAQUINAS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_ANEXOS_ID on table/view PECAS_ANEXOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_ANEXOS_ID FOR PECAS_ANEXOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PECAS_ANEXOS is null) or (new.PK_PECAS_ANEXOS = 0) )
  then new.PK_PECAS_ANEXOS = gen_id(PECAS_ANEXOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_COTACAO_ID on table/view PECAS_COTACAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_COTACAO_ID FOR PECAS_COTACAO ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PECAS_COTACAO is null) or (new.PK_PECAS_COTACAO = 0) )
  then new.PK_PECAS_COTACAO = gen_id(PECAS_COTACAO_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_DEVOLUCAO_ID on table/view PECAS_DEVOLUCAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_DEVOLUCAO_ID FOR PECAS_DEVOLUCAO ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PECAS_DEVOLUCAO is null) or (new.PK_PECAS_DEVOLUCAO = 0) )
  then new.PK_PECAS_DEVOLUCAO = gen_id(PECAS_DEVOLUCAO_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_ENTRADAS_ID on table/view PECAS_ENTRADAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_ENTRADAS_ID FOR PECAS_ENTRADAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PECAS_ENTRADAS is null) or (new.PK_PECAS_ENTRADAS = 0) )
  then new.PK_PECAS_ENTRADAS = gen_id(PECAS_ENTRADAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_ID on table/view PECAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_ID FOR PECAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PECAS is null) or (new.PK_PECAS = 0) )
  then new.PK_PECAS = gen_id(PECAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_IMAGEM_ID on table/view PECAS_IMAGEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_IMAGEM_ID FOR PECAS_IMAGEM ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PECAS_IMAGEM is null) or (new.PK_PECAS_IMAGEM = 0) )
  then new.PK_PECAS_IMAGEM = gen_id(PECAS_IMAGEM_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_LOTACAO_ID on table/view PECAS_LOTACAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_LOTACAO_ID FOR PECAS_LOTACAO ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PECAS_LOTACAO is null) or (new.PK_PECAS_LOTACAO = 0) )
  then new.PK_PECAS_LOTACAO = gen_id(PECAS_LOTACAO_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_NORMAS_ID on table/view PECAS_NORMAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_NORMAS_ID FOR PECAS_NORMAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PECAS_NORMAS is null) or (new.PK_PECAS_NORMAS = 0) )
  then new.PK_PECAS_NORMAS = gen_id(PECAS_NORMAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_SAIDAS_DIAS_ID on table/view PECAS_SAIDAS_DIAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_SAIDAS_DIAS_ID FOR PECAS_SAIDAS_DIAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_SAIDAPECAS is null) or (new.PK_SAIDAPECAS = 0) )
  then new.PK_SAIDAPECAS = gen_id(PECAS_SAIDAS_DIAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_TESTE_ID on table/view PECAS_TESTE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_TESTE_ID FOR PECAS_TESTE ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.CODIGO is null) or (new.CODIGO = 0) )
  then new.CODIGO = gen_id(PECAS_TESTE_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PECAS_TRANSFERENCIAS_ID on table/view PECAS_TRANSFERENCIAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PECAS_TRANSFERENCIAS_ID FOR PECAS_TRANSFERENCIAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PECAS_TRANSFERENCIA is null) or (new.PK_PECAS_TRANSFERENCIA = 0) )
  then new.PK_PECAS_TRANSFERENCIA = gen_id(PECAS_TRANSFERENCIAS_GEN, 1);  
  
  /* VERIFICA AGORA SE ESTIVER FAZENDO TRANSFERENCIA DE ENTRADA - DAR BAIXA NO ESTOQUE E TRANSFERIR PARA OUTRO ESTOQUE
     FUNCAO A SER DESENVOLVIDA */
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PMOVIMENT_BI on table/view PMOVIMENT
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PMOVIMENT_BI FOR PMOVIMENT ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.id is null) then
    new.id = gen_id(gen_pmoviment_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PMOVPNEU_BI on table/view PMOVPNEU
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PMOVPNEU_BI FOR PMOVPNEU ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.id is null) then
    new.id = gen_id(gen_pmovpneu_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PNEUPOSICAO_BI on table/view PNEUPOSICAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PNEUPOSICAO_BI FOR PNEUPOSICAO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_PNEU_POSICAO IS NULL) THEN
  NEW.PK_PNEU_POSICAO = GEN_ID(GEN_PNEUPOSICAO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PNEU_MARCAS_BI on table/view PNEU_MARCAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PNEU_MARCAS_BI FOR PNEU_MARCAS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.id is null) then
    new.id = gen_id(gen_pmarcas_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PNEU_MODELOS_BI on table/view PNEU_MODELOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PNEU_MODELOS_BI FOR PNEU_MODELOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.id is null) then
    new.id = gen_id(gen_pmodelos_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PNEU_MOVIMENT_BI on table/view PNEU_MOVIMENT
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PNEU_MOVIMENT_BI FOR PNEU_MOVIMENT ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.id is null) then
    new.id = gen_id(gen_pmoviment_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PNEU_MOVPNEU_BI on table/view PNEU_MOVPNEU
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PNEU_MOVPNEU_BI FOR PNEU_MOVPNEU ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.id is null) then
    new.id = gen_id(gen_pmovpneu_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PROCESSOS_CELULAS on table/view PROCESSOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PROCESSOS_CELULAS FOR PROCESSOS ACTIVE AFTER INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates

  Trigger:

  Author   : , 
  Date     : 04/08/2011 13:04:06
  Purpose  :
*/
begin
 /* APOS A inclusão de um registro de PROCESSOS - LOCAL NA PLANTA
    verificar se o campo CRIARCELULASPREDIAL está setado para SIM
    se estiver, criar os registros prediais na tabela CELULAS
    usando o seguinte esquema
    "NOME DO PROCESSOS - PREDIAL" */
    
    if (new.CRIARCELULASPREDIAL = 'S') then 
    begin                                            
       INSERT INTO CELULAS
(
       FK_EMPRESAS,
       FK_FILIAIS,
       FK_DEPARTAMENTOS,
       FK_SETORES,
       FK_PROCESSOS,
       DESCRICAO,
       FK_CENTROCUSTO,
       CODIGOANTIGO,
       PREDIAL
)
VALUES
(
 new.FK_EMPRESAS,
 new.FK_FILIAIS,
 new.FK_DEPARTAMENTOS,
 new.FK_SETORES,
 new.PK_PROCESSOS,
 trim(NEW.DESCRICAO) || ' - ' || 'PREDIAL',
 ''  /*FK_CENTROCUSTO*/,
 ''  /*CODIGOANTIGO*/,
 'S'  /*PREDIAL*/
);
 
    
    end /* if (new.CRIARCELULASPREDIAL = 'S') then */ 
  /* code */
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PROCESSOS_ID on table/view PROCESSOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PROCESSOS_ID FOR PROCESSOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PROCESSOS is null) or (new.PK_PROCESSOS = 0) )
  then new.PK_PROCESSOS = gen_id(PROCESSOS_GEN, 1);
  NEW.FK_EMPRESAS = 1;
  NEW.FK_FILIAIS = 1;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOSSNGPC_AD0 on table/view PRODUTOSSNGPC
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOSSNGPC_AD0 FOR PRODUTOSSNGPC ACTIVE AFTER DELETE POSITION 0 AS
begin /*$$IBE$$ 
  DELETE FROM CODIGODEBARRAS WHERE CODIGOPRODUTO = OLD.CODIGO;
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOSSNGPC_AU on table/view PRODUTOSSNGPC
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOSSNGPC_AU FOR PRODUTOSSNGPC ACTIVE AFTER UPDATE POSITION 0 AS
begin /*$$IBE$$ 
   if (NEW.CODIGO <> OLD.CODIGO) then
   BEGIN
      UPDATE CODIGODEBARRAS SET CODIGOPRODUTO = NEW.CODIGO WHERE CODIGOPRODUTO = OLD.CODIGO;
      UPDATE ENTRADACONTROLADOS SET CODIGOPRODUTO = NEW.CODIGO WHERE (CODIGOPRODUTO = OLD.CODIGO) AND (TIPO = 'M');
      UPDATE ENTRADADEPRODUTOS SET CODIGOPRODUTO = NEW.CODIGO WHERE CODIGOPRODUTO = OLD.CODIGO;
      UPDATE ESTOQUEANVISA SET CODIGOPRODUTO = NEW.CODIGO WHERE CODIGOPRODUTO = OLD.CODIGO;
      UPDATE ESTOQUECCUSTO SET CODIGOPRODUTO = NEW.CODIGO WHERE CODIGOPRODUTO = OLD.CODIGO;
      UPDATE FECHAMENTOCHAMADOS SET CODIGOPRODUTO = NEW.CODIGO WHERE CODIGOPRODUTO = OLD.CODIGO;
      UPDATE HISTORICOEXCLUSAOANVISA SET CODIGOPRODUTO = NEW.CODIGO WHERE (CODIGOPRODUTO = OLD.CODIGO) AND (TIPO = 'M');
      UPDATE INVENTARIOANVISA SET CODIGO = NEW.CODIGO WHERE (CODIGO = OLD.CODIGO) AND (TIPO = 'M');
      UPDATE ITENSCONSORCIO SET CODIGOPRODUTO = NEW.CODIGO WHERE CODIGOPRODUTO = OLD.CODIGO;
      UPDATE ITENSENTRADASESAIDAS SET CODIGOPRODUTO = NEW.CODIGO WHERE CODIGOPRODUTO = OLD.CODIGO;
      UPDATE ITENSPERDA SET CODIGOPRODUTO = NEW.CODIGO WHERE (CODIGOPRODUTO = OLD.CODIGO) AND (TIPO = 'M');
      UPDATE ITENSSAIDACONTROLADOS SET CODIGOPRODUTO = NEW.CODIGO WHERE (CODIGOPRODUTO = OLD.CODIGO) AND (TIPOPRODUTO = 'M');
      UPDATE PEDIDOS SET CODIGOPRODUTO = NEW.CODIGO WHERE CODIGOPRODUTO = OLD.CODIGO;
      UPDATE PRODUTOSDERIVADOS SET PRODUTO = NEW.CODIGO WHERE PRODUTO = OLD.CODIGO;
      UPDATE TRANSFERENCIAANVISA SET CODIGOPRODUTO = NEW.CODIGO WHERE (CODIGOPRODUTO = OLD.CODIGO) AND (TIPO = 'M');
      UPDATE TRANSFERENCIAESTOQUE SET CODIGOPRODUTO = NEW.CODIGO WHERE CODIGOPRODUTO = OLD.CODIGO;
      UPDATE VENDAS SET CODIGOPRODUTO = NEW.CODIGO WHERE CODIGOPRODUTO = OLD.CODIGO;
   END
   if (NEW.REGMS <> OLD.REGMS) then
   BEGIN
      UPDATE ENTRADACONTROLADOS SET REGISTROMS = NEW.REGMS WHERE (CODIGOPRODUTO = NEW.CODIGO) AND (TIPO = 'M');
      UPDATE ITENSSAIDACONTROLADOS SET REGISTROMS = NEW.REGMS WHERE (CODIGOPRODUTO = NEW.CODIGO) AND (TIPOPRODUTO = 'M');
      UPDATE ITENSPERDA SET REGISTROMS = NEW.REGMS WHERE (CODIGOPRODUTO = NEW.CODIGO) AND (TIPO = 'M');
      UPDATE TRANSFERENCIAANVISA SET REGISTROMS = NEW.REGMS WHERE (CODIGOPRODUTO = NEW.CODIGO) AND (TIPO = 'M');
   END
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_AFTER on table/view PRODUTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_AFTER FOR PRODUTOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates

  Trigger:

  Author   : , 
  Date     : 03/08/2011 13:13:08
  Purpose  :
*/
begin
/* Ao cadastro um novo produto, verificar o TIPODEPRODUTOS
   SE FOR UMA PEÇA 
   lançar os dados na tabela de peças. 
   cria um registro na arquivo de peças com os dados de PRODUTOS 
   
   
  /* code */
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_AFTER_I on table/view PRODUTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_AFTER_I FOR PRODUTOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates

  Trigger:

  Author   : , 
  Date     : 03/08/2011 16:21:41
  Purpose  :
*/
begin
 /* verifica se o registro que foi inserido é do tipo 11 = PECAS DE EQUPAMENTOS
    se for, faz o lançamento de um registro no arquivo PECAS
    o qual fará os lancamentos necessarios em outras tabelas */
    if (new.tipoproduto = 11) then /* então eh peças mesmo, lancar */
    begin
    

INSERT INTO PECAS
(
 FK_EMPRESAS,
 FK_FILIAIS,
 DESCRICAO,     
 descricaoresumida,
 ESTOQUEMINIMO,
 ESTOQUEMAXIMO,
 ESTOQUEATUAL,
 ESTOQUEINICIAL,
 FK_UNIDCOMPRAS,
 FK_UNID_USO,
 CUSTOUNITARIO,
 ULTIMACOMPRA,
 ULTIMAENTESTOQUE,
 ULTIMASAIDAESTOQUE,
 FK_FORNPADRAO,
 FK_FABRICANTE,
 FK_PATRIMONIO,
 FK_PRODUTOS,
 VALORCRITICIDADE,
 CLASSIFICACAOFISCAL,
 CTACONTABILCREDITO,
 CTACONTABILDEBITO,
 CODIGOCONTABIL,
 VIDAUTIL,
 FK_UNDVIDAUTIL,
 LUBRIFICANTE,
 PC_GARANTIA,
 PC_G_PER,
 DATALIMITEGARANTIA,
 ITEMDEMANUTENCAO,
 TIPOARMAZENAMENTO
)
VALUES
(
NEW.FK_EMPRESAS,
NEW.FK_FILIAIS,
 NEW.DESCRICAO,    
 new.resumida,         

 1.0  /*ESTOQUEMINIMO*/,
 1.0  /*ESTOQUEMAXIMO*/,
 1.0  /*ESTOQUEATUAL*/,
 1.0  /*ESTOQUEINICIAL*/,
 NEW.PK_UNIDVENDA  /*FK_UNIDCOMPRAS*/,
 NEW.PK_UNIDVENDA  /*FK_UNID_USO*/,
 0.0  /*CUSTOUNITARIO*/,
 NULL  /*ULTIMACOMPRA*/,
 NULL  /*ULTIMAENTESTOQUE*/,
 NULL  /*ULTIMASAIDAESTOQUE*/,
 0  /*FK_FORNPADRAO*/,
 0  /*FK_FABRICANTE*/,
 0  /*FK_PATRIMONIO*/,
 new.pK_PRODUTOS,
 0  /*VALORCRITICIDADE*/,
 ''  /*CLASSIFICACAOFISCAL*/,
 0  /*CTACONTABILCREDITO*/,
 0  /*CTACONTABILDEBITO*/,
 ''  /*CODIGOCONTABIL*/,
 0  /*VIDAUTIL*/,
 0  /*FK_UNDVIDAUTIL*/,
 'N'  /*LUBRIFICANTE*/,
 ''  /*PC_GARANTIA*/,
 0  /*PC_G_PER*/,
 NULL  /*DATALIMITEGARANTIA*/,
 ''  /*ITEMDEMANUTENCAO*/,
 ''  /*TIPOARMAZENAMENTO*/
);

end /* tipoproduto = 11 */
  /* code */
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_APRESENTACAO_BI on table/view PRODUTOS_APRESENTACAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_APRESENTACAO_BI FOR PRODUTOS_APRESENTACAO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_PROD_APRESENTACAO IS NULL) THEN
  NEW.PK_PROD_APRESENTACAO = GEN_ID(GEN_PRODUTOS_APRESENTACAO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_BI on table/view PRODUTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_BI FOR PRODUTOS ACTIVE BEFORE INSERT POSITION 0 AS
begin /*$$IBE$$ 
  if (new.pk_produtos is null) then
    new.pk_produtos = gen_id(gen_produtos_id,1);
    if (new.mesanoreferencia = null) then
        begin
        new.mesanoreferencia = udf_month(current_date) || udf_year(current_date);
        end

 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_FAMILIAS_BI on table/view PRODUTOS_FAMILIAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_FAMILIAS_BI FOR PRODUTOS_FAMILIAS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_familia is null) then
    new.pk_familia = gen_id(gen_produto_familias_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_FORNECEDOR_BI on table/view PRODUTOS_FORNECEDOR
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_FORNECEDOR_BI FOR PRODUTOS_FORNECEDOR ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_prod_fornecedor is null) then
    new.pk_prod_fornecedor = gen_id(gen_produto_fornecedor_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_GRUPOS_BI on table/view PRODUTOS_GRUPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_GRUPOS_BI FOR PRODUTOS_GRUPOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_grupo is null) then
    new.pk_grupo = gen_id(gen_produto_grupos_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_ID on table/view PRODUTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_ID FOR PRODUTOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PRODUTOS is null) or (new.PK_PRODUTOS = 0) )
  then new.PK_PRODUTOS = gen_id(PRODUTOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_LOGISTICA_BI on table/view PRODUTOS_LOGISTICA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_LOGISTICA_BI FOR PRODUTOS_LOGISTICA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_PROD_LOGISTICA IS NULL) THEN
  NEW.PK_PROD_LOGISTICA = GEN_ID(GEN_PRODUTOS_LOGISTICA_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_MARCAS_BI on table/view PRODUTOS_MARCAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_MARCAS_BI FOR PRODUTOS_MARCAS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_prod_marcas is null) then
    new.pk_prod_marcas = gen_id(gen_produtos_marcas_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_MODELOS_BI on table/view PRODUTOS_MODELOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_MODELOS_BI FOR PRODUTOS_MODELOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_PROD_MODELOS IS NULL) THEN
  NEW.PK_PROD_MODELOS = GEN_ID(GEN_PRODUTOS_MODELOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_PRECOS_AI0 on table/view PRODUTOS_PRECOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_PRECOS_AI0 FOR PRODUTOS_PRECOS ACTIVE AFTER INSERT POSITION 0 AS
begin
  /* INSERE O NOVO REGISTRO NO ARQUIVO DE PROD_PRECOS_HISTORICOS*/ /*$$IBE$$ 
  insert into PRODUTO_PRECO_HISTOR (
    PK_EMPRESA              ,
    PK_FILIAL               ,
    PK_PRODUTOS             ,
    PK_DATAALTERACAO        ,
    MOTIVO                  ,
    CUSTOREPOSICAO          ,
    CUSTOCONTABIL           ,
    PRECOVENDA              )

    values ( 1,  $$IBE$$*/ /* a ser ajustado */ /*$$IBE$$ 
    1,  $$IBE$$*/ /* a ser ajustado */ /*$$IBE$$ 
    new.fk_produtos,
    current_timestamp,
    'R',  $$IBE$$*/ /* a ser ajustado */ /*$$IBE$$ 
    new.custoreposicao,
    new.custocontabil,
    new.precovenda);

 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_PRECOS_BI on table/view PRODUTOS_PRECOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_PRECOS_BI FOR PRODUTOS_PRECOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.sequencial is null) then
    new.sequencial = gen_id(gen_produtos_precos_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_PRECO_HISTOR_BI on table/view PRODUTOS_PRECO_HISTOR
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_PRECO_HISTOR_BI FOR PRODUTOS_PRECO_HISTOR ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.sequencial is null) then
    new.sequencial = gen_id(gen_produto_preco_histor_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_SECAO_BI on table/view PRODUTOS_SECAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_SECAO_BI FOR PRODUTOS_SECAO ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_secao is null) then
    new.pk_secao = gen_id(gen_produto_secao_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_SUBGRUPOS_BI on table/view PRODUTOS_SUBGRUPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_SUBGRUPOS_BI FOR PRODUTOS_SUBGRUPOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_subgrupos is null) then
    new.pk_subgrupos = gen_id(gen_produto_subgrupos_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_TIPO_BI on table/view PRODUTOS_TIPO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_TIPO_BI FOR PRODUTOS_TIPO ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_tipo_produto is null) then
    new.pk_tipo_produto = gen_id(gen_produto_tipo_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTOS_TOLERANCIA_REC_ID on table/view PRODUTOS_TOLERANCIA_REC
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTOS_TOLERANCIA_REC_ID FOR PRODUTOS_TOLERANCIA_REC ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_REGRAS_ENTRADA is null) or (new.PK_REGRAS_ENTRADA = 0) )
  then new.PK_REGRAS_ENTRADA = gen_id(PRODUTOS_TOLERANCIA_REC_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PRODUTO_EMBALAGEM_BI on table/view PRODUTO_EMBALAGEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PRODUTO_EMBALAGEM_BI FOR PRODUTO_EMBALAGEM ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_prod_embalagem is null) then
    new.pk_prod_embalagem = gen_id(gen_produto_embalagem_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PROD_ARMAZENAMENTO_BI on table/view PROD_ARMAZENAMENTO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PROD_ARMAZENAMENTO_BI FOR PROD_ARMAZENAMENTO ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_endereco is null) then
    new.pk_endereco = gen_id(gen_prod_armazenamento_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PROD_INSUMOS_AU on table/view PROD_INSUMOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PROD_INSUMOS_AU FOR PROD_INSUMOS ACTIVE AFTER UPDATE POSITION 0 AS
begin /*$$IBE$$ 
  if (COALESCE(NEW.DCB, '') <> COALESCE(OLD.DCB, '')) then
  BEGIN
     UPDATE ESTOQUEINSUMO SET CODIGOINSUMO = NEW.DCB WHERE (CODIGOINSUMO = OLD.DCB);
     UPDATE ENTRADACONTROLADOS SET CODIGOPRODUTO = NEW.DCB, REGISTROMS = SUBSTRING('00000' FROM 1 FOR 5 - CHAR_LENGTH(NEW.DCB))
     || NEW.DCB WHERE (CODIGOPRODUTO = OLD.DCB) AND (TIPO = 'I');
     UPDATE HISTORICOEXCLUSAOANVISA SET CODIGOPRODUTO = NEW.DCB WHERE (CODIGOPRODUTO = OLD.DCB) AND (TIPO = 'I');
     UPDATE INVENTARIOANVISA SET CODIGO = NEW.DCB, REGISTROMS = SUBSTRING('00000' FROM 1 FOR 5 - CHAR_LENGTH(NEW.DCB))
     || NEW.DCB WHERE (CODIGO = OLD.DCB) AND (TIPO = 'I');
     UPDATE ITENSPERDA SET CODIGOPRODUTO = NEW.DCB, REGISTROMS = SUBSTRING('00000' FROM 1 FOR 5 - CHAR_LENGTH(NEW.DCB))
     || NEW.DCB WHERE (CODIGOPRODUTO = OLD.DCB) AND (TIPO = 'I');
     UPDATE ITENSSAIDACONTROLADOS SET CODIGOPRODUTO = NEW.DCB, REGISTROMS = SUBSTRING('00000' FROM 1 FOR 5 - CHAR_LENGTH(NEW.DCB))
     || NEW.DCB WHERE (CODIGOPRODUTO = OLD.DCB) AND (TIPOPRODUTO = 'I');
     UPDATE TRANSFERENCIAANVISA SET CODIGOPRODUTO = NEW.DCB, REGISTROMS = SUBSTRING('00000' FROM 1 FOR 5 - CHAR_LENGTH(NEW.DCB))
     || NEW.DCB WHERE (CODIGOPRODUTO = OLD.DCB) AND (TIPO = 'I');
     UPDATE PRINCIPIOSATIVOS SET DCB = NEW.DCB WHERE DCB = OLD.DCB;
  END
  if (COALESCE(NEW.INSUMO, '') <> COALESCE(OLD.INSUMO, '')) then
     UPDATE PRINCIPIOSATIVOS SET INSUMO = NEW.INSUMO WHERE DCB = NEW.DCB;
  if (COALESCE(NEW.LISTA, '') <> COALESCE(OLD.LISTA, '')) then
     UPDATE PRINCIPIOSATIVOS SET LISTA = NEW.LISTA WHERE DCB = NEW.DCB;
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PROD_PALETES_BI on table/view PROD_PALETES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PROD_PALETES_BI FOR PROD_PALETES ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_palete is null) then
    new.pk_palete = gen_id(gen_prod_paletes_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PROD_PRESCRITORES_BI on table/view PROD_PRESCRITORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PROD_PRESCRITORES_BI FOR PROD_PRESCRITORES ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.CODIGO IS NULL) THEN
    NEW.CODIGO = GEN_ID(GEN_PRESCRITORES_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger PROD_REMD_TESTE_BI on table/view PROD_REMD_TESTE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER PROD_REMD_TESTE_BI FOR PROD_REMD_TESTE ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.sequencia is null) then
    new.sequencia = gen_id(gen_prod_remd_teste_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger REGRADESCONTOSCLIENTES_ID on table/view REGRADESCONTOSCLIENTES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER REGRADESCONTOSCLIENTES_ID FOR REGRADESCONTOSCLIENTES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_REGRADESCONTO is null) or (new.PK_REGRADESCONTO = 0) )
  then new.PK_REGRADESCONTO = gen_id(REGRADESCONTOSCLIENTES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger REPRESENTANTES_BI on table/view REPRESENTANTES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER REPRESENTANTES_BI FOR REPRESENTANTES ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_REPRESENTANTES IS NULL) THEN
  NEW.PK_REPRESENTANTES = GEN_ID(GEN_REPRESENTANTES_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger RH_CARGOS_ID on table/view RH_CARGOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER RH_CARGOS_ID FOR RH_CARGOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOS is null) or (new.PK_CARGOS = 0) )
  then new.PK_CARGOS = gen_id(RH_CARGOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger RH_FUNCOES_BI on table/view RH_FUNCOES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER RH_FUNCOES_BI FOR RH_FUNCOES ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_FUNCOES IS NULL) THEN
  NEW.PK_FUNCOES = GEN_ID(GEN_RH_FUNCOES_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger RH_PONTOS_BI on table/view RH_PONTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER RH_PONTOS_BI FOR RH_PONTOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_PONTOS IS NULL) THEN
  NEW.PK_PONTOS = GEN_ID(GEN_RH_PONTOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger RH_PONTOS_BLOQUEADOS_BI on table/view RH_PONTOS_BLOQUEADOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER RH_PONTOS_BLOQUEADOS_BI FOR RH_PONTOS_BLOQUEADOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_BLOQUEIOS IS NULL) THEN
  NEW.PK_BLOQUEIOS = GEN_ID(GEN_RH_PONTOS_BLOQUEADOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger SEGUROS_APOLICES_ID on table/view SEGUROS_APOLICES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER SEGUROS_APOLICES_ID FOR SEGUROS_APOLICES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_APOLICES is null) or (new.PK_APOLICES = 0) )
  then new.PK_APOLICES = gen_id(SEGUROS_APOLICES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger SEGUROS_TIPOS_ID on table/view SEGUROS_TIPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER SEGUROS_TIPOS_ID FOR SEGUROS_TIPOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TIPO_SEGUROS is null) or (new.PK_TIPO_SEGUROS = 0) )
  then new.PK_TIPO_SEGUROS = gen_id(SEGUROS_TIPOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger SETORES_BI on table/view SETORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER SETORES_BI FOR SETORES ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.pk_setor is null) then
    new.pk_setor = gen_id(gen_setores_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_ACIDENTESGRUPOS_ID on table/view ST_ACIDENTESGRUPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_ACIDENTESGRUPOS_ID FOR ST_ACIDENTESGRUPOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_GRUPOSACIDESNTES is null) or (new.PK_GRUPOSACIDESNTES = 0) )
  then new.PK_GRUPOSACIDESNTES = gen_id(ST_ACIDENTESGRUPOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_ACIDENTESSUBGRUPOS_ID on table/view ST_ACIDENTESSUBGRUPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_ACIDENTESSUBGRUPOS_ID FOR ST_ACIDENTESSUBGRUPOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.FK_GRUPOSACIDENTES is null) or (new.FK_GRUPOSACIDENTES = 0) )
  then new.FK_GRUPOSACIDENTES = gen_id(ST_ACIDENTESSUBGRUPOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_ACIDENTES_ID on table/view ST_ACIDENTES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_ACIDENTES_ID FOR ST_ACIDENTES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_ACIDENTES is null) or (new.PK_ACIDENTES = 0) )
  then new.PK_ACIDENTES = gen_id(ST_ACIDENTES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_AGENTESPREVIDENCIA_ID on table/view ST_AGENTESPREVIDENCIA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_AGENTESPREVIDENCIA_ID FOR ST_AGENTESPREVIDENCIA ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_AGENTESPREVIDENCIA is null) or (new.PK_AGENTESPREVIDENCIA = 0) )
  then new.PK_AGENTESPREVIDENCIA = gen_id(ST_AGENTESPREVIDENCIA_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_AGENTES_ID on table/view ST_AGENTES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_AGENTES_ID FOR ST_AGENTES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_AGENTES is null) or (new.PK_AGENTES = 0) )
  then new.PK_AGENTES = gen_id(ST_AGENTES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_ANAMNESEITEM_ID on table/view ST_ANAMNESEITEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_ANAMNESEITEM_ID FOR ST_ANAMNESEITEM ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_ANAMNESEITEM is null) or (new.PK_ANAMNESEITEM = 0) )
  then new.PK_ANAMNESEITEM = gen_id(ST_ANAMNESEITEM_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_ANAMNESE_ID on table/view ST_ANAMNESE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_ANAMNESE_ID FOR ST_ANAMNESE ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_ANAMNESE is null) or (new.PK_ANAMNESE = 0) )
  then new.PK_ANAMNESE = gen_id(ST_ANAMNESE_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_ANANEXO11_ID on table/view ST_ANANEXO11
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_ANANEXO11_ID FOR ST_ANANEXO11 ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_ANANEXO11 is null) or (new.PK_ANANEXO11 = 0) )
  then new.PK_ANANEXO11 = gen_id(ST_ANANEXO11_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_ANANEXO12_ID on table/view ST_ANANEXO12
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_ANANEXO12_ID FOR ST_ANANEXO12 ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_ANANEXO12 is null) or (new.PK_ANANEXO12 = 0) )
  then new.PK_ANANEXO12 = gen_id(ST_ANANEXO12_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_ANANEXO13_ID on table/view ST_ANANEXO13
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_ANANEXO13_ID FOR ST_ANANEXO13 ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_ANANEXO13 is null) or (new.PK_ANANEXO13 = 0) )
  then new.PK_ANANEXO13 = gen_id(ST_ANANEXO13_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_APARELHAGEM_ID on table/view ST_APARELHAGEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_APARELHAGEM_ID FOR ST_APARELHAGEM ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_APARELHAGEM is null) or (new.PK_APARELHAGEM = 0) )
  then new.PK_APARELHAGEM = gen_id(ST_APARELHAGEM_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_APOSENTADORIA_RISCO_ATIV_ID on table/view ST_APOSENTADORIA_RISCO_ATIV
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_APOSENTADORIA_RISCO_ATIV_ID FOR ST_APOSENTADORIA_RISCO_ATIV ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_APOS_RISCO_ATIV is null) or (new.PK_APOS_RISCO_ATIV = 0) )
  then new.PK_APOS_RISCO_ATIV = gen_id(ST_APOSENTADORIA_RISCO_ATIV_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_APOSENTADORIA_RISCO_DESC_ID on table/view ST_APOSENTADORIA_RISCO_DESC
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_APOSENTADORIA_RISCO_DESC_ID FOR ST_APOSENTADORIA_RISCO_DESC ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_APOS_RISCO_DESC is null) or (new.PK_APOS_RISCO_DESC = 0) )
  then new.PK_APOS_RISCO_DESC = gen_id(ST_APOSENTADORIA_RISCO_DESC_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_APOSENTADORIA_RISCO_ID on table/view ST_APOSENTADORIA_RISCO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_APOSENTADORIA_RISCO_ID FOR ST_APOSENTADORIA_RISCO ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_APOS_RISCO is null) or (new.PK_APOS_RISCO = 0) )
  then new.PK_APOS_RISCO = gen_id(ST_APOSENTADORIA_RISCO_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_ATESTADOS_ID on table/view ST_ATESTADOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_ATESTADOS_ID FOR ST_ATESTADOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_ATESTADOS is null) or (new.PK_ATESTADOS = 0) )
  then new.PK_ATESTADOS = gen_id(ST_ATESTADOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSACIDENTESEPI_ID on table/view ST_CARGOSACIDENTESEPI
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSACIDENTESEPI_ID FOR ST_CARGOSACIDENTESEPI ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOS_ACIDENTESEPI is null) or (new.PK_CARGOS_ACIDENTESEPI = 0) )
  then new.PK_CARGOS_ACIDENTESEPI = gen_id(ST_CARGOSACIDENTESEPI_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSACIDENTES_ID on table/view ST_CARGOSACIDENTES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSACIDENTES_ID FOR ST_CARGOSACIDENTES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOS_ACIDENTES is null) or (new.PK_CARGOS_ACIDENTES = 0) )
  then new.PK_CARGOS_ACIDENTES = gen_id(ST_CARGOSACIDENTES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSAPOSENTADORIA_ID on table/view ST_CARGOSAPOSENTADORIA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSAPOSENTADORIA_ID FOR ST_CARGOSAPOSENTADORIA ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOS_APOSENTADORIA is null) or (new.PK_CARGOS_APOSENTADORIA = 0) )
  then new.PK_CARGOS_APOSENTADORIA = gen_id(ST_CARGOSAPOSENTADORIA_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSEMPREGADOSNOME_ID on table/view ST_CARGOSEMPREGADOSNOME
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSEMPREGADOSNOME_ID FOR ST_CARGOSEMPREGADOSNOME ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOSFUNCIONARIOSNOME is null) or (new.PK_CARGOSFUNCIONARIOSNOME = 0) )
  then new.PK_CARGOSFUNCIONARIOSNOME = gen_id(ST_CARGOSEMPREGADOSNOME_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSEMPREGADOS_ID on table/view ST_CARGOSEMPREGADOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSEMPREGADOS_ID FOR ST_CARGOSEMPREGADOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOSFUNCIONARIOS is null) or (new.PK_CARGOSFUNCIONARIOS = 0) )
  then new.PK_CARGOSFUNCIONARIOS = gen_id(ST_CARGOSEMPREGADOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSEPI_ID on table/view ST_CARGOSEPI
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSEPI_ID FOR ST_CARGOSEPI ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOSEPI is null) or (new.PK_CARGOSEPI = 0) )
  then new.PK_CARGOSEPI = gen_id(ST_CARGOSEPI_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSERGONOMIA_ID on table/view ST_CARGOSERGONOMIA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSERGONOMIA_ID FOR ST_CARGOSERGONOMIA ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOSERGONOMIA is null) or (new.PK_CARGOSERGONOMIA = 0) )
  then new.PK_CARGOSERGONOMIA = gen_id(ST_CARGOSERGONOMIA_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSEXAMESHISTORICO_ID on table/view ST_CARGOSEXAMESHISTORICO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSEXAMESHISTORICO_ID FOR ST_CARGOSEXAMESHISTORICO ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOSEXAMESHISTORICO is null) or (new.PK_CARGOSEXAMESHISTORICO = 0) )
  then new.PK_CARGOSEXAMESHISTORICO = gen_id(ST_CARGOSEXAMESHISTORICO_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSEXAMES_ID on table/view ST_CARGOSEXAMES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSEXAMES_ID FOR ST_CARGOSEXAMES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOSEXAMES is null) or (new.PK_CARGOSEXAMES = 0) )
  then new.PK_CARGOSEXAMES = gen_id(ST_CARGOSEXAMES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSGFIP_ID on table/view ST_CARGOSGFIP
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSGFIP_ID FOR ST_CARGOSGFIP ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOSGFIP is null) or (new.PK_CARGOSGFIP = 0) )
  then new.PK_CARGOSGFIP = gen_id(ST_CARGOSGFIP_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSPROCEDIMENTOS1_ID on table/view ST_CARGOSPROCEDIMENTOS1
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSPROCEDIMENTOS1_ID FOR ST_CARGOSPROCEDIMENTOS1 ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.FK_CARGOSPROC1 is null) or (new.FK_CARGOSPROC1 = 0) )
  then new.FK_CARGOSPROC1 = gen_id(ST_CARGOSPROCEDIMENTOS1_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSRESTRICOES_ID on table/view ST_CARGOSRESTRICOES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSRESTRICOES_ID FOR ST_CARGOSRESTRICOES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOSRESTRICOES is null) or (new.PK_CARGOSRESTRICOES = 0) )
  then new.PK_CARGOSRESTRICOES = gen_id(ST_CARGOSRESTRICOES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CARGOSTREINAMENTOS_ID on table/view ST_CARGOSTREINAMENTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CARGOSTREINAMENTOS_ID FOR ST_CARGOSTREINAMENTOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CARGOSTREINAMENTOS is null) or (new.PK_CARGOSTREINAMENTOS = 0) )
  then new.PK_CARGOSTREINAMENTOS = gen_id(ST_CARGOSTREINAMENTOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_CAT_ID on table/view ST_CAT
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_CAT_ID FOR ST_CAT ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CAT is null) or (new.PK_CAT = 0) )
  then new.PK_CAT = gen_id(ST_CAT_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_EPI_ID on table/view ST_EPI
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_EPI_ID FOR ST_EPI ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_EPI is null) or (new.PK_EPI = 0) )
  then new.PK_EPI = gen_id(ST_EPI_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_FILIAISASANALISERISCOS_ID on table/view ST_FILIAISASANALISERISCOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_FILIAISASANALISERISCOS_ID FOR ST_FILIAISASANALISERISCOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_ANALISERISCO is null) or (new.PK_ANALISERISCO = 0) )
  then new.PK_ANALISERISCO = gen_id(ST_FILIAISASANALISERISCOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_FILIAISCRONOGRAMA_ID on table/view ST_FILIAISCRONOGRAMA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_FILIAISCRONOGRAMA_ID FOR ST_FILIAISCRONOGRAMA ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_CRONOGRAMA is null) or (new.PK_CRONOGRAMA = 0) )
  then new.PK_CRONOGRAMA = gen_id(ST_FILIAISCRONOGRAMA_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_FILIAISEPI_ID on table/view ST_FILIAISEPI
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_FILIAISEPI_ID FOR ST_FILIAISEPI ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_FILIAISEPI is null) or (new.PK_FILIAISEPI = 0) )
  then new.PK_FILIAISEPI = gen_id(ST_FILIAISEPI_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_FILIAISINCIDENTES_ID on table/view ST_FILIAISINCIDENTES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_FILIAISINCIDENTES_ID FOR ST_FILIAISINCIDENTES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_FILIAISINCIDENTES is null) or (new.PK_FILIAISINCIDENTES = 0) )
  then new.PK_FILIAISINCIDENTES = gen_id(ST_FILIAISINCIDENTES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_FILIAISINSPECOES_ID on table/view ST_FILIAISINSPECOES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_FILIAISINSPECOES_ID FOR ST_FILIAISINSPECOES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_FILIAISINSPECAO is null) or (new.PK_FILIAISINSPECAO = 0) )
  then new.PK_FILIAISINSPECAO = gen_id(ST_FILIAISINSPECOES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_FILIAISMEDICOS_ID on table/view ST_FILIAISMEDICOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_FILIAISMEDICOS_ID FOR ST_FILIAISMEDICOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_FILIAISMEDICOS is null) or (new.PK_FILIAISMEDICOS = 0) )
  then new.PK_FILIAISMEDICOS = gen_id(ST_FILIAISMEDICOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_FILIAISRESPMEDICOS_ID on table/view ST_FILIAISRESPMEDICOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_FILIAISRESPMEDICOS_ID FOR ST_FILIAISRESPMEDICOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_FILIAISRESPMEDICOS is null) or (new.PK_FILIAISRESPMEDICOS = 0) )
  then new.PK_FILIAISRESPMEDICOS = gen_id(ST_FILIAISRESPMEDICOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_NRS_ID on table/view ST_NRS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_NRS_ID FOR ST_NRS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_NRS is null) or (new.PK_NRS = 0) )
  then new.PK_NRS = gen_id(ST_NRS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_PROCEDIMENTOS1_ID on table/view ST_PROCEDIMENTOS1
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_PROCEDIMENTOS1_ID FOR ST_PROCEDIMENTOS1 ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PROCEDIMENTOS1 is null) or (new.PK_PROCEDIMENTOS1 = 0) )
  then new.PK_PROCEDIMENTOS1 = gen_id(ST_PROCEDIMENTOS1_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_PROCEDIMENTOS2_ID on table/view ST_PROCEDIMENTOS2
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_PROCEDIMENTOS2_ID FOR ST_PROCEDIMENTOS2 ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PROCEDIMENTOS2 is null) or (new.PK_PROCEDIMENTOS2 = 0) )
  then new.PK_PROCEDIMENTOS2 = gen_id(ST_PROCEDIMENTOS2_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_PROCEDIMENTOS3_ID on table/view ST_PROCEDIMENTOS3
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_PROCEDIMENTOS3_ID FOR ST_PROCEDIMENTOS3 ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PROCEDIMENTOS3 is null) or (new.PK_PROCEDIMENTOS3 = 0) )
  then new.PK_PROCEDIMENTOS3 = gen_id(ST_PROCEDIMENTOS3_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_PROCEDIMENTOS4_ID on table/view ST_PROCEDIMENTOS4
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_PROCEDIMENTOS4_ID FOR ST_PROCEDIMENTOS4 ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PROCEDIMENTOS4 is null) or (new.PK_PROCEDIMENTOS4 = 0) )
  then new.PK_PROCEDIMENTOS4 = gen_id(ST_PROCEDIMENTOS4_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_PROCEDIMENTOS5_ID on table/view ST_PROCEDIMENTOS5
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_PROCEDIMENTOS5_ID FOR ST_PROCEDIMENTOS5 ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_PROCEDIMENTOS5 is null) or (new.PK_PROCEDIMENTOS5 = 0) )
  then new.PK_PROCEDIMENTOS5 = gen_id(ST_PROCEDIMENTOS5_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_TECNICAS_ID on table/view ST_TECNICAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_TECNICAS_ID FOR ST_TECNICAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TECNICAS is null) or (new.PK_TECNICAS = 0) )
  then new.PK_TECNICAS = gen_id(ST_TECNICAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_TIPOSDEOBRAS_ID on table/view ST_TIPOSDEOBRAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_TIPOSDEOBRAS_ID FOR ST_TIPOSDEOBRAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TIPOSDEOBRAS is null) or (new.PK_TIPOSDEOBRAS = 0) )
  then new.PK_TIPOSDEOBRAS = gen_id(ST_TIPOSDEOBRAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_TIPO_EXTINTORES_ID on table/view ST_TIPO_EXTINTORES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_TIPO_EXTINTORES_ID FOR ST_TIPO_EXTINTORES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TIPOEXTINTOR is null) or (new.PK_TIPOEXTINTOR = 0) )
  then new.PK_TIPOEXTINTOR = gen_id(ST_TIPO_EXTINTORES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_TREINAMENTOSGRUPOS_ID on table/view ST_TREINAMENTOSGRUPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_TREINAMENTOSGRUPOS_ID FOR ST_TREINAMENTOSGRUPOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_GRUPOSTREINAMENTOS is null) or (new.PK_GRUPOSTREINAMENTOS = 0) )
  then new.PK_GRUPOSTREINAMENTOS = gen_id(ST_TREINAMENTOSGRUPOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_TREINAMENTOSSUBGRUPOS_ID on table/view ST_TREINAMENTOSSUBGRUPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_TREINAMENTOSSUBGRUPOS_ID FOR ST_TREINAMENTOSSUBGRUPOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_SUBGRUPOSTREINAMENTOS is null) or (new.PK_SUBGRUPOSTREINAMENTOS = 0) )
  then new.PK_SUBGRUPOSTREINAMENTOS = gen_id(ST_TREINAMENTOSSUBGRUPOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_VACINAS_DOSES_ID on table/view ST_VACINAS_DOSES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_VACINAS_DOSES_ID FOR ST_VACINAS_DOSES ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_VACINAS_DOSES is null) or (new.PK_VACINAS_DOSES = 0) )
  then new.PK_VACINAS_DOSES = gen_id(ST_VACINAS_DOSES_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger ST_VACINAS_ID on table/view ST_VACINAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER ST_VACINAS_ID FOR ST_VACINAS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_VACINAS is null) or (new.PK_VACINAS = 0) )
  then new.PK_VACINAS = gen_id(ST_VACINAS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger SUBTIPOPATRIMONIO_BI on table/view SUBTIPOPATRIMONIO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER SUBTIPOPATRIMONIO_BI FOR SUBTIPOPATRIMONIO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_SUBTIPOPATRIMONIO IS NULL) THEN
  NEW.PK_SUBTIPOPATRIMONIO = GEN_ID(GEN_SUBTIPOPATRIMONIO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TABELAPRECOSITEM_ID on table/view TABELAPRECOSITEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TABELAPRECOSITEM_ID FOR TABELAPRECOSITEM ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TABELAPRECOSITEM is null) or (new.PK_TABELAPRECOSITEM = 0) )
  then new.PK_TABELAPRECOSITEM = gen_id(TABELAPRECOSITEM_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TABELAPRECOS_ID on table/view TABELAPRECOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TABELAPRECOS_ID FOR TABELAPRECOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TABELAPRECOS is null) or (new.PK_TABELAPRECOS = 0) )
  then new.PK_TABELAPRECOS = gen_id(TABELAPRECOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TAD0_PRODUTOS_MARGEM on table/view PRODUTOS_MARGEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TAD0_PRODUTOS_MARGEM FOR PRODUTOS_MARGEM ACTIVE AFTER DELETE POSITION 0 AS
begin
  delete from PRODUTOS_CUSTOS 
   where FK_EMPRESAS = Old.FK_EMPRESAS
     and FK_PRODUTOS = Old.FK_PRODUTOS;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TAGS_HISTORICOS_ID on table/view TAGS_HISTORICOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TAGS_HISTORICOS_ID FOR TAGS_HISTORICOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TAG_HISTORICOS is null) or (new.PK_TAG_HISTORICOS = 0) )
  then new.PK_TAG_HISTORICOS = gen_id(TAGS_HISTORICOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TAGS_ID on table/view TAGS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TAGS_ID FOR TAGS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TAGS is null) or (new.PK_TAGS = 0) )
  then new.PK_TAGS = gen_id(TAGS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TAGS_SUBTIPOS_ID on table/view TAGS_SUBTIPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TAGS_SUBTIPOS_ID FOR TAGS_SUBTIPOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TAGS_SUBTIPOS is null) or (new.PK_TAGS_SUBTIPOS = 0) )
  then new.PK_TAGS_SUBTIPOS = gen_id(TAGS_SUBTIPOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TAGS_TIPOS_ID on table/view TAGS_TIPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TAGS_TIPOS_ID FOR TAGS_TIPOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TAG_TIPO is null) or (new.PK_TAG_TIPO = 0) )
  then new.PK_TAG_TIPO = gen_id(TAGS_TIPOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TAG_CODIGOS_ID on table/view TAG_CODIGOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TAG_CODIGOS_ID FOR TAG_CODIGOS ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TAGS is null) or (new.PK_TAGS = 0) )
  then new.PK_TAGS = gen_id(TAG_CODIGOS_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TAG_IMAGEM_ID on table/view TAG_IMAGEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TAG_IMAGEM_ID FOR TAG_IMAGEM ACTIVE BEFORE INSERT POSITION 0 AS
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates
*/
begin
  if ( (new.PK_TAG_IMAGEM is null) or (new.PK_TAG_IMAGEM = 0) )
  then new.PK_TAG_IMAGEM = gen_id(TAG_IMAGEM_GEN, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TAI0_PRODUTOS_MARGEM on table/view PRODUTOS_MARGEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TAI0_PRODUTOS_MARGEM FOR PRODUTOS_MARGEM INACTIVE AFTER INSERT POSITION 0 AS
   /*$$IBE$$ declare variable Rows integer; $$IBE$$*/ 
begin /*$$IBE$$ 
  select Count(*) from PRODUTOS_CUSTOS
   where FK_EMPRESAS = New.FK_EMPRESAS
     and FK_PRODUTOS = New.FK_PRODUTOS
    into :Rows;
  if ((Rows is null) or (Rows = 0)) then
  begin
    insert into PRODUTOS_CUSTOS
      (FK_EMPRESAS, FK_PRODUTOS)
    values
      (New.FK_EMPRESAS, New.FK_PRODUTOS);
  end
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBI0_PRODUTOS_LOTACOES on table/view PRODUTOS_LOTACOES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBI0_PRODUTOS_LOTACOES FOR PRODUTOS_LOTACOES ACTIVE BEFORE INSERT POSITION 0 AS
   /*$$IBE$$ declare variable FkProdutos integer; $$IBE$$*/ 
begin /*$$IBE$$ 
  select FK_PRODUTOS from PRODUTOS_CUSTOS
   where FK_EMPRESAS = New.FK_EMPRESAS
     and FK_PRODUTOS = New.FK_PRODUTOS
    into :FkProdutos;
  if (FkProdutos is null) then
    insert into PRODUTOS_CUSTOS 
      (FK_EMPRESAS, FK_PRODUTOS, FLAG_RJST)
    values
      (New.FK_EMPRESAS, New.FK_PRODUTOS, 0);
  FkProdutos = null;
  select FK_PRODUTOS from PRODUTOS_ESTOQUES 
   where FK_EMPRESAS      = New.FK_EMPRESAS
     and FK_PRODUTOS      = New.FK_PRODUTOS
     and FK_ALMOXARIFADOS = New.FK_ALMOXARIFADOS
    into :FkProdutos;
  if (FkProdutos is null) then
    insert into PRODUTOS_ESTOQUES
      (FK_EMPRESAS, FK_PRODUTOS, FK_ALMOXARIFADOS, FLAG_EMP)
    values
      (New.FK_EMPRESAS, New.FK_PRODUTOS, New.FK_ALMOXARIFADOS, 1);
  New.OPE_INC  = user;
  New.DTHR_INC = current_timestamp;
  execute procedure STP_INSERT_HISTORIC ('PRODUTOS_LOTACOES', 'PRODUTOS_LOTACOES',
    'insercao de registro', 'INC');
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBI0_PRODUTOS_MARGEM on table/view PRODUTOS_MARGEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBI0_PRODUTOS_MARGEM FOR PRODUTOS_MARGEM ACTIVE AFTER INSERT POSITION 0 AS
begin /*$$IBE$$ 
  if (New.SIT_TRIB is null) then
  begin
    New.SIT_TRIB = '0' || Cast(New.FK_SITUACAO_TRIBUTARIAS as char(01)) ||
                           Cast(New.FK_ORIGENS_TRIBUTARIAS as char(01));
  end
  New.OPE_INC  = user;
  New.DTHR_INC = current_timestamp;
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBIG_PAISES on table/view PAISES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBIG_PAISES FOR PAISES ACTIVE BEFORE INSERT POSITION 0 AS
begin
  /*New.PK_PAISES = Gen_Id(PAISES, 1);     */
  New.OPE_INC  = user;
  New.DTHR_INC = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBIG_PRODUTOS on table/view PRODUTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBIG_PRODUTOS FOR PRODUTOS ACTIVE BEFORE INSERT OR UPDATE POSITION 0 AS
begin
  if ((New.PK_PRODUTOS is null) or (New.PK_PRODUTOS = 0)) then
    New.PK_PRODUTOS = Gen_Id(PRODUTOS, 1);
  New.OPE_INC  = user;
  New.DTHR_INC = current_timestamp;     
  /* se estiver incluindo e apenas para popular a tabela,
  ajustar o codigo de produto em EQUIPAMENTOS para fk_tipo_produtos = 10 = equipamentos */
  if (inserting OR updating ) then
  begin
     if (new.tipoproduto = 10) then
     begin
        update EQUIPAMENTOS
        SET FK_PRODUTOS = NEW.PK_PRODUTOS WHERE
        LEFT(EQUIPAMENTOS.DESCRICAO,100) = LEFT(NEW.DESCRICAO,100);
     end
     if (new.tipoproduto = 11 ) then /* pecas para equipamentos */
     begin
        update pecas 
        set fk_produtos = new.pk_produtos where                    
        LEFT(PECAS.DESCRICAO,100) = LEFT(NEW.DESCRICAO,100);
     end 
  end

end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBIG_PRODUTOS_CODIGOS on table/view PRODUTOS_CODIGOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBIG_PRODUTOS_CODIGOS FOR PRODUTOS_CODIGOS ACTIVE BEFORE INSERT POSITION 0 AS
  declare variable MaxValue integer;
begin
  if ((New.PK_PRODUTOS_CODIGOS is null) or (New.PK_PRODUTOS_CODIGOS = 0)) then
  begin
    select Max(PK_PRODUTOS_CODIGOS)
      from PRODUTOS_CODIGOS
     where FK_PRODUTOS = New.FK_PRODUTOS
      into :MaxValue;
    if (MaxValue is null) then
      MaxValue   = 0;
    New.PK_PRODUTOS_CODIGOS = MaxValue + 1;
  end
  New.OPE_INC  = user;
  New.DTHR_INC = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBIG_PROD_GRUPOS on table/view PROD_GRUPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBIG_PROD_GRUPOS FOR PROD_GRUPOS ACTIVE BEFORE INSERT POSITION 0 AS
   /*$$IBE$$ declare variable MaxValue integer; $$IBE$$*/ 
begin /*$$IBE$$ 
  if ((New.PK_GRUPOS = 0) or (New.PK_GRUPOS is null)) then
  begin
    select Max(PK_GRUPOS)
      from GRUPOS
     where FK_SECOES = New.FK_SECOES
      into :MaxValue;
    if (MaxValue is null) then
      MaxValue   = 0;
    New.PK_GRUPOS = MaxValue + 1;
    New.OPE_INC  = user;
    New.DTHR_INC = current_timestamp;
  end
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBIG_TIPO_MOVIM_ESTQ on table/view TIPO_MOVIM_ESTQ
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBIG_TIPO_MOVIM_ESTQ FOR TIPO_MOVIM_ESTQ ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if ((New.PK_TIPO_MOVIM_ESTQ is null) or (New.PK_TIPO_MOVIM_ESTQ = 0)) then
    New.PK_TIPO_MOVIM_ESTQ = Gen_Id(TIPO_MOVIM_ESTQ, 1);
  New.OPE_INC  = user;
  New.DTHR_INC = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBIG_TIPO_PRAZO_ENTREGA on table/view TIPO_PRAZO_ENTREGA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBIG_TIPO_PRAZO_ENTREGA FOR TIPO_PRAZO_ENTREGA ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if ((New.PK_TIPO_PRAZO_ENTREGA is null) or (New.PK_TIPO_PRAZO_ENTREGA = 0)) then
    New.PK_TIPO_PRAZO_ENTREGA = Gen_Id(TIPO_PRAZO_ENTREGA, 1);
  New.OPE_INC  = user;
  New.DTHR_INC = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBIG_TIPO_STATUS_PEDIDOS on table/view TIPO_STATUS_PEDIDOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBIG_TIPO_STATUS_PEDIDOS FOR TIPO_STATUS_PEDIDOS ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if ((New.PK_TIPO_STATUS_PEDIDOS is null) or (New.PK_TIPO_STATUS_PEDIDOS = 0)) then
    New.PK_TIPO_STATUS_PEDIDOS = Gen_Id(TIPO_STATUS_PEDIDOS, 1);
  New.OPE_INC  = user;
  New.DTHR_INC = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBIG_UNIDADES on table/view UNIDADES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBIG_UNIDADES FOR UNIDADES ACTIVE BEFORE INSERT POSITION 0 AS
begin
  New.PK_UNIDADES = Gen_Id(UNIDADES, 1);
  New.OPE_INC  = user;
  New.DTHR_INC = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_FIN_BANCOS_AGENCIAS on table/view FIN_BANCOS_AGENCIAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_FIN_BANCOS_AGENCIAS FOR FIN_BANCOS_AGENCIAS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_FIN_BANCOS_CONTAS on table/view FIN_BANCOS_CONTAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_FIN_BANCOS_CONTAS FOR FIN_BANCOS_CONTAS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_FIS_SIT_TRIBUTARIAS on table/view FIS_SIT_TRIBUTARIAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_FIS_SIT_TRIBUTARIAS FOR FIS_SIT_TRIBUTARIAS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PAISES on table/view PAISES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PAISES FOR PAISES ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS on table/view PRODUTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS FOR PRODUTOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_CODIGOS on table/view PRODUTOS_CODIGOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_CODIGOS FOR PRODUTOS_CODIGOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_COMPRAS on table/view PRODUTOS_COMPRAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_COMPRAS FOR PRODUTOS_COMPRAS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_CUSTOS on table/view PRODUTOS_CUSTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_CUSTOS FOR PRODUTOS_CUSTOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_IMAGENS on table/view PRODUTOS_IMAGENS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_IMAGENS FOR PRODUTOS_IMAGENS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_IMPOSTOS on table/view PRODUTOS_IMPOSTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_IMPOSTOS FOR PRODUTOS_IMPOSTOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_LOTACOES on table/view PRODUTOS_LOTACOES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_LOTACOES FOR PRODUTOS_LOTACOES ACTIVE BEFORE UPDATE POSITION 0 AS
begin /*$$IBE$$ 
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
  execute procedure STP_INSERT_HISTORIC ('PRODUTOS_LOTACOES', 'PRODUTOS_LOTACOES',
    'atualizacao de registro', 'UPD');
 $$IBE$$*/ POST_EVENT '$$IBE$$';
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_MAQUINAS on table/view PRODUTOS_MAQUINAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_MAQUINAS FOR PRODUTOS_MAQUINAS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_MARGEM on table/view PRODUTOS_MARGEM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_MARGEM FOR PRODUTOS_MARGEM ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  if (New.SIT_TRIB is null) then
  begin
    New.SIT_TRIB = '0' || Cast(New.FK_SITUACAO_TRIBUTARIAS as char(01)) ||
                           Cast(New.FK_ORIGENS_TRIBUTARIAS as char(01));
  end
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_PECAS on table/view PRODUTOS_PECAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_PECAS FOR PRODUTOS_PECAS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_PECAS_HISTORICOS on table/view PRODUTOS_PECAS_HISTORICOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_PECAS_HISTORICOS FOR PRODUTOS_PECAS_HISTORICOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_PRECOS on table/view PRODUTOS_PRECOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_PRECOS FOR PRODUTOS_PRECOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;


end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_SALDOS on table/view PRODUTOS_SALDOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_SALDOS FOR PRODUTOS_SALDOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_SALDO_ALMX on table/view PRODUTOS_SALDO_ALMX
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_SALDO_ALMX FOR PRODUTOS_SALDO_ALMX ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_SERVICOS on table/view PRODUTOS_SERVICOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_SERVICOS FOR PRODUTOS_SERVICOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_VENDAS on table/view PRODUTOS_VENDAS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_VENDAS FOR PRODUTOS_VENDAS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_VERSOES_LOTACAO on table/view PRODUTOS_VERSOES_LOTACAO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_VERSOES_LOTACAO FOR PRODUTOS_VERSOES_LOTACAO ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PRODUTOS_X_TIPO_PRODUTOS on table/view PRODUTOS_X_TIPO_PRODUTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PRODUTOS_X_TIPO_PRODUTOS FOR PRODUTOS_X_TIPO_PRODUTOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_PROD_GRUPOS on table/view PROD_GRUPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_PROD_GRUPOS FOR PROD_GRUPOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_TIPO_MOVIM_ESTQ on table/view TIPO_MOVIM_ESTQ
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_TIPO_MOVIM_ESTQ FOR TIPO_MOVIM_ESTQ ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_TIPO_PRAZO_ENTREGA on table/view TIPO_PRAZO_ENTREGA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_TIPO_PRAZO_ENTREGA FOR TIPO_PRAZO_ENTREGA ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_TIPO_STATUS_PEDIDOS on table/view TIPO_STATUS_PEDIDOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_TIPO_STATUS_PEDIDOS FOR TIPO_STATUS_PEDIDOS ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TBU0_UNIDADES on table/view UNIDADES
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TBU0_UNIDADES FOR UNIDADES ACTIVE BEFORE UPDATE POSITION 0 AS
begin
  New.OPE_ALT  = user;
  New.DTHR_ALT = current_timestamp;
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TIPOOCORPATRIMONIO_BI on table/view TIPOOCORPATRIMONIO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TIPOOCORPATRIMONIO_BI FOR TIPOOCORPATRIMONIO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TIPOOCORRENCIA IS NULL) THEN
  NEW.PK_TIPOOCORRENCIA = GEN_ID(GEN_TIPOOCORPATRIMONIO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TIPO_CADASTROS_BI on table/view TIPO_CADASTROS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TIPO_CADASTROS_BI FOR TIPO_CADASTROS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TIPO_CADASTRO IS NULL) THEN
  NEW.PK_TIPO_CADASTRO = GEN_ID(GEN_TIPO_CADASTROS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TIPO_DOCUMENTO_BI on table/view TIPO_DOCUMENTO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TIPO_DOCUMENTO_BI FOR TIPO_DOCUMENTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TIPODOCUMENTO IS NULL) THEN
  NEW.PK_TIPODOCUMENTO = GEN_ID(GEN_TIPO_DOCUMENTO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TIPO_ENDERECO_BI on table/view TIPO_ENDERECO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TIPO_ENDERECO_BI FOR TIPO_ENDERECO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TIPO_ENDERECO IS NULL) THEN
  NEW.PK_TIPO_ENDERECO = GEN_ID(GEN_TIPO_ENDERECO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TIPO_GARANTIA_BI on table/view TIPO_GARANTIA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TIPO_GARANTIA_BI FOR TIPO_GARANTIA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_TIPO_GARANTIA IS NULL) THEN
  NEW.PK_TIPO_GARANTIA = GEN_ID(GEN_TIPO_GARANTIA_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TRG_CONHECIMENTOTRANSPORTE_B_IU on table/view CONHECIMENTOTRANSPORTE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TRG_CONHECIMENTOTRANSPORTE_B_IU FOR CONHECIMENTOTRANSPORTE ACTIVE BEFORE INSERT OR UPDATE POSITION 0 AS
BEGIN
  IF (CURRENT_USER<>'INTEGRADOR') THEN 
  BEGIN 
    NEW.LAST_CHANGE = CURRENT_TIMESTAMP;
  END 
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TRG_MAN_CALIB_FICHA_EQUIPAM on table/view MAN_CALIB_FICHA_EQUIPAM
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TRG_MAN_CALIB_FICHA_EQUIPAM FOR MAN_CALIB_FICHA_EQUIPAM ACTIVE BEFORE INSERT POSITION 0 AS
begin
  new.codigo = gen_id(gnr_ficcalequi, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TRG_MAN_HORASHOMENS_ACUMU_CC on table/view MAN_HORASHOMENS_ACUMU_CC
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TRG_MAN_HORASHOMENS_ACUMU_CC FOR MAN_HORASHOMENS_ACUMU_CC ACTIVE BEFORE INSERT POSITION 0 AS
begin
  new.codigo = gen_id(gnr_hh_acumu_cc, 1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TRG_MAN_TIPO_PARADA on table/view MAN_TIPO_PARADA
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TRG_MAN_TIPO_PARADA FOR MAN_TIPO_PARADA ACTIVE BEFORE INSERT POSITION 0 AS
begin NEW.ID = GEN_ID(GNR_TIPO_PARADA, 1);end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TRIGGER01 on table/view PRODUTOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TRIGGER01 FOR PRODUTOS ACTIVE AFTER INSERT POSITION 0 AS
BEGIN
  /* AJUSTA O CODIGO DA PELA NO 
  ARQUIVO PECASTESTE, SOMENTE TEMPORARIO
  Trigger text */
  
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger TRIG_BOLETODETALHADO_BI on table/view BOLETODETALHADO
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER TRIG_BOLETODETALHADO_BI FOR BOLETODETALHADO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
      IF(NEW."SEQUENCIAL" IS NULL) THEN NEW."SEQUENCIAL" = GEN_ID("GEN_BOLETODETALHADO_SEQUENCIAL",1);
    END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger USUARIOS_BI on table/view USUARIOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER USUARIOS_BI FOR USUARIOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_USUARIOS IS NULL) THEN
  NEW.PK_USUARIOS = GEN_ID(GEN_USUARIOS_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger VEICITEM_TESTE_BI on table/view VEICITEM_TESTE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER VEICITEM_TESTE_BI FOR VEICITEM_TESTE ACTIVE BEFORE INSERT POSITION 0 AS
begin
  if (new.codveicitem is null) then
    new.codveicitem = gen_id(gen_veicitem_id,1);
end ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger VEICMOVIMENTO_TESTE_BI on table/view VEICMOVIMENTO_TESTE
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER VEICMOVIMENTO_TESTE_BI FOR VEICMOVIMENTO_TESTE ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.SEQUENCIAL IS NULL) THEN
    NEW.SEQUENCIAL = GEN_ID(GEN_VEICMOVIMENTO_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger VEICULOS_BI on table/view VEICULOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER VEICULOS_BI FOR VEICULOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN                                          
   IF (NEW.ID IS NULL) THEN          
      NEW.ID = GEN_ID(GEN_CAMINHOES_ID,1);
END ^^
SET TERM ; ^^
/*******************************************************************************
 * Trigger VIEUCLOS_GRUPOS_BI on table/view VIEUCLOS_GRUPOS
 ******************************************************************************/

SET TERM ^^ ;
CREATE TRIGGER VIEUCLOS_GRUPOS_BI FOR VIEUCLOS_GRUPOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN
  IF (NEW.PK_GRUPOVEICULOS IS NULL) THEN
  NEW.PK_GRUPOVEICULOS = GEN_ID(GEN_VIEUCLOS_GRUPOS_ID,1);
END ^^
SET TERM ; ^^
SET TERM ^^ ;
/*******************************************************************************
 * Procedure Bodies
 * ----------------
 * Extracted at 11/08/2011 08:34:16
 ******************************************************************************/

ALTER PROCEDURE CONVERT_HORA_CHAR (
  I_HORA Time)
 returns (
  R_SAIDA VarChar(5) CHARACTER SET NONE) AS 
declare variable v_hora varchar(2);
declare variable v_min varchar(2);
begin
    v_hora = extract(hour from i_hora);
    v_min = extract(minute from i_hora);

    if (char_length(v_hora) = 1) then
        v_hora = '0' || v_hora;

    if (char_length(v_min) = 1) then
        v_min = '0' || v_min;

    r_saida = v_hora || ':' || v_min;

    suspend;
end ^^
ALTER PROCEDURE CRIAENDERECOS (
  NRLOCAL SmallInt)
 returns (
  STATUS Char(1)) AS 
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates

  Procedure:

  Author   : , 
  Date     : 31/07/2011 00:12:53
  Purpose  :
  Params
  ------
  <param>  : <purpose>
*/
declare  vFK_EMPRESAS                 SMALLINT;
declare  vFK_FILIAIS                  SMALLINT;
declare  vFK_DEPOSITOS                SMALLINT;
declare  vPK_LOCALESTOQUE             SMALLINT;
declare  vESCOPODEPOSITO                  CHAR(     1);
declare  vQUANTRUAS                   SMALLINT;
declare  vFK_CENTROCUSTO               VARCHAR(    10)  COLLATE ISO8859_1;
declare  vSITUACAO                        CHAR(     1) COLLATE ISO8859_1;
declare  vDESCRICAO                    VARCHAR(    50)  COLLATE ISO8859_1;
declare  vCRIARENDERECOS                  CHAR(     1) COLLATE ISO8859_1;
declare  vTIPODEPOSITO                    CHAR(     1)  COLLATE ISO8859_1;
declare  vContador                        smallint;
begin
         select 
           FK_EMPRESAS      ,           
           FK_FILIAIS       ,           
           FK_DEPOSITOS     ,           
           PK_LOCALESTOQUE  ,           
           ESCOPODEPOSITO   ,               
           QUANTRUAS        ,
           FK_CENTROCUSTO   ,
           SITUACAO         ,
           DESCRICAO        ,
           CRIARENDERECOS   ,
           TIPODEPOSITO     
           from localestoque where
           PK_LOCALESTOQUE = :NRLOCAL
           into
           :vFK_EMPRESAS         ,
           :vFK_FILIAIS          ,
           :vFK_DEPOSITOS        ,
           :vPK_LOCALESTOQUE     ,
           :vESCOPODEPOSITO      ,
           :vQUANTRUAS           ,
           :vFK_CENTROCUSTO      ,
           :vSITUACAO            ,
           :vDESCRICAO           ,
           :vCRIARENDERECOS      ,
           :vTIPODEPOSITO;         
                                      
           if (:vCriarEnderecos = 'S') then 
           begin
              /* inicia a inclusao dos registros na tabela LOCALESTOQUEENDERECOS */
              vContador = vQuantRuas;
              if (:vContador > 0 ) then
              begin                 
                 while ( :vContador > 0 ) do
                 begin                       
                    insert into LOCALESTOQUEENDERECOS (  FK_EMPRESA                          ,
                                                         FK_FILIAL                           ,
                                                         FK_DEPOSITO                         ,
                                                         FK_LOCALESTOQUE                     ,
                                                         END_RUA                             ,
                                                         END_ENDERECO                        ,
                                                         END_ANDAR                           ,
                                                         END_APARTAMENTO                     ,
                                                         END_SALA                            ,
                                                         TIPOENDERECO                        , 
                                                         TAMANHOENDERECO                     , 
                                                         MED_LARGURA                         , 
                                                         MED_ALTURA                          , 
                                                         MED_PROFUNDIDADE                    ,
                                                         SITUACAO                            ,
                                                         FK_PALETE                           

                                                        )                                     
                    VALUES (
                    :vFK_EMPRESAS             ,
                    :vFK_FILIAIS              ,
                    :vFK_DEPOSITOS            ,
                    :vPK_LOCALESTOQUE         ,  
                    ((:vQuantRuas - :vContador)+1) ,
                    1,  /* endereco*/
                    1, /* andar */                
                    1, /* apartamento */
                    1, /*sala */    
                    'P', /* tipoendeco pulmao*/
                    'N', /*tamanho do endereço  NORMAL */
                    1,
                    1,
                    1,     
                    'D', /* SITUAÇÃO = DISPONIVEL */
                    0 /* PALELET*/ );
                    vContador = vContador  - 1; 
            
                 end /* while contador > 0 */ 
              
              end /* contador > 0 */
           end
           /*code */
           suspend;
end ^^
ALTER PROCEDURE CRIA_SENHA returns (
  SENHA VarChar(30) CHARACTER SET NONE, 
  SENHA_CRIPTO VarChar(30) CHARACTER SET NONE) AS 
declare variable icount integer;
declare variable ichar integer;
declare variable psenha varchar(30);
begin
  -- Rotina para gerar senha aleatoria
  icount = 0;
  psenha = '';
  while (icount < 8) do
  begin
    ichar = rand() * 92 + 33;
    if ((ichar > 41 and ichar < 94) or (ichar > 96)) then
    begin
      psenha = psenha || ascii_char(ichar);
      icount = icount + 1;
    end
  end
  psenha = trim(psenha);
  senha = psenha;
  select sresult from criptografa(:psenha, 'METCAL') into :senha_cripto;
  suspend;
end ^^
ALTER PROCEDURE CRIA_USUARIO (
  P_USUARIO VarChar(50) CHARACTER SET NONE, 
  P_SENHA VarChar(30) CHARACTER SET NONE DEFAULT '= ''', 
  P_STATUS Char(1) CHARACTER SET NONE DEFAULT '= ''A''', 
  P_NOME VarChar(50) CHARACTER SET NONE DEFAULT '= ''', 
  P_NEGOCIO VarChar(25) CHARACTER SET NONE DEFAULT '= ''SANTACASA''', 
  P_IP VarChar(15) CHARACTER SET NONE DEFAULT '= ''0.0.0.0''')
 returns (
  LOGIN VarChar(30) CHARACTER SET NONE, 
  NOME_USU_SIGMA VarChar(50) CHARACTER SET NONE, 
  SENHA_WEB VarChar(30) CHARACTER SET NONE, 
  SENHA_WEB_CRIP VarChar(30) CHARACTER SET NONE, 
  SENHA_SIGMA VarChar(30) CHARACTER SET NONE, 
  SENHA_SIGMA_CRIP VarChar(30) CHARACTER SET NONE) AS 
BEGIN
  SUSPEND;
END ^^
ALTER PROCEDURE CRIPTOGRAFA (
  SSTR VarChar(50) CHARACTER SET NONE, 
  SCHAVE VarChar(50) CHARACTER SET NONE)
 returns (
  SRESULT VarChar(50) CHARACTER SET NONE) AS 
BEGIN
  SUSPEND;
END ^^
ALTER PROCEDURE GERACADASTROID returns (
  CODIGO Integer) AS 
BEGIN
 Codigo = gen_id(GEN_CADASTRO_ID,0);
 suspend;
  /* Procedure text */
END ^^
ALTER PROCEDURE HORASTRAB_ABAS (
  OS_CODIGO VarChar(30))
 returns (
  SOMATORIO_TEMPO Integer) AS 
BEGIN
  SUSPEND;
END ^^
ALTER PROCEDURE INFO_PERIODO (
  INICIO TimeStamp, 
  FIM TimeStamp)
 returns (
  DIAS Integer, 
  HORAS Integer, 
  MINUTOS Integer, 
  SEGUNDOS Integer) AS 
declare variable temp numeric(18,7);
begin
  dias = 0; horas = 0; minutos = 0; segundos = 0;
  temp = (fim - inicio);
  if (temp > 0) then dias = temp - 0.5; else dias = temp;
  temp = temp - dias;
  temp = temp * 86400;
  horas = (temp / 3600);
  if (horas > 0) then horas = horas - 0.5;
  temp = temp - (horas*3600);
  minutos = (temp / 60);
  if (minutos > 0) then minutos = minutos - 0.5;
  segundos = temp - (minutos * 60);
end ^^
ALTER PROCEDURE RETSETORPORDEPTO (
  EMPRESA SmallInt, 
  FILIAL SmallInt, 
  DEPTO SmallInt)
 returns (
  S_EMPRESA SmallInt, 
  S_FILIAL SmallInt, 
  S_DEPTO SmallInt, 
  S_SETOR SmallInt, 
  DESCRICAO VarChar(100), 
  CENTROCUSTO VarChar(10)) AS 
/*
  You can change this template in the template editor:
  File | Preferences | Object Templates

  Procedure:

  Author   : , 
  Date     : 02/08/2011 18:56:26
  Purpose  :
  Params
  ------
  <param>  : <purpose>
*/
begin
 select pk_empresa, pk_filial, PK_DEPTO, pk_filial, descricao, FK_CENTROCUSTO from setores 
 where pk_empresa = :empresa and pk_filial = :filial and PK_DEPTO = :depto
 order by descricao
 into :S_EMPRESA, :FILIAL,:S_DEPTO,:S_SETOR,:DESCRICAO, :CENTROCUSTO;
  /* code */
end ^^
ALTER PROCEDURE SP_FILLCACHE AS 
DECLARE VARIABLE SQL VARCHAR(200);
DECLARE VARIABLE CNT INTEGER;
BEGIN
 FOR
  SELECT RDB$RELATIONS.RDB$RELATION_NAME
   FROM RDB$RELATIONS
   INTO :SQL DO
 BEGIN
  SQL = 'SELECT COUNT(*) FROM ' || :SQL;
  EXECUTE STATEMENT :SQL INTO :CNT;
 END
END ^^
ALTER PROCEDURE SP_GETCHARCOUNT (
  ATEXTO VarChar(4000), 
  ACHAR VarChar(10))
 returns (
  RESULT Numeric(5,0)) AS 
DECLARE VARIABLE I INTEGER;
DECLARE VARIABLE LEN INTEGER;
DECLARE VARIABLE LEN2 INTEGER;
DECLARE VARIABLE LTEXTO VARCHAR(4000);
BEGIN
 
 
 
 RESULT = 0;
 I = 1;
 LEN = CHARACTER_LENGTH(ATEXTO);
 LEN2 = CHARACTER_LENGTH(ACHAR);
 WHILE (I <= LEN) DO
 BEGIN
  LTEXTO = SUBSTRING(ATEXTO FROM I FOR LEN2);
  IF (LTEXTO = ACHAR) THEN
  BEGIN
   RESULT = RESULT + 1;
   I = I + LEN2;
  END
  ELSE
  BEGIN
   I = I + 1;
  END
 END
 SUSPEND;
END ^^
ALTER PROCEDURE SP_GETCLASSIFCONTAB (
  ACLASSIFCONTAB VarChar(30))
 returns (
  RESULT VarChar(30)) AS 
DECLARE VARIABLE I INTEGER;
DECLARE VARIABLE LEN INTEGER;
DECLARE VARIABLE LTEXTO VARCHAR(30);
DECLARE VARIABLE CARACTER CHAR(1);
DECLARE VARIABLE LCLASSIFCONTAB VARCHAR(30);
DECLARE VARIABLE QTDDIGITOS INTEGER;
DECLARE VARIABLE ACHOUPONTO INTEGER;
BEGIN 
 
 IF (ACLASSIFCONTAB IS NULL) THEN
 BEGIN
  RESULT = '';
  EXIT;
 END

 
 ACHOUPONTO = -1;
 
 QTDDIGITOS =0;
 LCLASSIFCONTAB = ACLASSIFCONTAB;
 CARACTER = '';
 RESULT = '';
 LEN = CHARACTER_LENGTH(ACLASSIFCONTAB);
 I = LEN;

 
 WHILE (LCLASSIFCONTAB IS NOT NULL AND LCLASSIFCONTAB <> '') DO
 BEGIN
  
  CARACTER = SUBSTRING(LCLASSIFCONTAB FROM 1 FOR 1);
  
  IF (CARACTER <> '.' ) THEN
  BEGIN
   
   QTDDIGITOS = QTDDIGITOS + 1;
   
   IF (QTDDIGITOS > 3 ) THEN
    BREAK;
  END
  ELSE
  BEGIN
   ACHOUPONTO = 1;
   
   IF (CARACTER = '.' AND QTDDIGITOS <= 3 ) THEN
    QTDDIGITOS = 0;
   
   ELSE
    BREAK;
  END
  
  LCLASSIFCONTAB = SUBSTRING(LCLASSIFCONTAB FROM 2 FOR 100);
 END
 
 
 IF ((QTDDIGITOS > 3) OR (ACHOUPONTO = - 1)) THEN
 BEGIN
  
  RESULT = SUBSTRING(ACLASSIFCONTAB FROM 1 FOR I - 1);
  
  LEN = CHARACTER_LENGTH(RESULT);
  
  IF (LEN > 0) THEN
  BEGIN
   IF (SUBSTRING(RESULT FROM LEN FOR 1) = '.' ) THEN
    RESULT = SUBSTRING(RESULT FROM 1 FOR LEN - 1);
  END
 END
 ELSE
 BEGIN
  
  WHILE (I >= 1) DO
  BEGIN
   
   LTEXTO = SUBSTRING(ACLASSIFCONTAB FROM I FOR 1);
   
   IF (LTEXTO = '.') THEN
   BEGIN
    
    RESULT = SUBSTRING(ACLASSIFCONTAB FROM 1 FOR I - 1);
    BREAK;
   END
   ELSE
   BEGIN
    
    I = I - 1;
   END
  END
 END
 SUSPEND;
END ^^
ALTER PROCEDURE SP_GETPOSCHAR (
  ATEXTO VarChar(4000), 
  ACHAR VarChar(10))
 returns (
  RESULT Numeric(5,0)) AS 
DECLARE VARIABLE I INTEGER;
DECLARE VARIABLE LEN INTEGER;
DECLARE VARIABLE LEN2 INTEGER;
DECLARE VARIABLE LTEXTO VARCHAR(4000);
BEGIN
 
 RESULT = 0;
 I = 1;
 LEN = CHARACTER_LENGTH(ATEXTO);
 LEN2 = CHARACTER_LENGTH(ACHAR);
 WHILE (I <= LEN) DO
 BEGIN
  LTEXTO = SUBSTRING(ATEXTO FROM I FOR LEN2);
  IF (LTEXTO = ACHAR) THEN
  BEGIN
   RESULT = I;
   BREAK;
  END
  ELSE
  BEGIN
   I = I + 1;
  END
 END
 SUSPEND;
END ^^
ALTER PROCEDURE SP_SET_STATISTICS AS 
DECLARE VARIABLE INDEXNAME VARCHAR(50);
BEGIN
 FOR SELECT RDB$INDICES.RDB$INDEX_NAME
    FROM RDB$INDICES
    WHERE RDB$INDICES.RDB$INDEX_NAME NOT LIKE 'RDB$%'
    ORDER BY RDB$INDICES.RDB$INDEX_NAME
    INTO :INDEXNAME
 DO
 BEGIN
  EXECUTE STATEMENT 'SET STATISTICS INDEX ' || :INDEXNAME;
 END
END ^^
ALTER PROCEDURE SP_TEXTSOCHARNAOALFANUM (
  ATEXTO VarChar(4000))
 returns (
  RESULT Numeric(5,0)) AS 
DECLARE VARIABLE LI INTEGER;
DECLARE VARIABLE LINRCHAR INTEGER;
DECLARE VARIABLE LILEN INTEGER;
DECLARE VARIABLE LSCHAR VARCHAR(4000);
BEGIN
 
 
 RESULT = 0;
 LINRCHAR = 0;
 LI = 1;
 LILEN = CHARACTER_LENGTH(ATEXTO);
 WHILE (LI <= LILEN) DO
 BEGIN
  LSCHAR = SUBSTRING(ATEXTO FROM LI FOR 1);
  
  
  IF (NOT(
   ((ASCII_VAL(LSCHAR) >= 48) AND
   (ASCII_VAL(LSCHAR) <= 57)) OR
   ((ASCII_VAL(LSCHAR) >= 65) AND
   (ASCII_VAL(LSCHAR) <= 90)) OR
   ((ASCII_VAL(LSCHAR) >= 97) AND
   (ASCII_VAL(LSCHAR) <= 122)))) THEN
   LINRCHAR = LINRCHAR + 1;
  LI = LI + 1;
 END
 
 IF (LINRCHAR = LILEN) THEN
  RESULT = 1;

 SUSPEND;
END ^^
ALTER PROCEDURE SP_TEXTSOCHARNUM (
  ATEXTO VarChar(4000))
 returns (
  RESULT Numeric(5,0)) AS 
DECLARE VARIABLE LI INTEGER;
DECLARE VARIABLE LINRCHAR INTEGER;
DECLARE VARIABLE LILEN INTEGER;
DECLARE VARIABLE LSCHAR VARCHAR(4000);
BEGIN
 
 
 RESULT = 0;
 LINRCHAR = 0;
 LI = 1;
 LILEN = CHARACTER_LENGTH(ATEXTO);
 WHILE (LI <= LILEN) DO
 BEGIN
  LSCHAR = SUBSTRING(ATEXTO FROM LI FOR 1);
  
  
  IF ((ASCII_VAL(LSCHAR) >= 48) AND
   (ASCII_VAL(LSCHAR) <= 57)) THEN
   LINRCHAR = LINRCHAR + 1;
  LI = LI + 1;
 END
 
 IF (LINRCHAR = LILEN) THEN
  RESULT = 1;

 SUSPEND;
END ^^
ALTER PROCEDURE SP_TEXTSOCOMMESMOCHAR (
  ATEXTO VarChar(4000), 
  ACHAR VarChar(10))
 returns (
  RESULT Numeric(5,0)) AS 
DECLARE VARIABLE LI INTEGER;
DECLARE VARIABLE LINRCHAR INTEGER;
DECLARE VARIABLE LILEN INTEGER;
DECLARE VARIABLE LILEN2 INTEGER;
DECLARE VARIABLE LSCHAR VARCHAR(4000);
BEGIN
 
 
 RESULT = 0;
 LINRCHAR = 0;
 LI = 1;
 LILEN = CHARACTER_LENGTH(ATEXTO);
 LILEN2 = CHARACTER_LENGTH(ACHAR);
 WHILE (LI < LILEN) DO
 BEGIN
  LSCHAR = SUBSTRING(ATEXTO FROM LI FOR LILEN2);
  IF (LSCHAR <> ACHAR) THEN
   LINRCHAR = LINRCHAR + 1;
  LI = LI + LILEN2;
 END
 
 IF (LINRCHAR > 0) THEN
  RESULT = 1;

 SUSPEND;
END ^^
ALTER PROCEDURE VALIDA_USUARIOWEB (
  LOGIN VarChar(50) CHARACTER SET NONE, 
  SENHA VarChar(50) CHARACTER SET NONE)
 returns (
  VALIDOU VarChar(10) CHARACTER SET NONE) AS 
BEGIN
  SUSPEND;
END ^^
SET TERM ; ^^
